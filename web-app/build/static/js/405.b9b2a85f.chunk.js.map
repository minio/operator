{"version":3,"file":"static/js/405.b9b2a85f.chunk.js","mappings":"oIAkBA,MAQA,GAReA,E,SAAAA,GAAO,KAAPA,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8H,qQCmC3B,MA+RMC,GAAYC,EAAAA,EAAAA,KANAC,IAAe,CAC/BC,cAAeD,EAAME,QAAQD,cAC7BE,eAAgBH,EAAME,QAAQE,cAC9BC,OAAQL,EAAME,QAAQI,cAGY,MAEpC,GAAeC,EAAAA,EAAAA,IAjSCC,IACdC,EAAAA,EAAAA,GAAa,IACRC,EAAAA,MACAC,EAAAA,GACHC,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,eAAgB,aAChB,eAAgB,CACdC,aAAc,GAEhB,4BAA6B,CAC3BC,KAAM,EAEN,cAAe,CACbC,SAAU,MAIhBC,WAAY,CACVN,QAAS,OACTE,eAAgB,WAChB,4BAA6B,CAC3BE,KAAM,IAGVG,cAAe,CACbC,WAAY,GACZ,QAAS,CACPC,MAAO,GACPC,OAAQ,GACRC,SAAU,GACVC,UAAW,IAEb,WAAY,CACVC,WAAY,YAGhBC,YAAa,CACXC,UAAW,UAEbC,SAAU,CACRC,YAAa,GACbjB,QAAS,OACT,cAAe,CACbK,SAAU,IAGZ,4BAA6B,CAC3Ba,SAAU,cAGXC,EAAAA,MACAC,EAAAA,MACAC,EAAAA,MACAC,EAAAA,MACAC,EAAAA,MAyOP,CAAkCtC,GAtONuC,IAAwC,IAAvC,QAAEC,GAA+BD,EAC5D,MAAME,GAAWC,EAAAA,EAAAA,MAEXnC,GAASoC,EAAAA,EAAAA,KAAazC,GAAoBA,EAAME,QAAQI,aACxDL,GAAgBwC,EAAAA,EAAAA,KACnBzC,GAAoBA,EAAME,QAAQD,iBAG9ByC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAkB,IAC7CC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAkB,IAC/CG,EAASC,IAAcJ,EAAAA,EAAAA,UAAyB,KAChDK,EAAoBC,IAAyBN,EAAAA,EAAAA,UAAmB,KAChEO,EAAaC,IAAkBR,EAAAA,EAAAA,WAAkB,GAElDS,GAA6BC,EAAAA,EAAAA,cAAY,KAC7CC,EAAAA,EACGC,OACC,MAAM,sBAADC,OACuB,OAANpD,QAAM,IAANA,OAAM,EAANA,EAAQqD,UAAS,aAAAD,OAAkB,OAANpD,QAAM,IAANA,OAAM,EAANA,EAAQsD,KAAI,mBAEhEC,MAAMC,IACDA,EAAIC,uBACNd,EAAWa,EAAIC,sBACfV,EAAeS,EAAIV,aACrB,IAEDY,OAAOC,IACNzB,GAAS0B,EAAAA,EAAAA,IAAqBD,GAAK,GACnC,GACH,CAAC3D,EAAQkC,KAEZ2B,EAAAA,EAAAA,YAAU,KACJ7D,GACFgD,GACF,GACC,CAAChD,EAAQgD,IA0BZ,OACEc,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAO,mBACPC,YAAa,UACbC,WAAW,SACXC,WAAWL,EAAAA,EAAAA,KAACM,EAAAA,IAAgB,IAC5BC,UAAWnC,EACXoC,QAASA,IAAMhC,GAAc,GAC7BiC,OAAQlC,EACRmC,UAlC4BC,KAChCtC,GAAa,GACb,IAAIuC,EAAuC,CACzCpB,qBAAsBf,EAAQoC,QAAQC,GAAoB,KAAZA,EAAIC,MAClDC,gBAAiBrC,EACjBE,YAAaA,GAEfI,EAAAA,EACGC,OACC,QAAQ,sBAADC,OACqB,OAANpD,QAAM,IAANA,OAAM,EAANA,EAAQqD,UAAS,aAAAD,OAAkB,OAANpD,QAAM,IAANA,OAAM,EAANA,EAAQsD,KAAI,kBAC/DuB,GAEDtB,MAAK,KACJjB,GAAa,GACbG,GAAc,GACdO,GAA4B,IAE7BU,OAAOC,IACNzB,GAAS0B,EAAAA,EAAAA,IAAqBD,IAC9BrB,GAAa,EAAM,GACnB,EAcA4C,qBACEjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAiB,CAAAnB,SAAC,yEAKtBpE,GACCqE,EAAAA,EAAAA,KAAA,OAAKmB,UAAWnD,EAAQX,YAAY0C,UAClCC,EAAAA,EAAAA,KAACoB,EAAAA,IAAM,OAGTvB,EAAAA,EAAAA,MAACwB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAExB,SAAA,EACzBF,EAAAA,EAAAA,MAACwB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG1B,SAAA,EAChBC,EAAAA,EAAAA,KAAA,MAAImB,UAAWnD,EAAQ0D,aAAa3B,SAAC,mBACrCC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,QAET3B,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAExB,SACxBtB,EAAQmD,KAAI,CAACC,EAAQC,KACpBjC,EAAAA,EAAAA,MAACwB,EAAAA,GAAI,CACHG,MAAI,EACJC,GAAI,GACJN,UAAS,GAAAhC,OAAKnB,EAAQ+D,aAAY,KAAA5C,OAAInB,EAAQ1B,WAAYyD,SAAA,EAG1DC,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGN,UAAWnD,EAAQT,SAASwC,UAC5CC,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CACdC,GAAG,cACH5C,KAAK,cACL6C,MAAM,MACNC,MAAON,EAAOd,IACdqB,SAAWC,IACT,MAAMC,EAAkB,IAAI7D,GAE5BC,EACE4D,EAAgBV,KAAI,CAACW,EAASC,IAC5BA,IAAMV,EACF,CAAEf,IAAKsB,EAAEI,OAAON,MAAOA,MAAOI,EAAQJ,OACtCI,IAEP,EAEHT,MAAOA,GAAM,eAAA3C,OACO2C,EAAMY,gBAG9B1C,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGN,UAAWnD,EAAQT,SAASwC,UAC5CC,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CACdC,GAAG,gBACH5C,KAAK,gBACL6C,MAAM,QACNC,MAAON,EAAOM,MACdC,SAAWC,IACT,MAAMC,EAAkB,IAAI7D,GAC5BC,EACE4D,EAAgBV,KAAI,CAACW,EAASC,IAC5BA,IAAMV,EACF,CAAEf,IAAKwB,EAAQxB,IAAKoB,MAAOE,EAAEI,OAAON,OACpCI,IAEP,EAEHT,MAAOA,EAEPa,KACEC,EAAAA,GAAqBf,EAAOd,MAC5B6B,EAAAA,GAAqBf,EAAOd,KAAK8B,OAC7B,WACA,QACL,iBAAA1D,OANqB2C,EAAMY,gBAShC7C,EAAAA,EAAAA,MAACwB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGN,UAAWnD,EAAQnB,WAAWkD,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,OAAKmB,UAAWnD,EAAQlB,cAAciD,UACpCC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CACTC,KAAM,QACNC,QAASA,KACP,MAAMV,EAAkB,IAAI7D,GAC5B6D,EAAgBW,KAAK,CAAElC,IAAK,GAAIoB,MAAO,KAEvCzD,EAAW4D,EAAgB,EAE7BY,SAAUpB,IAAUrD,EAAQ0E,OAAS,EAAEpD,UAEvCC,EAAAA,EAAAA,KAACoD,EAAAA,EAAO,SAGZpD,EAAAA,EAAAA,KAAA,OAAKmB,UAAWnD,EAAQlB,cAAciD,UACpCC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAU,CACTC,KAAM,QACNC,QAASA,KACP,MAAMV,EAAkB7D,EAAQoC,QAC9B,CAACW,EAAM6B,IAAWA,IAAWvB,IAE/BpD,EAAW4D,GACX1D,EAAsB,IACjBD,EACHkD,EAAOd,KACP,EAEJmC,SAAUzE,EAAQ0E,QAAU,EAAEpD,UAE9BC,EAAAA,EAAAA,KAACsD,EAAAA,IAAU,aAGV,iBAAAnE,OAlFe2C,EAAMY,kBAsFlC1C,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAExB,UACzBC,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CACHG,MAAI,EACJC,GAAI,GACJhF,eAAgB,MAChBa,UAAW,QACX6D,UAAWnD,EAAQuF,kBAAkBxD,UAErCC,EAAAA,EAAAA,KAACwD,EAAAA,EAAiB,CAChBtB,MAAO,OACPuB,gBAAiB,CAAC,UAAW,YAC7BC,QAAS7E,EACTsD,MAAO,cACPF,GAAG,cACH5C,KAAK,cACL+C,SAAUA,KACRtD,GAAgBD,EAAY,EAE9B8E,YAAY,UAIlB3D,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CACHG,MAAI,EACJC,GAAI,GACJmC,GAAI,CAAErH,QAAS,OAAQE,eAAgB,YAAasD,UAEpDC,EAAAA,EAAAA,KAAC6D,EAAAA,IAAM,CACL5B,GAAI,6BACJU,KAAK,SACLmB,QAAQ,aACRZ,SAAU3E,GAAcH,EACxB4E,QAASA,IAAMxE,GAAc,GAC7B0D,MAAO,gBAKA,I,sBCxUjB6B,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,wCACD,OACJN,EAAQ,EAAUG,C","sources":["screens/Console/Common/FormHr.tsx","screens/Console/Tenants/TenantDetails/TenantConfiguration.tsx","../node_modules/@mui/icons-material/Add.js"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport styled from \"@emotion/styled\";\n\nconst FormHr = styled(\"hr\")`\n  border-top: 0;\n  border-left: 0;\n  border-right: 0;\n  border-color: #999999;\n  background-color: transparent;\n`;\n\nexport default FormHr;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { DialogContentText, IconButton } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { Button, ConfirmModalIcon, Loader, RemoveIcon } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  ITenantConfigurationRequest,\n  ITenantConfigurationResponse,\n  LabelKeyPair,\n} from \"../types\";\nimport {\n  containerForHeader,\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  spacingUtils,\n  tenantDetailsStyles,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport api from \"../../../../common/api\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { MinIOEnvVarsSettings } from \"../../../../common/utils\";\nimport FormHr from \"../../Common/FormHr\";\n\ninterface ITenantConfiguration {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...spacingUtils,\n    envVarRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        width: 15,\n        height: 15,\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...containerForHeader,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantConfiguration = ({ classes }: ITenantConfiguration) => {\n  const dispatch = useAppDispatch();\n\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant,\n  );\n\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n  const [envVars, setEnvVars] = useState<LabelKeyPair[]>([]);\n  const [envVarsToBeDeleted, setEnvVarsToBeDeleted] = useState<string[]>([]);\n  const [sftpExposed, setSftpEnabled] = useState<boolean>(false);\n\n  const getTenantConfigurationInfo = useCallback(() => {\n    api\n      .invoke(\n        \"GET\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/configuration`,\n      )\n      .then((res: ITenantConfigurationResponse) => {\n        if (res.environmentVariables) {\n          setEnvVars(res.environmentVariables);\n          setSftpEnabled(res.sftpExposed);\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  }, [tenant, dispatch]);\n\n  useEffect(() => {\n    if (tenant) {\n      getTenantConfigurationInfo();\n    }\n  }, [tenant, getTenantConfigurationInfo]);\n\n  const updateTenantConfiguration = () => {\n    setIsSending(true);\n    let payload: ITenantConfigurationRequest = {\n      environmentVariables: envVars.filter((env) => env.key !== \"\"),\n      keysToBeDeleted: envVarsToBeDeleted,\n      sftpExposed: sftpExposed,\n    };\n    api\n      .invoke(\n        \"PATCH\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/configuration`,\n        payload,\n      )\n      .then(() => {\n        setIsSending(false);\n        setDialogOpen(false);\n        getTenantConfigurationInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        setIsSending(false);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <ConfirmDialog\n        title={\"Save and Restart\"}\n        confirmText={\"Restart\"}\n        cancelText=\"Cancel\"\n        titleIcon={<ConfirmModalIcon />}\n        isLoading={isSending}\n        onClose={() => setDialogOpen(false)}\n        isOpen={dialogOpen}\n        onConfirm={updateTenantConfiguration}\n        confirmationContent={\n          <DialogContentText>\n            Are you sure you want to save the changes and restart the service?\n          </DialogContentText>\n        }\n      />\n      {loadingTenant ? (\n        <div className={classes.loaderAlign}>\n          <Loader />\n        </div>\n      ) : (\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <h1 className={classes.sectionTitle}>Configuration</h1>\n            <FormHr />\n          </Grid>\n          <Grid container spacing={1}>\n            {envVars.map((envVar, index) => (\n              <Grid\n                item\n                xs={12}\n                className={`${classes.formFieldRow} ${classes.envVarRow}`}\n                key={`tenant-envVar-${index.toString()}`}\n              >\n                <Grid item xs={5} className={classes.fileItem}>\n                  <InputBoxWrapper\n                    id=\"env_var_key\"\n                    name=\"env_var_key\"\n                    label=\"Key\"\n                    value={envVar.key}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      const existingEnvVars = [...envVars];\n\n                      setEnvVars(\n                        existingEnvVars.map((keyPair, i) =>\n                          i === index\n                            ? { key: e.target.value, value: keyPair.value }\n                            : keyPair,\n                        ),\n                      );\n                    }}\n                    index={index}\n                    key={`env_var_key_${index.toString()}`}\n                  />\n                </Grid>\n                <Grid item xs={5} className={classes.fileItem}>\n                  <InputBoxWrapper\n                    id=\"env_var_value\"\n                    name=\"env_var_value\"\n                    label=\"Value\"\n                    value={envVar.value}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      const existingEnvVars = [...envVars];\n                      setEnvVars(\n                        existingEnvVars.map((keyPair, i) =>\n                          i === index\n                            ? { key: keyPair.key, value: e.target.value }\n                            : keyPair,\n                        ),\n                      );\n                    }}\n                    index={index}\n                    key={`env_var_value_${index.toString()}`}\n                    type={\n                      MinIOEnvVarsSettings[envVar.key] &&\n                      MinIOEnvVarsSettings[envVar.key].secret\n                        ? \"password\"\n                        : \"text\"\n                    }\n                  />\n                </Grid>\n                <Grid item xs={2} className={classes.rowActions}>\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      size={\"small\"}\n                      onClick={() => {\n                        const existingEnvVars = [...envVars];\n                        existingEnvVars.push({ key: \"\", value: \"\" });\n\n                        setEnvVars(existingEnvVars);\n                      }}\n                      disabled={index !== envVars.length - 1}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </div>\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      size={\"small\"}\n                      onClick={() => {\n                        const existingEnvVars = envVars.filter(\n                          (item, fIndex) => fIndex !== index,\n                        );\n                        setEnvVars(existingEnvVars);\n                        setEnvVarsToBeDeleted([\n                          ...envVarsToBeDeleted,\n                          envVar.key,\n                        ]);\n                      }}\n                      disabled={envVars.length <= 1}\n                    >\n                      <RemoveIcon />\n                    </IconButton>\n                  </div>\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid\n              item\n              xs={12}\n              justifyContent={\"end\"}\n              textAlign={\"right\"}\n              className={classes.configSectionItem}\n            >\n              <FormSwitchWrapper\n                label={\"SFTP\"}\n                indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                checked={sftpExposed}\n                value={\"expose_sftp\"}\n                id=\"expose-sftp\"\n                name=\"expose-sftp\"\n                onChange={() => {\n                  setSftpEnabled(!sftpExposed);\n                }}\n                description=\"\"\n              />\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <Button\n              id={\"save-environment-variables\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              disabled={dialogOpen || isSending}\n              onClick={() => setDialogOpen(true)}\n              label={\"Save\"}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.loadingTenant,\n  selectedTenant: state.tenants.currentTenant,\n  tenant: state.tenants.tenantInfo,\n});\n\nconst connector = connect(mapState, null);\n\nexport default withStyles(styles)(connector(TenantConfiguration));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;"],"names":["styled","_templateObject","_taggedTemplateLiteral","connector","connect","state","loadingTenant","tenants","selectedTenant","currentTenant","tenant","tenantInfo","withStyles","theme","createStyles","tenantDetailsStyles","spacingUtils","envVarRow","display","alignItems","justifyContent","borderBottom","flex","minWidth","rowActions","overlayAction","marginLeft","width","height","maxWidth","maxHeight","background","loaderAlign","textAlign","fileItem","marginRight","flexFlow","containerForHeader","createTenantCommon","formFieldStyles","modalBasic","wizardCommon","_ref","classes","dispatch","useAppDispatch","useSelector","isSending","setIsSending","useState","dialogOpen","setDialogOpen","envVars","setEnvVars","envVarsToBeDeleted","setEnvVarsToBeDeleted","sftpExposed","setSftpEnabled","getTenantConfigurationInfo","useCallback","api","invoke","concat","namespace","name","then","res","environmentVariables","catch","err","setErrorSnackMessage","useEffect","_jsxs","React","children","_jsx","ConfirmDialog","title","confirmText","cancelText","titleIcon","ConfirmModalIcon","isLoading","onClose","isOpen","onConfirm","updateTenantConfiguration","payload","filter","env","key","keysToBeDeleted","confirmationContent","DialogContentText","className","Loader","Grid","container","spacing","item","xs","sectionTitle","FormHr","map","envVar","index","formFieldRow","InputBoxWrapper","id","label","value","onChange","e","existingEnvVars","keyPair","i","target","toString","type","MinIOEnvVarsSettings","secret","IconButton","size","onClick","push","disabled","length","AddIcon","fIndex","RemoveIcon","configSectionItem","FormSwitchWrapper","indicatorLabels","checked","description","sx","Button","variant","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}