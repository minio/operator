{"version":3,"file":"static/js/33.a6099543.chunk.js","mappings":"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","sources":["screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/Components/withSuspense.tsx","screens/Console/Common/TooltipWrapper/TooltipWrapper.tsx","screens/Console/Tenants/ListTenants/InformationItem.tsx","screens/Console/Tenants/ListTenants/TenantListItem.tsx","screens/Console/Common/VirtualizedList/VirtualizedList.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Tenants/ListTenants/ListTenants.tsx","screens/Console/Common/UsageBar/UsageBar.tsx","screens/Console/Tenants/ListTenants/TenantCapacity.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Inter, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { cloneElement } from \"react\";\nimport { Tooltip } from \"@mui/material\";\n\ninterface ITooltipWrapperProps {\n  tooltip: string;\n  children: any;\n  errorProps?: any;\n  placement?:\n    | \"bottom-end\"\n    | \"bottom-start\"\n    | \"bottom\"\n    | \"left-end\"\n    | \"left-start\"\n    | \"left\"\n    | \"right-end\"\n    | \"right-start\"\n    | \"right\"\n    | \"top-end\"\n    | \"top-start\"\n    | \"top\";\n}\n\nconst TooltipWrapper = ({\n  tooltip,\n  children,\n  errorProps = null,\n  placement,\n}: ITooltipWrapperProps) => {\n  return (\n    <Tooltip title={tooltip} placement={placement}>\n      <span>\n        {errorProps ? cloneElement(children, { ...errorProps }) : children}\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default TooltipWrapper;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\ninterface IInformationItemProps {\n  label: string;\n  value: string;\n  unit?: string;\n  variant?: \"normal\" | \"faded\";\n}\n\nconst InformationItem = ({\n  label,\n  value,\n  unit,\n  variant = \"normal\",\n}: IInformationItemProps) => {\n  return (\n    <div style={{ margin: \"0px 20px\" }}>\n      <div style={{ textAlign: \"center\" }}>\n        <span\n          style={{\n            fontSize: 18,\n            color: variant === \"normal\" ? \"#000\" : \"#999\",\n            fontWeight: 400,\n          }}\n        >\n          {value}\n        </span>\n        {unit && (\n          <Fragment>\n            {\" \"}\n            <span\n              style={{ fontSize: 12, color: \"#8F9090\", fontWeight: \"bold\" }}\n            >\n              {unit}\n            </span>\n          </Fragment>\n        )}\n      </div>\n      <div\n        style={{\n          textAlign: \"center\",\n          color: variant === \"normal\" ? \"#767676\" : \"#bababa\",\n          fontSize: 12,\n          whiteSpace: \"nowrap\",\n        }}\n      >\n        {label}\n      </div>\n    </div>\n  );\n};\n\nexport default InformationItem;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport { CapacityValues, ValueUnit } from \"./types\";\nimport { setTenantName } from \"../tenantsSlice\";\nimport { getTenantAsync } from \"../thunks/tenantDetailsAsync\";\nimport { DrivesIcon } from \"mds\";\nimport { niceBytes, niceBytesInt } from \"../../../../common/utils\";\nimport Grid from \"@mui/material/Grid\";\nimport InformationItem from \"./InformationItem\";\nimport TenantCapacity from \"./TenantCapacity\";\nimport { useAppDispatch } from \"../../../../store\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { TenantList } from \"../../../../api/operatorApi\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  redState: {\n    color: theme.palette.error.main,\n    \"& .min-icon\": {\n      width: 16,\n      height: 16,\n      float: \"left\",\n      marginRight: 4,\n    },\n  },\n  yellowState: {\n    color: theme.palette.warning.main,\n    \"& .min-icon\": {\n      width: 16,\n      height: 16,\n      float: \"left\",\n      marginRight: 4,\n    },\n  },\n  greenState: {\n    color: theme.palette.success.main,\n    \"& .min-icon\": {\n      width: 16,\n      height: 16,\n      float: \"left\",\n      marginRight: 4,\n    },\n  },\n  greyState: {\n    color: \"grey\",\n    \"& .min-icon\": {\n      width: 16,\n      height: 16,\n      float: \"left\",\n      marginRight: 4,\n    },\n  },\n  tenantItem: {\n    border: \"1px solid #EAEAEA\",\n    marginBottom: 16,\n    padding: \"15px 30px\",\n    \"&:hover\": {\n      backgroundColor: \"#FAFAFA\",\n      cursor: \"pointer\",\n    },\n  },\n  titleContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  namespaceLabel: {\n    display: \"inline-flex\",\n    backgroundColor: \"#EAEDEF\",\n    borderRadius: 2,\n    padding: \"4px 8px\",\n    fontSize: 10,\n    marginRight: 20,\n  },\n  status: {\n    fontSize: 12,\n    color: \"#8F9090\",\n  },\n}));\n\nconst TenantListItem = ({ tenant }: { tenant: TenantList }) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const healthStatusToClass = (health_status: string) => {\n    switch (health_status) {\n      case \"red\":\n        return classes.redState;\n      case \"yellow\":\n        return classes.yellowState;\n      case \"green\":\n        return classes.greenState;\n      default:\n        return classes.greyState;\n    }\n  };\n\n  let raw: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let capacity: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let used: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let localUse: ValueUnit = { value: \"n/a\", unit: \"\" };\n  let tieredUse: ValueUnit = { value: \"n/a\", unit: \"\" };\n\n  if (tenant.capacity_raw) {\n    const b = niceBytes(`${tenant.capacity_raw}`, true);\n    const parts = b.split(\" \");\n    raw.value = parts[0];\n    raw.unit = parts[1];\n  }\n  if (tenant.capacity) {\n    const b = niceBytes(`${tenant.capacity}`, true);\n    const parts = b.split(\" \");\n    capacity.value = parts[0];\n    capacity.unit = parts[1];\n  }\n  if (tenant.capacity_usage) {\n    const b = niceBytesInt(tenant.capacity_usage, true);\n    const parts = b.split(\" \");\n    used.value = parts[0];\n    used.unit = parts[1];\n  }\n\n  let spaceVariants: CapacityValues[] = [];\n  if (!tenant.tiers || tenant.tiers.length === 0) {\n    spaceVariants = [\n      { value: tenant.capacity_usage || 0, variant: \"STANDARD\" },\n    ];\n  } else {\n    spaceVariants = tenant.tiers?.map((itemTenant) => {\n      return { value: itemTenant.size!, variant: itemTenant.name! };\n    });\n    let internalUsage = tenant.tiers\n      ?.filter((itemTenant) => {\n        return itemTenant.type === \"internal\";\n      })\n      .reduce((sum, itemTenant) => sum + itemTenant.size!, 0);\n    let tieredUsage = tenant.tiers\n      .filter((itemTenant) => {\n        return itemTenant.type !== \"internal\";\n      })\n      .reduce((sum, itemTenant) => sum + itemTenant.size!, 0);\n\n    const t = niceBytesInt(tieredUsage, true);\n    const parts = t.split(\" \");\n    tieredUse.value = parts[0];\n    tieredUse.unit = parts[1];\n\n    const is = niceBytesInt(internalUsage, true);\n    const partsInternal = is.split(\" \");\n    localUse.value = partsInternal[0];\n    localUse.unit = partsInternal[1];\n  }\n\n  const openTenantDetails = () => {\n    dispatch(\n      setTenantName({\n        name: tenant.name!,\n        namespace: tenant.namespace!,\n      })\n    );\n    dispatch(getTenantAsync());\n    navigate(`/namespaces/${tenant.namespace}/tenants/${tenant.name}/summary`);\n  };\n\n  return (\n    <Fragment>\n      <div\n        className={classes.tenantItem}\n        id={`list-tenant-${tenant.name}`}\n        onClick={openTenantDetails}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.titleContainer}>\n            <div className={classes.title}>\n              <span>{tenant.name}</span>\n            </div>\n            <div>\n              <span className={classes.namespaceLabel}>\n                Namespace:&nbsp;{tenant.namespace}\n              </span>\n            </div>\n          </Grid>\n          <Grid item xs={12} sx={{ marginTop: 2 }}>\n            <Grid container>\n              <Grid item xs={2}>\n                <TenantCapacity\n                  totalCapacity={tenant.capacity || 0}\n                  usedSpaceVariants={spaceVariants}\n                  statusClass={healthStatusToClass(tenant.health_status!)}\n                />\n              </Grid>\n              <Grid item xs>\n                <Grid\n                  item\n                  xs\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                    marginTop: \"10px\",\n                  }}\n                >\n                  <InformationItem\n                    label={\"Raw Capacity\"}\n                    value={raw.value}\n                    unit={raw.unit}\n                  />\n                  <InformationItem\n                    label={\"Usable Capacity\"}\n                    value={capacity.value}\n                    unit={capacity.unit}\n                  />\n                  <InformationItem\n                    label={\"Pools\"}\n                    value={`${tenant.pool_count}`}\n                    variant={\"faded\"}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ paddingLeft: \"20px\", marginTop: \"15px\" }}\n                >\n                  <span className={classes.status}>\n                    <strong>State:</strong> {tenant.currentState}\n                  </span>\n                </Grid>\n              </Grid>\n              <Grid item xs={3}>\n                <Fragment>\n                  <Grid container>\n                    <Grid\n                      item\n                      xs={2}\n                      textAlign={\"center\"}\n                      justifyContent={\"center\"}\n                      justifyItems={\"center\"}\n                    >\n                      <DrivesIcon\n                        style={{ width: 25, color: \"rgb(91,91,91)\" }}\n                      />\n                      <div\n                        style={{\n                          color: \"rgb(118, 118, 118)\",\n                          fontSize: 12,\n                          fontWeight: \"400\",\n                        }}\n                      >\n                        Usage\n                      </div>\n                    </Grid>\n                    <Grid item xs={1} />\n                    <Grid item style={{ paddingTop: 8 }}>\n                      {(!tenant.tiers || tenant.tiers.length === 0) && (\n                        <div\n                          style={{\n                            fontSize: 14,\n                            fontWeight: 400,\n                          }}\n                        >\n                          <span\n                            style={{\n                              color: \"rgb(62,62,62)\",\n                            }}\n                          >\n                            Internal:{\" \"}\n                          </span>{\" \"}\n                          {`${used.value} ${used.unit}`}\n                        </div>\n                      )}\n\n                      {tenant.tiers && tenant.tiers.length > 0 && (\n                        <Fragment>\n                          <div\n                            style={{\n                              fontSize: 14,\n                              fontWeight: 400,\n                            }}\n                          >\n                            <span\n                              style={{\n                                color: \"rgb(62,62,62)\",\n                              }}\n                            >\n                              Internal:{\" \"}\n                            </span>{\" \"}\n                            {`${localUse.value} ${localUse.unit}`}\n                          </div>\n                          <div\n                            style={{\n                              fontSize: 14,\n                              fontWeight: 400,\n                            }}\n                          >\n                            <span\n                              style={{\n                                color: \"rgb(62,62,62)\",\n                              }}\n                            >\n                              Tiered:{\" \"}\n                            </span>{\" \"}\n                            {`${tieredUse.value} ${tieredUse.unit}`}\n                          </div>\n                        </Fragment>\n                      )}\n                    </Grid>\n                  </Grid>\n                </Fragment>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default TenantListItem;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, ReactElement } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport { AutoSizer } from \"react-virtualized\";\n\ninterface IVirtualizedList {\n  rowRenderFunction: (index: number) => ReactElement | null;\n  totalItems: number;\n  defaultHeight?: number;\n}\n\nlet itemStatusMap: any = {};\nconst LOADING = 1;\nconst LOADED = 2;\n\nconst VirtualizedList = ({\n  rowRenderFunction,\n  totalItems,\n  defaultHeight,\n}: IVirtualizedList) => {\n  const isItemLoaded = (index: any) => !!itemStatusMap[index];\n\n  const loadMoreItems = (startIndex: number, stopIndex: number) => {\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADING;\n    }\n\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADED;\n    }\n  };\n\n  const RenderItemLine = ({ index, style }: any) => {\n    return <div style={style}>{rowRenderFunction(index)}</div>;\n  };\n\n  return (\n    <Fragment>\n      <InfiniteLoader\n        isItemLoaded={isItemLoaded}\n        loadMoreItems={loadMoreItems}\n        itemCount={totalItems}\n      >\n        {({ onItemsRendered, ref }) => (\n          // @ts-ignore\n          <AutoSizer>\n            {({ width, height }) => {\n              return (\n                <List\n                  itemSize={defaultHeight || 220}\n                  height={height}\n                  itemCount={totalItems}\n                  width={width}\n                  ref={ref}\n                  onItemsRendered={onItemsRendered}\n                >\n                  {RenderItemLine}\n                </List>\n              );\n            }}\n          </AutoSizer>\n        )}\n      </InfiniteLoader>\n    </Fragment>\n  );\n};\n\nexport default VirtualizedList;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { SearchIcon } from \"mds\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { AddIcon, Button, HelpBox, RefreshIcon, TenantsIcon } from \"mds\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { NewServiceAccount } from \"../../Common/CredentialsPrompt/types\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport TenantListItem from \"./TenantListItem\";\nimport AButton from \"../../Common/AButton/AButton\";\n\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../../store\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { api } from \"../../../../api\";\nimport {\n  Error,\n  HttpResponse,\n  ListTenantsResponse,\n  TenantList,\n} from \"../../../../api/operatorApi\";\n\nconst CredentialsPrompt = withSuspense(\n  React.lazy(() => import(\"../../Common/CredentialsPrompt/CredentialsPrompt\"))\n);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  ...actionsTray,\n  ...searchField,\n  ...containerForHeader,\n  tenantsList: {\n    height: \"calc(100vh - 195px)\",\n  },\n  sortByContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    marginBottom: 10,\n  },\n  innerSort: {\n    maxWidth: 200,\n    width: \"95%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  sortByLabel: {\n    whiteSpace: \"nowrap\",\n    fontSize: 14,\n    color: \"#838383\",\n    fontWeight: \"bold\",\n    marginRight: 10,\n  },\n}));\n\nconst ListTenants = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [filterTenants, setFilterTenants] = useState<string>(\"\");\n  const [records, setRecords] = useState<TenantList[]>([]);\n  const [showNewCredentials, setShowNewCredentials] = useState<boolean>(false);\n  const [createdAccount, setCreatedAccount] =\n    useState<NewServiceAccount | null>(null);\n  const [sortValue, setSortValue] = useState<string>(\"name\");\n\n  const closeCredentialsModal = () => {\n    setShowNewCredentials(false);\n    setCreatedAccount(null);\n  };\n\n  const filteredRecords = records.filter((b: any) => {\n    if (filterTenants === \"\") {\n      return true;\n    } else {\n      if (b.name.indexOf(filterTenants) >= 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n\n  filteredRecords.sort((a, b) => {\n    switch (sortValue) {\n      case \"capacity\":\n        if (!a.capacity || !b.capacity) {\n          return 0;\n        }\n\n        if (a.capacity > b.capacity) {\n          return 1;\n        }\n\n        if (a.capacity < b.capacity) {\n          return -1;\n        }\n\n        return 0;\n      case \"usage\":\n        if (!a.capacity_usage || !b.capacity_usage) {\n          return 0;\n        }\n\n        if (a.capacity_usage > b.capacity_usage) {\n          return 1;\n        }\n\n        if (a.capacity_usage < b.capacity_usage) {\n          return -1;\n        }\n\n        return 0;\n      case \"active_status\":\n        if (a.health_status === \"red\" && b.health_status !== \"red\") {\n          return 1;\n        }\n\n        if (a.health_status !== \"red\" && b.health_status === \"red\") {\n          return -1;\n        }\n\n        return 0;\n      case \"failing_status\":\n        if (a.health_status === \"green\" && b.health_status !== \"green\") {\n          return 1;\n        }\n\n        if (a.health_status !== \"green\" && b.health_status === \"green\") {\n          return -1;\n        }\n\n        return 0;\n      default:\n        if (a.name! > b.name!) {\n          return 1;\n        }\n        if (a.name! < b.name!) {\n          return -1;\n        }\n        return 0;\n    }\n  });\n\n  useEffect(() => {\n    if (isLoading) {\n      const fetchRecords = () => {\n        api.tenants\n          .listAllTenants()\n          .then((res: HttpResponse<ListTenantsResponse, Error>) => {\n            if (!res.data) {\n              setIsLoading(false);\n              return;\n            }\n            let resTenants: TenantList[] =\n              (res.data.tenants as TenantList[]) ?? [];\n\n            setRecords(resTenants);\n            setIsLoading(false);\n          })\n          .catch((err) => {\n            dispatch(setErrorSnackMessage(err));\n            setIsLoading(false);\n          });\n      };\n      fetchRecords();\n    }\n  }, [isLoading, dispatch]);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, []);\n\n  const renderItemLine = (index: number) => {\n    const tenant = filteredRecords[index] || null;\n\n    if (tenant) {\n      return <TenantListItem tenant={tenant} />;\n    }\n\n    return null;\n  };\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n      <PageHeaderWrapper\n        label=\"Tenants\"\n        middleComponent={\n          <SearchBox\n            placeholder={\"Filter Tenants\"}\n            onChange={(val) => {\n              setFilterTenants(val);\n            }}\n            value={filterTenants}\n          />\n        }\n        actions={\n          <Grid\n            item\n            xs={12}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <TooltipWrapper tooltip={\"Refresh Tenant List\"}>\n              <Button\n                id={\"refresh-tenant-list\"}\n                onClick={() => {\n                  setIsLoading(true);\n                }}\n                icon={<RefreshIcon />}\n                variant={\"regular\"}\n              />\n            </TooltipWrapper>\n            <TooltipWrapper tooltip={\"Create Tenant\"}>\n              <Button\n                id={\"create-tenant\"}\n                label={\"Create Tenant\"}\n                onClick={() => {\n                  navigate(\"/tenants/add\");\n                }}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </Grid>\n        }\n      />\n      <PageLayout>\n        <Grid item xs={12} className={classes.tenantsList}>\n          {isLoading && <LinearProgress />}\n          {!isLoading && (\n            <Fragment>\n              {filteredRecords.length !== 0 && (\n                <Fragment>\n                  <Grid item xs={12} className={classes.sortByContainer}>\n                    <div className={classes.innerSort}>\n                      <span className={classes.sortByLabel}>Sort by</span>\n                      <SelectWrapper\n                        id={\"sort-by\"}\n                        label={\"\"}\n                        value={sortValue}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          setSortValue(e.target.value as string);\n                        }}\n                        name={\"sort-by\"}\n                        options={[\n                          { label: \"Name\", value: \"name\" },\n                          {\n                            label: \"Capacity\",\n                            value: \"capacity\",\n                          },\n                          {\n                            label: \"Usage\",\n                            value: \"usage\",\n                          },\n                          {\n                            label: \"Active Status\",\n                            value: \"active_status\",\n                          },\n                          {\n                            label: \"Failing Status\",\n                            value: \"failing_status\",\n                          },\n                        ]}\n                      />\n                    </div>\n                  </Grid>\n                  <VirtualizedList\n                    rowRenderFunction={renderItemLine}\n                    totalItems={filteredRecords.length}\n                  />\n                </Fragment>\n              )}\n              {filteredRecords.length === 0 && (\n                <Grid\n                  container\n                  justifyContent={\"center\"}\n                  alignContent={\"center\"}\n                  alignItems={\"center\"}\n                >\n                  <Grid item xs={8}>\n                    <HelpBox\n                      iconComponent={<TenantsIcon />}\n                      title={\"Tenants\"}\n                      help={\n                        <Fragment>\n                          Tenant is the logical structure to represent a MinIO\n                          deployment. A tenant can have different size and\n                          configurations from other tenants, even a different\n                          storage class.\n                          <br />\n                          <br />\n                          To get started,&nbsp;\n                          <AButton\n                            onClick={() => {\n                              navigate(\"/tenants/add\");\n                            }}\n                          >\n                            Create a Tenant.\n                          </AButton>\n                        </Fragment>\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              )}\n            </Fragment>\n          )}\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default ListTenants;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nexport interface ISizeBarItem {\n  value: number;\n  itemName: string;\n  color: string;\n}\n\nexport interface IUsageBar {\n  totalValue: number;\n  sizeItems: ISizeBarItem[];\n  bgColor?: string;\n}\n\nconst UsageBar = ({\n  totalValue,\n  sizeItems,\n  bgColor = \"#ededed\",\n}: IUsageBar) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: 12,\n        backgroundColor: bgColor,\n        borderRadius: 30,\n        display: \"flex\",\n        transitionDuration: \"0.3s\",\n        overflow: \"hidden\",\n      }}\n    >\n      {sizeItems.map((sizeElement, index) => {\n        const itemPercentage = (sizeElement.value * 100) / totalValue;\n        return (\n          <div\n            key={`itemSize-${index.toString()}`}\n            style={{\n              width: `${itemPercentage}%`,\n              height: \"100%\",\n              backgroundColor: sizeElement.color,\n              transitionDuration: \"0.3s\",\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default UsageBar;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Cell, Pie, PieChart } from \"recharts\";\nimport { CapacityValue, CapacityValues } from \"./types\";\nimport { niceBytesInt } from \"../../../../common/utils\";\nimport { CircleIcon } from \"mds\";\nimport UsageBar, { ISizeBarItem } from \"../../Common/UsageBar/UsageBar\";\n\ninterface ITenantCapacity {\n  totalCapacity: number;\n  usedSpaceVariants: CapacityValues[];\n  statusClass: string;\n  render?: \"pie\" | \"bar\";\n}\n\nconst TenantCapacity = ({\n  totalCapacity,\n  usedSpaceVariants,\n  statusClass,\n  render = \"pie\",\n}: ITenantCapacity) => {\n  const colors = [\n    \"#8dacd3\",\n    \"#bca1ea\",\n    \"#92e8d2\",\n    \"#efc9ac\",\n    \"#97f274\",\n    \"#f7d291\",\n    \"#71ACCB\",\n    \"#f28282\",\n    \"#e28cc1\",\n    \"#2781B0\",\n  ];\n\n  const BGColor = \"#ededed\";\n\n  const totalUsedSpace = usedSpaceVariants.reduce((acc, currValue) => {\n    return acc + currValue.value;\n  }, 0);\n\n  const emptySpace = totalCapacity - totalUsedSpace;\n\n  let tiersList: CapacityValue[] = [];\n\n  const standardTier = usedSpaceVariants.find(\n    (tier) => tier.variant === \"STANDARD\"\n  ) || {\n    value: 0,\n    variant: \"empty\",\n  };\n\n  if (usedSpaceVariants.length > 10) {\n    const totalUsedByTiers = totalUsedSpace - standardTier.value;\n\n    tiersList = [\n      { value: totalUsedByTiers, color: \"#2781B0\", label: \"Total Tiers Space\" },\n    ];\n  } else {\n    tiersList = usedSpaceVariants\n      .filter((variant) => variant.variant !== \"STANDARD\")\n      .map((variant, index) => {\n        return {\n          value: variant.value,\n          color: colors[index],\n          label: `Tier - ${variant.variant}`,\n        };\n      });\n  }\n\n  let standardTierColor = \"#07193E\";\n\n  const usedPercentage = (standardTier.value * 100) / totalCapacity;\n\n  if (usedPercentage >= 90) {\n    standardTierColor = \"#C83B51\";\n  } else if (usedPercentage >= 75) {\n    standardTierColor = \"#FFAB0F\";\n  }\n\n  const plotValues: CapacityValue[] = [\n    {\n      value: standardTier.value,\n      color: standardTierColor,\n      label: \"Used Space by Tenant\",\n    },\n    ...tiersList,\n    {\n      value: emptySpace,\n      color: render === \"bar\" ? BGColor : \"transparent\",\n      label: \"Empty Space\",\n    },\n  ];\n\n  if (render === \"bar\") {\n    const plotValuesForUsageBar: ISizeBarItem[] = plotValues.map((plotVal) => {\n      return {\n        value: plotVal.value,\n        color: plotVal.color,\n        itemName: plotVal.label,\n      };\n    });\n\n    return (\n      <div style={{ width: \"100%\", marginBottom: 15 }}>\n        <UsageBar\n          totalValue={totalCapacity}\n          sizeItems={plotValuesForUsageBar}\n          bgColor={BGColor}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ position: \"relative\", width: 110, height: 110 }}>\n      <div\n        style={{ position: \"absolute\", right: -5, top: 15, zIndex: 400 }}\n        className={statusClass}\n      >\n        <CircleIcon\n          style={{\n            border: \"#fff 2px solid\",\n            borderRadius: \"100%\",\n            width: 20,\n            height: 20,\n          }}\n        />\n      </div>\n      <span\n        style={{\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          fontWeight: \"bold\",\n          color: \"#000\",\n          fontSize: 12,\n        }}\n      >\n        {!isNaN(totalUsedSpace) ? niceBytesInt(totalUsedSpace) : \"N/A\"}\n      </span>\n      <div>\n        <PieChart width={110} height={110}>\n          <Pie\n            data={[{ value: 100 }]}\n            cx={\"50%\"}\n            cy={\"50%\"}\n            dataKey=\"value\"\n            outerRadius={50}\n            innerRadius={40}\n            fill={BGColor}\n            isAnimationActive={false}\n            stroke={\"none\"}\n          />\n          <Pie\n            data={plotValues}\n            cx={\"50%\"}\n            cy={\"50%\"}\n            dataKey=\"value\"\n            outerRadius={50}\n            innerRadius={40}\n          >\n            {plotValues.map((entry, index) => (\n              <Cell\n                key={`cellCapacity-${index}`}\n                fill={entry.color}\n                stroke={\"none\"}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </div>\n    </div>\n  );\n};\n\nexport default TenantCapacity;\n"],"names":["withStyles","theme","createStyles","root","padding","margin","border","backgroundColor","textDecoration","cursor","fontSize","color","palette","info","main","fontFamily","_ref","classes","children","rest","_objectWithoutProperties","_excluded","_jsx","_objectSpread","className","WrappedComponent","fallback","arguments","length","undefined","props","Suspense","tooltip","_ref$errorProps","errorProps","placement","Tooltip","title","cloneElement","label","value","unit","_ref$variant","variant","_jsxs","style","textAlign","fontWeight","Fragment","whiteSpace","useStyles","makeStyles","redState","error","width","height","float","marginRight","yellowState","warning","greenState","success","greyState","tenantItem","marginBottom","titleContainer","display","justifyContent","namespaceLabel","borderRadius","status","tenant","dispatch","useAppDispatch","navigate","useNavigate","raw","capacity","used","localUse","tieredUse","capacity_raw","parts","niceBytes","concat","split","capacity_usage","niceBytesInt","spaceVariants","tiers","_tenant$tiers","_tenant$tiers2","map","itemTenant","size","name","internalUsage","filter","type","reduce","sum","tieredUsage","partsInternal","id","onClick","setTenantName","namespace","getTenantAsync","Grid","container","item","xs","sx","marginTop","TenantCapacity","totalCapacity","usedSpaceVariants","statusClass","health_status","healthStatusToClass","alignItems","InformationItem","pool_count","paddingLeft","currentState","justifyItems","DrivesIcon","paddingTop","itemStatusMap","rowRenderFunction","totalItems","defaultHeight","RenderItemLine","_ref2","index","InfiniteLoader","isItemLoaded","loadMoreItems","startIndex","stopIndex","itemCount","_ref3","onItemsRendered","ref","AutoSizer","_ref4","List","itemSize","searchField","adornment","_ref$placeholder","placeholder","onChange","_ref$adornmentPositio","adornmentPosition","overrideClass","inputProps","_defineProperty","disableUnderline","InputAdornment","position","SearchIcon","TextField","InputProps","e","target","CredentialsPrompt","withSuspense","React","actionsTray","containerForHeader","tenantsList","sortByContainer","innerSort","maxWidth","flexDirection","sortByLabel","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","filterTenants","setFilterTenants","_useState5","_useState6","records","setRecords","_useState7","_useState8","showNewCredentials","setShowNewCredentials","_useState9","_useState10","createdAccount","setCreatedAccount","_useState11","_useState12","sortValue","setSortValue","filteredRecords","b","indexOf","sort","a","useEffect","api","tenants","listAllTenants","then","res","data","resTenants","catch","err","setErrorSnackMessage","newServiceAccount","open","closeModal","entity","PageHeaderWrapper","middleComponent","SearchBox","val","actions","TooltipWrapper","Button","icon","RefreshIcon","AddIcon","PageLayout","LinearProgress","SelectWrapper","options","VirtualizedList","TenantListItem","alignContent","HelpBox","iconComponent","TenantsIcon","help","AButton","totalValue","sizeItems","_ref$bgColor","bgColor","transitionDuration","overflow","sizeElement","itemPercentage","toString","_ref$render","render","colors","BGColor","totalUsedSpace","acc","currValue","emptySpace","tiersList","standardTier","find","tier","standardTierColor","usedPercentage","plotValues","_toConsumableArray","plotValuesForUsageBar","plotVal","itemName","UsageBar","right","top","zIndex","CircleIcon","left","transform","isNaN","PieChart","Pie","cx","cy","dataKey","outerRadius","innerRadius","fill","isAnimationActive","stroke","entry","Cell"],"sourceRoot":""}