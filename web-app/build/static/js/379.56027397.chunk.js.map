{"version":3,"file":"static/js/379.56027397.chunk.js","mappings":"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","sources":["screens/Console/Common/UsageBarWrapper/LabelValuePair.tsx","screens/Console/Tenants/TenantDetails/Pools/Details/PoolsListing.tsx","screens/Console/Common/UsageBarWrapper/StackRow.tsx","screens/Console/Tenants/TenantDetails/Pools/Details/PoolDetails.tsx","screens/Console/Tenants/TenantDetails/PoolsSummary.tsx"],"sourcesContent":["import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\ntype LabelValuePairProps = {\n  label?: any;\n  value?: any;\n  orientation?: any;\n  stkProps?: any;\n  lblProps?: any;\n  valProps?: any;\n};\n\nconst LabelValuePair = ({\n  label = null,\n  value = \"-\",\n  orientation = \"column\",\n  stkProps = {},\n  lblProps = {},\n  valProps = {},\n}: LabelValuePairProps) => {\n  return (\n    <Stack direction={{ xs: \"column\", sm: orientation }} {...stkProps}>\n      <label style={{ marginRight: 5, fontWeight: 600 }} {...lblProps}>\n        {label}\n      </label>\n      <label style={{ marginRight: 5, fontWeight: 500 }} {...valProps}>\n        {value}\n      </label>\n    </Stack>\n  );\n};\n\nexport default LabelValuePair;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport { TextField } from \"@mui/material\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { AddIcon, Button, SearchIcon } from \"mds\";\nimport TableWrapper from \"../../../../Common/TableWrapper/TableWrapper\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  tableStyles,\n  tenantDetailsStyles,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { setSelectedPool } from \"../../../tenantsSlice\";\nimport TooltipWrapper from \"../../../../Common/TooltipWrapper/TooltipWrapper\";\nimport { Pool } from \"../../../../../../api/operatorApi\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { niceBytesInt } from \"../../../../../../common/utils\";\n\ninterface IPoolsSummary {\n  setPoolDetailsView: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...actionsTray,\n    ...tableStyles,\n    ...containerForHeader,\n  })\n);\n\nconst PoolsListing = ({ setPoolDetailsView }: IPoolsSummary) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant\n  );\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n\n  const [pools, setPools] = useState<Pool[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (tenant) {\n      const resPools = !tenant.pools ? [] : tenant.pools;\n      setPools(resPools);\n    }\n  }, [tenant]);\n\n  const filteredPools = pools.filter((pool) => {\n    if (pool.name?.toLowerCase().includes(filter.toLowerCase())) {\n      return true;\n    }\n\n    return false;\n  });\n\n  const listActions = [\n    {\n      type: \"view\",\n      onClick: (selectedValue: Pool) => {\n        dispatch(setSelectedPool(selectedValue.name!));\n        setPoolDetailsView();\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.actionsTray}>\n        <TextField\n          placeholder=\"Filter\"\n          className={classes.searchField}\n          id=\"search-resource\"\n          label=\"\"\n          onChange={(event) => {\n            setFilter(event.target.value);\n          }}\n          InputProps={{\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          variant=\"standard\"\n        />\n\n        <TooltipWrapper tooltip={\"Expand Tenant\"}>\n          <Button\n            id={\"expand-tenant\"}\n            label={\"Expand Tenant\"}\n            onClick={() => {\n              navigate(\n                `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n                  tenant?.name || \"\"\n                }/add-pool`\n              );\n            }}\n            icon={<AddIcon />}\n            variant={\"callAction\"}\n          />\n        </TooltipWrapper>\n      </Grid>\n      <Grid item xs={12} className={classes.tableBlock}>\n        <TableWrapper\n          itemActions={listActions}\n          columns={[\n            { label: \"Name\", elementKey: \"name\" },\n            {\n              label: \"Total Capacity\",\n              elementKey: \"capacity\",\n              renderFullObject: true,\n              renderFunction: (x: Pool) =>\n                niceBytesInt(\n                  x.volumes_per_server * x.servers * x.volume_configuration.size\n                ),\n            },\n            { label: \"Servers\", elementKey: \"servers\" },\n            { label: \"Volumes/Server\", elementKey: \"volumes_per_server\" },\n          ]}\n          isLoading={loadingTenant}\n          records={filteredPools}\n          entityName=\"Servers\"\n          idField=\"name\"\n          customEmptyMessage=\"No Pools found\"\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default PoolsListing;\n","import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\nconst StackRow = ({\n  children = null,\n  ...restProps\n}: {\n  children?: any;\n  [x: string]: any;\n}) => {\n  return (\n    <Stack\n      direction={{ xs: \"column\", sm: \"row\" }}\n      justifyContent=\"space-between\"\n      margin={\"5px 0 5px 0\"}\n      spacing={{ xs: 1, sm: 2, md: 4 }}\n      {...restProps}\n    >\n      {children}\n    </Stack>\n  );\n};\nexport default StackRow;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState } from \"../../../../../../store\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport LabelValuePair from \"../../../../Common/UsageBarWrapper/LabelValuePair\";\nimport { niceBytesInt } from \"../../../../../../common/utils\";\nimport StackRow from \"../../../../Common/UsageBarWrapper/StackRow\";\nimport { Button, EditTenantIcon } from \"mds\";\nimport { NodeSelectorTerm } from \"../../../../../../api/operatorApi\";\n\nconst stylingLayout = {\n  border: \"#EAEAEA 1px solid\",\n  borderRadius: \"3px\",\n  padding: \"0px 20px\",\n  position: \"relative\",\n};\n\nconst twoColCssGridLayoutConfig = {\n  display: \"grid\",\n  gridTemplateColumns: { xs: \"1fr\", sm: \"2fr 1fr\" },\n  gridAutoFlow: { xs: \"dense\", sm: \"row\" },\n  gap: 2,\n  padding: \"15px\",\n};\n\nconst PoolDetails = () => {\n  const navigate = useNavigate();\n\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n  const selectedPool = useSelector(\n    (state: AppState) => state.tenants.selectedPool\n  );\n  if (tenant === null) {\n    return <Fragment />;\n  }\n\n  const poolInformation =\n    tenant.pools?.find((pool) => pool.name === selectedPool) || null;\n\n  if (poolInformation === null) {\n    return null;\n  }\n\n  let affinityType = \"None\";\n\n  if (poolInformation.affinity) {\n    if (poolInformation.affinity.nodeAffinity) {\n      affinityType = \"Node Selector\";\n    } else {\n      affinityType = \"Default (Pod Anti-Affinity)\";\n    }\n  }\n\n  const HeaderSection = ({ title }: { title: string }) => {\n    return (\n      <StackRow\n        sx={{\n          borderBottom: \"1px solid #eaeaea\",\n          margin: 0,\n          marginBottom: \"20px\",\n        }}\n      >\n        <h3>{title}</h3>\n      </StackRow>\n    );\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} sx={{ ...stylingLayout }}>\n        <div style={{ position: \"absolute\", right: 20, top: 18 }}>\n          <Button\n            icon={<EditTenantIcon />}\n            onClick={() => {\n              navigate(\n                `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n                  tenant?.name || \"\"\n                }/edit-pool`\n              );\n            }}\n            label={\"Edit Pool\"}\n            id={\"editPool\"}\n          />\n        </div>\n        <HeaderSection title={\"Pool Configuration\"} />\n        <Box sx={{ ...twoColCssGridLayoutConfig }}>\n          <LabelValuePair label={\"Pool Name\"} value={poolInformation.name} />\n          <LabelValuePair\n            label={\"Total Volumes\"}\n            value={poolInformation.volumes_per_server}\n          />\n          <LabelValuePair\n            label={\"Volumes per server\"}\n            value={poolInformation.volumes_per_server}\n          />\n          <LabelValuePair\n            label={\"Capacity\"}\n            value={niceBytesInt(\n              poolInformation.volumes_per_server *\n                poolInformation.servers *\n                poolInformation.volume_configuration.size\n            )}\n          />\n          <LabelValuePair\n            label={\"Runtime Class Name\"}\n            value={poolInformation.runtimeClassName}\n          />\n        </Box>\n        <HeaderSection title={\"Resources\"} />\n        <Box sx={{ ...twoColCssGridLayoutConfig }}>\n          {poolInformation.resources && (\n            <Fragment>\n              <LabelValuePair\n                label={\"CPU\"}\n                value={poolInformation.resources?.requests?.cpu}\n              />\n              <LabelValuePair\n                label={\"Memory\"}\n                value={niceBytesInt(\n                  poolInformation.resources?.requests?.memory!\n                )}\n              />\n            </Fragment>\n          )}\n          <LabelValuePair\n            label={\"Volume Size\"}\n            value={niceBytesInt(poolInformation.volume_configuration.size)}\n          />\n          <LabelValuePair\n            label={\"Storage Class Name\"}\n            value={poolInformation.volume_configuration.storage_class_name}\n          />\n        </Box>\n        {poolInformation.securityContext &&\n          (poolInformation.securityContext.runAsNonRoot ||\n            poolInformation.securityContext.runAsUser ||\n            poolInformation.securityContext.runAsGroup ||\n            poolInformation.securityContext.fsGroup) && (\n            <Fragment>\n              <HeaderSection title={\"Security Context\"} />\n              <Box>\n                {poolInformation.securityContext.runAsNonRoot !== null && (\n                  <Box sx={{ ...twoColCssGridLayoutConfig }}>\n                    <LabelValuePair\n                      label={\"Run as Non Root\"}\n                      value={\n                        poolInformation.securityContext.runAsNonRoot\n                          ? \"Yes\"\n                          : \"No\"\n                      }\n                    />\n                  </Box>\n                )}\n                <Box\n                  sx={{\n                    ...twoColCssGridLayoutConfig,\n                    gridTemplateColumns: {\n                      xs: \"1fr\",\n                      sm: \"2fr 1fr\",\n                      md: \"1fr 1fr 1fr\",\n                    },\n                  }}\n                >\n                  {poolInformation.securityContext.runAsUser && (\n                    <LabelValuePair\n                      label={\"Run as User\"}\n                      value={poolInformation.securityContext.runAsUser}\n                    />\n                  )}\n                  {poolInformation.securityContext.runAsGroup && (\n                    <LabelValuePair\n                      label={\"Run as Group\"}\n                      value={poolInformation.securityContext.runAsGroup}\n                    />\n                  )}\n                  {poolInformation.securityContext.fsGroup && (\n                    <LabelValuePair\n                      label={\"FsGroup\"}\n                      value={poolInformation.securityContext.fsGroup}\n                    />\n                  )}\n                </Box>\n              </Box>\n            </Fragment>\n          )}\n        <HeaderSection title={\"Affinity\"} />\n        <Box>\n          <Box sx={{ ...twoColCssGridLayoutConfig }}>\n            <LabelValuePair label={\"Type\"} value={affinityType} />\n            {poolInformation.affinity?.nodeAffinity &&\n            poolInformation.affinity?.podAntiAffinity ? (\n              <LabelValuePair label={\"With Pod Anti affinity\"} value={\"Yes\"} />\n            ) : (\n              <span />\n            )}\n          </Box>\n          {poolInformation.affinity?.nodeAffinity && (\n            <Fragment>\n              <HeaderSection title={\"Labels\"} />\n              <ul>\n                {poolInformation.affinity?.nodeAffinity?.requiredDuringSchedulingIgnoredDuringExecution?.nodeSelectorTerms.map(\n                  (term: NodeSelectorTerm) => {\n                    return term.matchExpressions?.map((trm) => {\n                      return (\n                        <li>\n                          {trm.key} - {trm.values?.join(\", \")}\n                        </li>\n                      );\n                    });\n                  }\n                )}\n              </ul>\n            </Fragment>\n          )}\n        </Box>\n        {poolInformation.tolerations &&\n          poolInformation.tolerations.length > 0 && (\n            <Fragment>\n              <HeaderSection title={\"Tolerations\"} />\n              <Box>\n                <ul>\n                  {poolInformation.tolerations.map((tolItem) => {\n                    return (\n                      <li>\n                        {tolItem.operator === \"Equal\" ? (\n                          <Fragment>\n                            If <strong>{tolItem.key}</strong> is equal to{\" \"}\n                            <strong>{tolItem.value}</strong> then{\" \"}\n                            <strong>{tolItem.effect}</strong> after{\" \"}\n                            <strong>\n                              {tolItem.tolerationSeconds?.seconds || 0}\n                            </strong>{\" \"}\n                            seconds\n                          </Fragment>\n                        ) : (\n                          <Fragment>\n                            If <strong>{tolItem.key}</strong> exists then{\" \"}\n                            <strong>{tolItem.effect}</strong> after{\" \"}\n                            <strong>\n                              {tolItem.tolerationSeconds?.seconds || 0}\n                            </strong>{\" \"}\n                            seconds\n                          </Fragment>\n                        )}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </Box>\n            </Fragment>\n          )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default PoolDetails;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  tableStyles,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { AppState, useAppDispatch } from \"../../../../store\";\n\nimport PoolsListing from \"./Pools/Details/PoolsListing\";\nimport PoolDetails from \"./Pools/Details/PoolDetails\";\n\nimport { setOpenPoolDetails } from \"../tenantsSlice\";\nimport { BackLink } from \"mds\";\n\ninterface IPoolsSummary {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...actionsTray,\n    ...tableStyles,\n    ...containerForHeader,\n  });\n\nconst PoolsSummary = ({ classes }: IPoolsSummary) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const { pathname = \"\" } = useLocation();\n\n  const selectedPool = useSelector(\n    (state: AppState) => state.tenants.selectedPool\n  );\n  const poolDetailsOpen = useSelector(\n    (state: AppState) => state.tenants.poolDetailsOpen\n  );\n\n  return (\n    <Fragment>\n      {poolDetailsOpen && (\n        <Grid item xs={12}>\n          <BackLink\n            label={\"Pools list\"}\n            onClick={() => {\n              navigate(pathname);\n              dispatch(setOpenPoolDetails(false));\n            }}\n          />\n        </Grid>\n      )}\n      <h1 className={classes.sectionTitle}>\n        {poolDetailsOpen ? `Pool Details - ${selectedPool || \"\"}` : \"Pools\"}\n      </h1>\n      <Grid container>\n        {poolDetailsOpen ? (\n          <PoolDetails />\n        ) : (\n          <PoolsListing\n            setPoolDetailsView={() => {\n              dispatch(setOpenPoolDetails(true));\n            }}\n          />\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PoolsSummary);\n"],"names":["_ref","_ref$label","label","_ref$value","value","_ref$orientation","orientation","_ref$stkProps","stkProps","_ref$lblProps","lblProps","_ref$valProps","valProps","_jsxs","Stack","_objectSpread","direction","xs","sm","children","_jsx","style","marginRight","fontWeight","useStyles","makeStyles","theme","createStyles","tenantDetailsStyles","actionsTray","tableStyles","containerForHeader","setPoolDetailsView","dispatch","useAppDispatch","navigate","useNavigate","classes","loadingTenant","useSelector","state","tenants","tenant","tenantInfo","_useState","useState","_useState2","_slicedToArray","pools","setPools","_useState3","_useState4","filter","setFilter","useEffect","resPools","filteredPools","pool","_pool$name","name","toLowerCase","includes","listActions","type","onClick","selectedValue","setSelectedPool","Fragment","Grid","item","className","TextField","placeholder","searchField","id","onChange","event","target","InputProps","disableUnderline","startAdornment","InputAdornment","position","SearchIcon","variant","TooltipWrapper","tooltip","Button","concat","namespace","icon","AddIcon","tableBlock","TableWrapper","itemActions","columns","elementKey","renderFullObject","renderFunction","x","niceBytesInt","volumes_per_server","servers","volume_configuration","size","isLoading","records","entityName","idField","customEmptyMessage","_ref$children","restProps","_objectWithoutProperties","_excluded","justifyContent","margin","spacing","md","stylingLayout","border","borderRadius","padding","twoColCssGridLayoutConfig","display","gridTemplateColumns","gridAutoFlow","gap","_tenant$pools","_poolInformation$reso","_poolInformation$reso2","_poolInformation$reso3","_poolInformation$reso4","_poolInformation$affi","_poolInformation$affi2","_poolInformation$affi3","_poolInformation$affi4","_poolInformation$affi5","_poolInformation$affi6","selectedPool","poolInformation","find","affinityType","affinity","nodeAffinity","HeaderSection","title","StackRow","sx","borderBottom","marginBottom","right","top","EditTenantIcon","Box","LabelValuePair","runtimeClassName","resources","requests","cpu","memory","storage_class_name","securityContext","runAsNonRoot","runAsUser","runAsGroup","fsGroup","podAntiAffinity","requiredDuringSchedulingIgnoredDuringExecution","nodeSelectorTerms","map","term","_term$matchExpression","matchExpressions","trm","_trm$values","key","values","join","tolerations","length","tolItem","_tolItem$tolerationSe","_tolItem$tolerationSe2","operator","effect","tolerationSeconds","seconds","withStyles","_useLocation$pathname","useLocation","pathname","poolDetailsOpen","BackLink","setOpenPoolDetails","sectionTitle","container","PoolDetails","PoolsListing"],"sourceRoot":""}