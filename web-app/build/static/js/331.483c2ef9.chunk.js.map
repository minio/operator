{"version":3,"file":"static/js/331.483c2ef9.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/common/styleLibrary.ts","screens/Console/Common/Hooks/useApi.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Tenants/TenantDetails/DeletePod.tsx","screens/Console/Tenants/TenantDetails/PodsSummary.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This object contains variables that will be used across form components.\n\nexport const actionsTray = {\n  label: {\n    color: \"#07193E\",\n    fontSize: 13,\n    alignSelf: \"center\" as const,\n    whiteSpace: \"nowrap\" as const,\n    \"&:not(:first-of-type)\": {\n      marginLeft: 10,\n    },\n  },\n  actionsTray: {\n    display: \"flex\" as const,\n    justifyContent: \"space-between\" as const,\n    marginBottom: \"1rem\",\n    alignItems: \"center\",\n    \"& button\": {\n      flexGrow: 0,\n      marginLeft: 8,\n    },\n  },\n};\n\nexport const modalStyleUtils: any = {\n  modalButtonBar: {\n    marginTop: 15,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n\n    \"& button\": {\n      marginRight: 10,\n    },\n    \"& button:last-child\": {\n      marginRight: 0,\n    },\n  },\n  modalFormScrollable: {\n    maxHeight: \"calc(100vh - 300px)\",\n    overflowY: \"auto\",\n    paddingTop: 10,\n  },\n};\n","import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction,\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any, headers?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data, headers)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputBox, SearchIcon } from \"mds\";\nimport { CSSObject } from \"styled-components\";\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  onChange: (value: string) => void;\n  overrideClass?: any;\n  id?: string;\n  label?: string;\n  sx?: CSSObject;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  onChange,\n  overrideClass,\n  value,\n  id = \"search-resource\",\n  label = \"\",\n  sx,\n}: SearchBoxProps) => {\n  return (\n    <InputBox\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : \"\"}\n      id={id}\n      label={label}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      value={value}\n      startIcon={<SearchIcon />}\n      sx={sx}\n    />\n  );\n};\n\nexport default SearchBox;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon, Box, InputBox } from \"mds\";\nimport { IPodListElement } from \"../ListTenants/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeletePod {\n  deleteOpen: boolean;\n  selectedPod: IPodListElement;\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\n}\n\nconst DeletePod = ({\n  deleteOpen,\n  selectedPod,\n  closeDeleteModalAndRefresh,\n}: IDeletePod) => {\n  const dispatch = useAppDispatch();\n  const [retypePod, setRetypePod] = useState(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const onConfirmDelete = () => {\n    if (retypePod !== selectedPod.name) {\n      setErrorSnackMessage({\n        errorMessage: \"Tenant name is incorrect\",\n        detailedError: \"\",\n      });\n      return;\n    }\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/namespaces/${selectedPod.namespace}/tenants/${selectedPod.tenant}/pods/${selectedPod.name}`,\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Pod`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypePod !== selectedPod.name || deleteLoading,\n      }}\n      confirmationContent={\n        <Fragment>\n          To continue please type <b>{selectedPod.name}</b> in the box.\n          <Box sx={{ marginTop: 15 }}>\n            <InputBox\n              id=\"retype-pod\"\n              name=\"retype-pod\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypePod(event.target.value);\n              }}\n              label=\"\"\n              value={retypePod}\n            />\n          </Box>\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeletePod;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Button, DataTable, Grid, InformativeMessage, SectionTitle } from \"mds\";\nimport { actionsTray } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { niceDays } from \"../../../../common/utils\";\nimport { IPodListElement } from \"../ListTenants/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport api from \"../../../../common/api\";\nimport DeletePod from \"./DeletePod\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport SearchBox from \"../../Common/SearchBox\";\n\nconst PodsSummary = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { tenantName, tenantNamespace } = useParams();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant,\n  );\n\n  const [pods, setPods] = useState<IPodListElement[]>([]);\n  const [loadingPods, setLoadingPods] = useState<boolean>(true);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedPod, setSelectedPod] = useState<any>(null);\n  const [filter, setFilter] = useState(\"\");\n  const [logReportFileContent, setLogReportFileContent] = useState<string>(\"\");\n  const [startLogReport, setStartLogReport] = useState<boolean>(false);\n  const [downloadReport, setDownloadReport] = useState<boolean>(false);\n  const [downloadSuccess, setDownloadSuccess] = useState<boolean>(false);\n  const [reportError, setReportError] = useState<boolean>(false);\n  const [filename, setFilename] = useState<string>(\"\");\n\n  const podViewAction = (pod: IPodListElement) => {\n    navigate(\n      `/namespaces/${tenantNamespace || \"\"}/tenants/${tenantName || \"\"}/pods/${\n        pod.name\n      }`,\n    );\n    return;\n  };\n\n  useEffect(() => {\n    if (downloadReport) {\n      let element = document.createElement(\"a\");\n      element.setAttribute(\n        \"href\",\n        `data:application/gzip;base64,${logReportFileContent}`,\n      );\n      element.setAttribute(\"download\", filename);\n\n      element.style.display = \"none\";\n      document.body.appendChild(element);\n\n      element.click();\n\n      document.body.removeChild(element);\n      setDownloadReport(false);\n      setDownloadSuccess(true);\n    }\n  }, [downloadReport, filename, logReportFileContent]);\n\n  const closeDeleteModalAndRefresh = (reloadData: boolean) => {\n    setDeleteOpen(false);\n    setLoadingPods(true);\n  };\n\n  const confirmDeletePod = (pod: IPodListElement) => {\n    pod.tenant = tenantName;\n    pod.namespace = tenantNamespace;\n    setSelectedPod(pod);\n    setDeleteOpen(true);\n  };\n\n  const filteredRecords: IPodListElement[] = pods.filter((elementItem) =>\n    elementItem.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  const podTableActions = [\n    { type: \"view\", onClick: podViewAction },\n    { type: \"delete\", onClick: confirmDeletePod },\n  ];\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoadingPods(true);\n    }\n  }, [loadingTenant]);\n\n  useEffect(() => {\n    if (loadingPods) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace || \"\"}/tenants/${\n            tenantName || \"\"\n          }/pods`,\n        )\n        .then((result: IPodListElement[]) => {\n          for (let i = 0; i < result.length; i++) {\n            let currentTime = (Date.now() / 1000) | 0;\n            result[i].time = niceDays(\n              (currentTime - parseInt(result[i].timeCreated)).toString(),\n            );\n          }\n          setPods(result);\n          setLoadingPods(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(\n            setErrorSnackMessage({\n              errorMessage: \"Error loading pods\",\n              detailedError: err.detailedError,\n            }),\n          );\n        });\n    }\n  }, [loadingPods, tenantName, tenantNamespace, dispatch]);\n\n  useEffect(() => {\n    if (startLogReport) {\n      setLogReportFileContent(\"\");\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/log-report`,\n        )\n        .then(async (res: any) => {\n          setLogReportFileContent(decodeURIComponent(res.blob));\n          //@ts-ignore\n          setFilename(res.filename || \"tenant-log-report.zip\");\n          setStartLogReport(false);\n          setDownloadReport(true);\n          if (res.filename.length === 0 || res.blob.length === 0) {\n            setReportError(true);\n          } else {\n            setReportError(false);\n          }\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setStartLogReport(false);\n          setReportError(true);\n        });\n    } else {\n      // reset start status\n      setStartLogReport(false);\n    }\n  }, [tenantName, tenantNamespace, startLogReport, dispatch]);\n\n  const generateTenantLogReport = () => {\n    setStartLogReport(true);\n  };\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeletePod\n          deleteOpen={deleteOpen}\n          selectedPod={selectedPod}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <SectionTitle\n        separator\n        sx={{ marginBottom: 15 }}\n        actions={\n          <TooltipWrapper tooltip=\"A report of all tenant logs will be generated as a .zip file and downloaded for analysis. This report can be uploaded to SUBNET to enable our team to best assist you in troubleshooting.\">\n            <Button\n              id=\"log_report\"\n              onClick={generateTenantLogReport}\n              disabled={pods.length === 0}\n            >\n              Download Log Report\n            </Button>\n          </TooltipWrapper>\n        }\n      >\n        Pods\n      </SectionTitle>\n      {downloadSuccess && !reportError && (\n        <InformativeMessage\n          title={\"Success\"}\n          message={\"Tenant report downloaded to \" + filename}\n          variant={\"success\"}\n        />\n      )}\n\n      {reportError && (\n        <InformativeMessage\n          title={\"Error\"}\n          message={\"There was a problem generating the report\"}\n          variant={\"error\"}\n        />\n      )}\n      <Grid container sx={{ marginBottom: 15 }}>\n        <Grid item xs={4} sx={{ display: \"flex\", alignItems: \"center\" }}></Grid>\n        <Grid\n          item\n          xs={4}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n          }}\n        ></Grid>\n      </Grid>\n      <Grid item xs={12} sx={actionsTray.actionsTray}>\n        <SearchBox\n          value={filter}\n          onChange={(value) => {\n            setFilter(value);\n          }}\n          placeholder={\"Search Pods\"}\n          id=\"search-resource\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <DataTable\n          columns={[\n            { label: \"Name\", elementKey: \"name\", width: 200 },\n            { label: \"Status\", elementKey: \"status\" },\n            { label: \"Age\", elementKey: \"time\" },\n            { label: \"Pod IP\", elementKey: \"podIP\" },\n            {\n              label: \"Restarts\",\n              elementKey: \"restarts\",\n              renderFunction: (input) => {\n                return input !== null ? input : 0;\n              },\n            },\n            { label: \"Node\", elementKey: \"node\" },\n          ]}\n          isLoading={loadingPods}\n          records={filteredRecords}\n          itemActions={podTableActions}\n          entityName=\"Pods\"\n          idField=\"name\"\n          customPaperHeight={\"calc(100vh - 400px)\"}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default PodsSummary;\n"],"names":["actionsTray","label","color","fontSize","alignSelf","whiteSpace","marginLeft","display","justifyContent","marginBottom","alignItems","flexGrow","modalStyleUtils","modalButtonBar","marginTop","marginRight","modalFormScrollable","maxHeight","overflowY","paddingTop","useApi","onSuccess","onError","isLoading","setIsLoading","useState","callApi","method","url","data","headers","api","invoke","then","res","catch","err","_ref","placeholder","onChange","overrideClass","value","id","sx","_jsx","InputBox","className","e","target","startIcon","SearchIcon","deleteOpen","selectedPod","closeDeleteModalAndRefresh","dispatch","useAppDispatch","retypePod","setRetypePod","deleteLoading","invokeDeleteApi","onDelSuccess","setErrorSnackMessage","ConfirmDialog","title","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","onConfirm","onConfirmDelete","name","concat","namespace","tenant","errorMessage","detailedError","onClose","confirmButtonProps","disabled","confirmationContent","_jsxs","Fragment","children","Box","event","PodsSummary","navigate","useNavigate","tenantName","tenantNamespace","useParams","loadingTenant","useSelector","state","tenants","pods","setPods","loadingPods","setLoadingPods","setDeleteOpen","setSelectedPod","filter","setFilter","logReportFileContent","setLogReportFileContent","startLogReport","setStartLogReport","downloadReport","setDownloadReport","downloadSuccess","setDownloadSuccess","reportError","setReportError","filename","setFilename","useEffect","element","document","createElement","setAttribute","style","body","appendChild","click","removeChild","filteredRecords","elementItem","toLowerCase","includes","podTableActions","type","onClick","pod","result","i","length","currentTime","Date","now","time","niceDays","parseInt","timeCreated","toString","async","decodeURIComponent","blob","DeletePod","reloadData","SectionTitle","separator","actions","TooltipWrapper","tooltip","Button","generateTenantLogReport","InformativeMessage","message","variant","Grid","container","item","xs","SearchBox","DataTable","columns","elementKey","width","renderFunction","input","records","itemActions","entityName","idField","customPaperHeight"],"sourceRoot":""}