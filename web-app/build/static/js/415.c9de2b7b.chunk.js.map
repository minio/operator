{"version":3,"file":"static/js/415.c9de2b7b.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/common/styleLibrary.ts","screens/Console/Common/SearchBox.tsx","screens/Console/Tenants/TenantDetails/Pools/Details/PoolsListing.tsx","screens/Console/Tenants/TenantDetails/Pools/Details/PoolDetails.tsx","screens/Console/Tenants/TenantDetails/PoolsSummary.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This object contains variables that will be used across form components.\n\nexport const actionsTray = {\n  label: {\n    color: \"#07193E\",\n    fontSize: 13,\n    alignSelf: \"center\" as const,\n    whiteSpace: \"nowrap\" as const,\n    \"&:not(:first-of-type)\": {\n      marginLeft: 10,\n    },\n  },\n  actionsTray: {\n    display: \"flex\" as const,\n    justifyContent: \"space-between\" as const,\n    marginBottom: \"1rem\",\n    alignItems: \"center\",\n    \"& button\": {\n      flexGrow: 0,\n      marginLeft: 8,\n    },\n  },\n};\n\nexport const modalStyleUtils: any = {\n  modalButtonBar: {\n    marginTop: 15,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n\n    \"& button\": {\n      marginRight: 10,\n    },\n    \"& button:last-child\": {\n      marginRight: 0,\n    },\n  },\n  modalFormScrollable: {\n    maxHeight: \"calc(100vh - 300px)\",\n    overflowY: \"auto\",\n    paddingTop: 10,\n  },\n};\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputBox, SearchIcon } from \"mds\";\nimport { CSSObject } from \"styled-components\";\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  onChange: (value: string) => void;\n  overrideClass?: any;\n  id?: string;\n  label?: string;\n  sx?: CSSObject;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  onChange,\n  overrideClass,\n  value,\n  id = \"search-resource\",\n  label = \"\",\n  sx,\n}: SearchBoxProps) => {\n  return (\n    <InputBox\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : \"\"}\n      id={id}\n      label={label}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      value={value}\n      startIcon={<SearchIcon />}\n      sx={sx}\n    />\n  );\n};\n\nexport default SearchBox;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { AddIcon, Button, DataTable, Grid } from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { actionsTray } from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { setSelectedPool } from \"../../../tenantsSlice\";\nimport { Pool } from \"../../../../../../api/operatorApi\";\nimport { niceBytesInt } from \"../../../../../../common/utils\";\nimport TooltipWrapper from \"../../../../Common/TooltipWrapper/TooltipWrapper\";\nimport SearchBox from \"../../../../Common/SearchBox\";\n\ninterface IPoolsSummary {\n  setPoolDetailsView: () => void;\n}\n\nconst PoolsListing = ({ setPoolDetailsView }: IPoolsSummary) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant,\n  );\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n\n  const [pools, setPools] = useState<Pool[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (tenant) {\n      const resPools = !tenant.pools ? [] : tenant.pools;\n      setPools(resPools);\n    }\n  }, [tenant]);\n\n  const filteredPools = pools.filter((pool) => {\n    if (pool.name?.toLowerCase().includes(filter.toLowerCase())) {\n      return true;\n    }\n\n    return false;\n  });\n\n  const listActions = [\n    {\n      type: \"view\",\n      onClick: (selectedValue: Pool) => {\n        dispatch(setSelectedPool(selectedValue.name!));\n        setPoolDetailsView();\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Grid item xs={12} sx={actionsTray.actionsTray}>\n        <SearchBox\n          value={filter}\n          onChange={(value) => {\n            setFilter(value);\n          }}\n          placeholder={\"Filter\"}\n          id=\"search-resource\"\n        />\n        <TooltipWrapper tooltip={\"Expand Tenant\"}>\n          <Button\n            id={\"expand-tenant\"}\n            label={\"Expand Tenant\"}\n            onClick={() => {\n              navigate(\n                `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n                  tenant?.name || \"\"\n                }/add-pool`,\n              );\n            }}\n            icon={<AddIcon />}\n            variant={\"callAction\"}\n          />\n        </TooltipWrapper>\n      </Grid>\n      <Grid item xs={12}>\n        <DataTable\n          itemActions={listActions}\n          columns={[\n            { label: \"Name\", elementKey: \"name\" },\n            {\n              label: \"Total Capacity\",\n              elementKey: \"capacity\",\n              renderFullObject: true,\n              renderFunction: (x: Pool) =>\n                niceBytesInt(\n                  x.volumes_per_server *\n                    x.servers *\n                    x.volume_configuration.size,\n                ),\n            },\n            { label: \"Servers\", elementKey: \"servers\" },\n            { label: \"Volumes/Server\", elementKey: \"volumes_per_server\" },\n          ]}\n          isLoading={loadingTenant}\n          records={filteredPools}\n          entityName=\"Servers\"\n          idField=\"name\"\n          customEmptyMessage=\"No Pools found\"\n          customPaperHeight={\"calc(100vh - 400px)\"}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default PoolsListing;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppState } from \"../../../../../../store\";\nimport { niceBytesInt } from \"../../../../../../common/utils\";\nimport {\n  Box,\n  breakPoints,\n  Button,\n  EditTenantIcon,\n  SectionTitle,\n  ValuePair,\n} from \"mds\";\nimport { NodeSelectorTerm } from \"../../../../../../api/operatorApi\";\n\nconst twoColCssGridLayoutConfig = {\n  display: \"grid\",\n  gridTemplateColumns: \"2fr 1fr\",\n  gridAutoFlow: \"row\",\n  gap: 2,\n  padding: \"15px\",\n  [`@media (max-width: ${breakPoints.sm}px)`]: {\n    gridTemplateColumns: \"1fr\",\n    gridAutoFlow: \"dense\",\n  },\n};\n\nconst PoolDetails = () => {\n  const navigate = useNavigate();\n\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n  const selectedPool = useSelector(\n    (state: AppState) => state.tenants.selectedPool,\n  );\n  if (tenant === null) {\n    return <Fragment />;\n  }\n\n  const poolInformation =\n    tenant.pools?.find((pool) => pool.name === selectedPool) || null;\n\n  if (poolInformation === null) {\n    return null;\n  }\n\n  let affinityType = \"None\";\n\n  if (poolInformation.affinity) {\n    if (poolInformation.affinity.nodeAffinity) {\n      affinityType = \"Node Selector\";\n    } else {\n      affinityType = \"Default (Pod Anti-Affinity)\";\n    }\n  }\n\n  return (\n    <Fragment>\n      <Box\n        withBorders={true}\n        customBorderPadding={\"0px\"}\n        sx={{ width: \"100%\" }}\n      >\n        <SectionTitle\n          separator\n          actions={\n            <Button\n              icon={<EditTenantIcon />}\n              onClick={() => {\n                navigate(\n                  `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n                    tenant?.name || \"\"\n                  }/edit-pool`,\n                );\n              }}\n              label={\"Edit Pool\"}\n              id={\"editPool\"}\n            />\n          }\n        >\n          Pool Configuration\n        </SectionTitle>\n        <Box sx={{ ...twoColCssGridLayoutConfig }}>\n          <ValuePair label={\"Pool Name\"} value={poolInformation.name} />\n          <ValuePair\n            label={\"Total Volumes\"}\n            value={poolInformation.volumes_per_server}\n          />\n          <ValuePair\n            label={\"Volumes per server\"}\n            value={poolInformation.volumes_per_server}\n          />\n          <ValuePair\n            label={\"Capacity\"}\n            value={niceBytesInt(\n              poolInformation.volumes_per_server *\n                poolInformation.servers *\n                poolInformation.volume_configuration.size,\n            )}\n          />\n          <ValuePair\n            label={\"Runtime Class Name\"}\n            value={poolInformation.runtimeClassName}\n          />\n        </Box>\n        <SectionTitle separator>Resources</SectionTitle>\n        <Box sx={{ ...twoColCssGridLayoutConfig }}>\n          {poolInformation.resources && (\n            <Fragment>\n              <ValuePair\n                label={\"CPU\"}\n                value={poolInformation.resources?.requests?.cpu}\n              />\n              <ValuePair\n                label={\"Memory\"}\n                value={niceBytesInt(\n                  poolInformation.resources?.requests?.memory!,\n                )}\n              />\n            </Fragment>\n          )}\n          <ValuePair\n            label={\"Volume Size\"}\n            value={niceBytesInt(poolInformation.volume_configuration.size)}\n          />\n          <ValuePair\n            label={\"Storage Class Name\"}\n            value={poolInformation.volume_configuration.storage_class_name}\n          />\n        </Box>\n        {poolInformation.securityContext &&\n          (poolInformation.securityContext.runAsNonRoot ||\n            poolInformation.securityContext.runAsUser ||\n            poolInformation.securityContext.runAsGroup ||\n            poolInformation.securityContext.fsGroup) && (\n            <Fragment>\n              <SectionTitle separator>Security Context</SectionTitle>\n              <Box>\n                {poolInformation.securityContext.runAsNonRoot !== null && (\n                  <Box sx={{ ...twoColCssGridLayoutConfig }}>\n                    <ValuePair\n                      label={\"Run as Non Root\"}\n                      value={\n                        poolInformation.securityContext.runAsNonRoot\n                          ? \"Yes\"\n                          : \"No\"\n                      }\n                    />\n                  </Box>\n                )}\n                <Box\n                  sx={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"2fr 1fr\",\n                    gridAutoFlow: \"row\",\n                    gap: 2,\n                    padding: \"15px\",\n                    [`@media (max-width: ${breakPoints.sm}px)`]: {\n                      gridTemplateColumns: \"1fr\",\n                      gridAutoFlow: \"dense\",\n                    },\n                    [`@media (max-width: ${breakPoints.md}px)`]: {\n                      gridTemplateColumns: \"2fr 1fr\",\n                    },\n                    [`@media (max-width: ${breakPoints.lg}px)`]: {\n                      gridTemplateColumns: \"1fr 1fr 1fr\",\n                    },\n                  }}\n                >\n                  {poolInformation.securityContext.runAsUser && (\n                    <ValuePair\n                      label={\"Run as User\"}\n                      value={poolInformation.securityContext.runAsUser}\n                    />\n                  )}\n                  {poolInformation.securityContext.runAsGroup && (\n                    <ValuePair\n                      label={\"Run as Group\"}\n                      value={poolInformation.securityContext.runAsGroup}\n                    />\n                  )}\n                  {poolInformation.securityContext.fsGroup && (\n                    <ValuePair\n                      label={\"FsGroup\"}\n                      value={poolInformation.securityContext.fsGroup}\n                    />\n                  )}\n                </Box>\n              </Box>\n            </Fragment>\n          )}\n        <SectionTitle separator>Affinity</SectionTitle>\n        <Box>\n          <Box sx={{ ...twoColCssGridLayoutConfig }}>\n            <ValuePair label={\"Type\"} value={affinityType} />\n            {poolInformation.affinity?.nodeAffinity &&\n            poolInformation.affinity?.podAntiAffinity ? (\n              <ValuePair label={\"With Pod Anti affinity\"} value={\"Yes\"} />\n            ) : (\n              <span />\n            )}\n          </Box>\n          {poolInformation.affinity?.nodeAffinity && (\n            <Fragment>\n              <SectionTitle separator>Labels</SectionTitle>\n              <ul>\n                {poolInformation.affinity?.nodeAffinity?.requiredDuringSchedulingIgnoredDuringExecution?.nodeSelectorTerms.map(\n                  (term: NodeSelectorTerm) => {\n                    return term.matchExpressions?.map((trm) => {\n                      return (\n                        <li>\n                          {trm.key} - {trm.values?.join(\", \")}\n                        </li>\n                      );\n                    });\n                  },\n                )}\n              </ul>\n            </Fragment>\n          )}\n        </Box>\n        {poolInformation.tolerations &&\n          poolInformation.tolerations.length > 0 && (\n            <Fragment>\n              <SectionTitle separator>Tolerations</SectionTitle>\n              <Box>\n                <ul>\n                  {poolInformation.tolerations.map((tolItem) => {\n                    return (\n                      <li>\n                        {tolItem.operator === \"Equal\" ? (\n                          <Fragment>\n                            If <strong>{tolItem.key}</strong> is equal to{\" \"}\n                            <strong>{tolItem.value}</strong> then{\" \"}\n                            <strong>{tolItem.effect}</strong> after{\" \"}\n                            <strong>\n                              {tolItem.tolerationSeconds?.seconds || 0}\n                            </strong>{\" \"}\n                            seconds\n                          </Fragment>\n                        ) : (\n                          <Fragment>\n                            If <strong>{tolItem.key}</strong> exists then{\" \"}\n                            <strong>{tolItem.effect}</strong> after{\" \"}\n                            <strong>\n                              {tolItem.tolerationSeconds?.seconds || 0}\n                            </strong>{\" \"}\n                            seconds\n                          </Fragment>\n                        )}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </Box>\n            </Fragment>\n          )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default PoolDetails;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { BackLink, SectionTitle, Box } from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setOpenPoolDetails } from \"../tenantsSlice\";\nimport PoolsListing from \"./Pools/Details/PoolsListing\";\nimport PoolDetails from \"./Pools/Details/PoolDetails\";\n\nconst PoolsSummary = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const { pathname = \"\" } = useLocation();\n\n  const selectedPool = useSelector(\n    (state: AppState) => state.tenants.selectedPool,\n  );\n  const poolDetailsOpen = useSelector(\n    (state: AppState) => state.tenants.poolDetailsOpen,\n  );\n\n  return (\n    <Fragment>\n      {poolDetailsOpen && (\n        <Box>\n          <BackLink\n            label={\"Pools list\"}\n            onClick={() => {\n              navigate(pathname);\n              dispatch(setOpenPoolDetails(false));\n            }}\n          />\n        </Box>\n      )}\n      <SectionTitle separator sx={{ marginBottom: 15 }}>\n        {poolDetailsOpen ? `Pool Details - ${selectedPool || \"\"}` : \"Pools\"}\n      </SectionTitle>\n\n      <Box>\n        {poolDetailsOpen ? (\n          <PoolDetails />\n        ) : (\n          <PoolsListing\n            setPoolDetailsView={() => {\n              dispatch(setOpenPoolDetails(true));\n            }}\n          />\n        )}\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default PoolsSummary;\n"],"names":["actionsTray","label","color","fontSize","alignSelf","whiteSpace","marginLeft","display","justifyContent","marginBottom","alignItems","flexGrow","modalStyleUtils","modalButtonBar","marginTop","marginRight","modalFormScrollable","maxHeight","overflowY","paddingTop","_ref","placeholder","onChange","overrideClass","value","id","sx","_jsx","InputBox","className","e","target","startIcon","SearchIcon","setPoolDetailsView","dispatch","useAppDispatch","navigate","useNavigate","loadingTenant","useSelector","state","tenants","tenant","tenantInfo","pools","setPools","useState","filter","setFilter","useEffect","resPools","filteredPools","pool","_pool$name","name","toLowerCase","includes","listActions","type","onClick","selectedValue","setSelectedPool","_jsxs","Fragment","children","Grid","item","xs","SearchBox","TooltipWrapper","tooltip","Button","namespace","icon","AddIcon","variant","DataTable","itemActions","columns","elementKey","renderFullObject","renderFunction","x","niceBytesInt","volumes_per_server","servers","volume_configuration","size","isLoading","records","entityName","idField","customEmptyMessage","customPaperHeight","twoColCssGridLayoutConfig","gridTemplateColumns","gridAutoFlow","gap","padding","breakPoints","sm","PoolDetails","_tenant$pools","_poolInformation$reso","_poolInformation$reso2","_poolInformation$reso3","_poolInformation$reso4","_poolInformation$affi","_poolInformation$affi2","_poolInformation$affi3","_poolInformation$affi4","_poolInformation$affi5","_poolInformation$affi6","selectedPool","poolInformation","find","affinityType","affinity","nodeAffinity","Box","withBorders","customBorderPadding","width","SectionTitle","separator","actions","EditTenantIcon","ValuePair","runtimeClassName","resources","requests","cpu","memory","storage_class_name","securityContext","runAsNonRoot","runAsUser","runAsGroup","fsGroup","md","lg","podAntiAffinity","requiredDuringSchedulingIgnoredDuringExecution","nodeSelectorTerms","map","term","_term$matchExpression","matchExpressions","trm","_trm$values","key","values","join","tolerations","length","tolItem","_tolItem$tolerationSe","_tolItem$tolerationSe2","operator","effect","tolerationSeconds","seconds","PoolsSummary","pathname","useLocation","poolDetailsOpen","BackLink","setOpenPoolDetails","PoolsListing"],"sourceRoot":""}