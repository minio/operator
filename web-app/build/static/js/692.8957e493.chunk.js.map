{"version":3,"file":"static/js/692.8957e493.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolResources.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolConfiguration.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolPodPlacement.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/AddPoolCreateButton.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/AddPool.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport { niceBytes } from \"../../../../../../common/utils\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport api from \"../../../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { IQuotaElement, IQuotas } from \"../../../ListTenants/utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport InputUnitMenu from \"../../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport {\n  isPoolPageValid,\n  setPoolField,\n  setPoolStorageClasses,\n} from \"./addPoolSlice\";\nimport H3Section from \"../../../../Common/H3Section\";\n\ninterface IPoolResourcesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      margin: \"auto\",\n      justifyContent: \"center\",\n      \"& div\": {\n        width: 150,\n        \"@media (max-width: 900px)\": {\n          flexFlow: \"column\",\n        },\n      },\n    },\n    factorElements: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      marginLeft: 30,\n    },\n    sizeNumber: {\n      fontSize: 35,\n      fontWeight: 700,\n      textAlign: \"center\",\n    },\n    sizeDescription: {\n      fontSize: 14,\n      color: \"#777\",\n      textAlign: \"center\",\n    },\n    ...formFieldStyles,\n    ...wizardCommon,\n  });\n\nconst PoolResources = ({ classes }: IPoolResourcesProps) => {\n  const dispatch = useAppDispatch();\n\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n  const storageClasses = useSelector(\n    (state: AppState) => state.addPool.storageClasses\n  );\n  const numberOfNodes = useSelector((state: AppState) =>\n    state.addPool.setup.numberOfNodes.toString()\n  );\n  const storageClass = useSelector(\n    (state: AppState) => state.addPool.setup.storageClass\n  );\n  const volumeSize = useSelector((state: AppState) =>\n    state.addPool.setup.volumeSize.toString()\n  );\n  const volumesPerServer = useSelector((state: AppState) =>\n    state.addPool.setup.volumesPerServer.toString()\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const instanceCapacity: number =\n    parseInt(volumeSize) * 1073741824 * parseInt(volumesPerServer);\n  const totalCapacity: number = instanceCapacity * parseInt(numberOfNodes);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [\n      {\n        fieldKey: \"number_of_nodes\",\n        required: true,\n        value: numberOfNodes.toString(),\n        customValidation:\n          parseInt(numberOfNodes) < 1 || isNaN(parseInt(numberOfNodes)),\n        customValidationMessage: \"Number of servers must be at least 1\",\n      },\n      {\n        fieldKey: \"pool_size\",\n        required: true,\n        value: volumeSize.toString(),\n        customValidation:\n          parseInt(volumeSize) < 1 || isNaN(parseInt(volumeSize)),\n        customValidationMessage: \"Pool Size cannot be 0\",\n      },\n      {\n        fieldKey: \"volumes_per_server\",\n        required: true,\n        value: volumesPerServer.toString(),\n        customValidation:\n          parseInt(volumesPerServer) < 1 || isNaN(parseInt(volumesPerServer)),\n        customValidationMessage: \"1 volume or more are required\",\n      },\n    ];\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPoolPageValid({\n        page: \"setup\",\n        status: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, numberOfNodes, volumeSize, volumesPerServer, storageClass]);\n\n  useEffect(() => {\n    if (storageClasses.length === 0 && tenant) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenant.namespace}/resourcequotas/${tenant.namespace}-storagequota`\n        )\n        .then((res: IQuotas) => {\n          const elements: IQuotaElement[] = get(res, \"elements\", []);\n\n          const newStorage = elements.map((storageClass: any) => {\n            const name = get(storageClass, \"name\", \"\").split(\n              \".storageclass.storage.k8s.io/requests.storage\"\n            )[0];\n\n            return { label: name, value: name };\n          });\n\n          dispatch(\n            setPoolField({\n              page: \"setup\",\n              field: \"storageClass\",\n              value: newStorage[0].value,\n            })\n          );\n\n          dispatch(setPoolStorageClasses(newStorage));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          console.error(err);\n        });\n    }\n  }, [tenant, storageClasses, dispatch]);\n\n  const setFieldInfo = (fieldName: string, value: any) => {\n    dispatch(\n      setPoolField({\n        page: \"setup\",\n        field: fieldName,\n        value: value,\n      })\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>New Pool Configuration</H3Section>\n        <span className={classes.descriptionText}>\n          Configure a new Pool to expand MinIO storage\n        </span>\n      </div>\n\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"number_of_nodes\"\n          name=\"number_of_nodes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            const intValue = parseInt(e.target.value);\n\n            if (e.target.validity.valid && !isNaN(intValue)) {\n              setFieldInfo(\"numberOfNodes\", intValue);\n            } else if (isNaN(intValue)) {\n              setFieldInfo(\"numberOfNodes\", 0);\n            }\n          }}\n          label=\"Number of Servers\"\n          value={numberOfNodes}\n          error={validationErrors[\"number_of_nodes\"] || \"\"}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"pool_size\"\n          name=\"pool_size\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            const intValue = parseInt(e.target.value);\n\n            if (e.target.validity.valid && !isNaN(intValue)) {\n              setFieldInfo(\"volumeSize\", intValue);\n            } else if (isNaN(intValue)) {\n              setFieldInfo(\"volumeSize\", 0);\n            }\n          }}\n          label=\"Volume Size\"\n          value={volumeSize}\n          error={validationErrors[\"pool_size\"] || \"\"}\n          pattern={\"[0-9]*\"}\n          overlayObject={\n            <InputUnitMenu\n              id={\"quota_unit\"}\n              onUnitChange={() => {}}\n              unitSelected={\"Gi\"}\n              unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n              disabled={true}\n            />\n          }\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"volumes_per_sever\"\n          name=\"volumes_per_sever\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            const intValue = parseInt(e.target.value);\n\n            if (e.target.validity.valid && !isNaN(intValue)) {\n              setFieldInfo(\"volumesPerServer\", intValue);\n            } else if (isNaN(intValue)) {\n              setFieldInfo(\"volumesPerServer\", 0);\n            }\n          }}\n          label=\"Volumes per Server\"\n          value={volumesPerServer}\n          error={validationErrors[\"volumes_per_server\"] || \"\"}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <SelectWrapper\n          id=\"storage_class\"\n          name=\"storage_class\"\n          onChange={(e: SelectChangeEvent<string>) => {\n            setFieldInfo(\"storageClass\", e.target.value as string);\n          }}\n          label=\"Storage Class\"\n          value={storageClass}\n          options={storageClasses}\n          disabled={storageClasses.length < 1}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.bottomContainer}>\n        <div className={classes.factorElements}>\n          <div>\n            <div className={classes.sizeNumber}>\n              {niceBytes(instanceCapacity.toString(10))}\n            </div>\n            <div className={classes.sizeDescription}>Instance Capacity</div>\n          </div>\n          <div>\n            <div className={classes.sizeNumber}>\n              {niceBytes(totalCapacity.toString(10))}\n            </div>\n            <div className={classes.sizeDescription}>Total Capacity</div>\n          </div>\n        </div>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(PoolResources);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPoolPageValid, setPoolField } from \"./addPoolSlice\";\nimport H3Section from \"../../../../Common/H3Section\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst PoolConfiguration = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const securityContextEnabled = useSelector(\n    (state: AppState) => state.addPool.configuration.securityContextEnabled\n  );\n  const securityContext = useSelector(\n    (state: AppState) => state.addPool.configuration.securityContext\n  );\n  const customRuntime = useSelector(\n    (state: AppState) => state.addPool.configuration.customRuntime\n  );\n  const runtimeClassName = useSelector(\n    (state: AppState) => state.addPool.configuration.runtimeClassName\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        setPoolField({\n          page: \"configuration\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (securityContextEnabled) {\n      customAccountValidation = [\n        {\n          fieldKey: \"pool_securityContext_runAsUser\",\n          required: true,\n          value: securityContext.runAsUser,\n          customValidation:\n            securityContext.runAsUser === \"\" ||\n            parseInt(securityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"pool_securityContext_runAsGroup\",\n          required: true,\n          value: securityContext.runAsGroup,\n          customValidation:\n            securityContext.runAsGroup === \"\" ||\n            parseInt(securityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"pool_securityContext_fsGroup\",\n          required: true,\n          value: securityContext.fsGroup!,\n          customValidation:\n            securityContext.fsGroup === \"\" ||\n            parseInt(securityContext.fsGroup!) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPoolPageValid({\n        page: \"configure\",\n        status: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, securityContextEnabled, securityContext]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Configure</H3Section>\n        <span className={classes.descriptionText}>\n          Aditional Configurations for the new Pool\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"pool_configuration\"\n          name=\"pool_configuration\"\n          checked={securityContextEnabled}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"securityContextEnabled\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {securityContextEnabled && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Pool's Security Context\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"pool_securityContext_runAsUser\"\n                    name=\"pool_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"securityContext\", {\n                        ...securityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"pool_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={securityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"pool_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"pool_securityContext_runAsGroup\"\n                    name=\"pool_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"securityContext\", {\n                        ...securityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"pool_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={securityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"pool_securityContext_runAsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"pool_securityContext_fsGroup\"\n                    name=\"pool_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"securityContext\", {\n                        ...securityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"pool_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={securityContext.fsGroup!}\n                    required\n                    error={\n                      validationErrors[\"pool_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"securityContextRunAsNonRoot\"\n                  id=\"pool_securityContext_runAsNonRoot\"\n                  name=\"pool_securityContext_runAsNonRoot\"\n                  checked={securityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"securityContext\", {\n                      ...securityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Grid\n        item\n        xs={12}\n        className={classes.configSectionItem}\n        sx={{ marginTop: \"10px\" }}\n      >\n        <FormSwitchWrapper\n          value=\"customRuntime\"\n          id=\"tenant_custom_runtime\"\n          name=\"tenant_custom_runtime\"\n          checked={customRuntime}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"customRuntime\", checked);\n          }}\n          label={\"Custom Runtime Configurations\"}\n        />\n      </Grid>\n      {customRuntime && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Runtime Configurations\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"tenant_runtime_runtimeClassName\"\n                  name=\"tenant_runtime_runtimeClassName\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"runtimeClassName\", e.target.value);\n                    cleanValidation(\"tenant_runtime_runtimeClassName\");\n                  }}\n                  label=\"Runtime Class Name\"\n                  value={runtimeClassName}\n                  error={\n                    validationErrors[\"tenant_runtime_runtimeClassName\"] || \"\"\n                  }\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(PoolConfiguration);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport { LabelKeyPair } from \"../../../types\";\nimport RadioGroupSelector from \"../../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../../common/api\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { AddIcon, RemoveIcon } from \"mds\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../../systemSlice\";\nimport {\n  addNewPoolToleration,\n  isPoolPageValid,\n  removePoolToleration,\n  setPoolField,\n  setPoolKeyValuePairs,\n  setPoolTolerationInfo,\n} from \"./addPoolSlice\";\nimport H3Section from \"../../../../Common/H3Section\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.addPool.affinity.podAffinity\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.addPool.affinity.nodeSelectorLabels\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.addPool.affinity.withPodAntiAffinity\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.addPool.nodeSelectorPairs\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.addPool.tolerations\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        setPoolField({\n          page: \"affinity\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPoolPageValid({\n        page: \"affinity\",\n        status: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setPoolTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      })\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Pod Placement</H3Section>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setPoolKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setPoolKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setPoolKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setPoolKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setPoolKeyValuePairs(arrCp));\n                            }}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        {keyValuePairs.length > 1 && (\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                const arrCp = keyValuePairs.filter(\n                                  (item, index) => index !== i\n                                );\n                                dispatch(setPoolKeyValuePairs(arrCp));\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        )}\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewPoolToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removePoolToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"mds\";\nimport React from \"react\";\nimport { addPoolAsync } from \"./addPoolThunks\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\n\nconst AddPoolCreateButton = () => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) => state.addPool.setup.storageClass\n  );\n  const validPages = useSelector((state: AppState) => state.addPool.validPages);\n\n  const sending = useSelector((state: AppState) => state.addPool.sending);\n  const requiredPages = [\"setup\", \"affinity\", \"configure\"];\n  const enabled =\n    !sending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"callAction\"\n      onClick={() => {\n        dispatch(addPoolAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n      label={\"Create\"}\n    />\n  );\n};\n\nexport default AddPoolCreateButton;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { niceBytes } from \"../../../../../../common/utils\";\nimport { LinearProgress } from \"@mui/material\";\nimport PageLayout from \"../../../../Common/Layout/PageLayout\";\nimport GenericWizard from \"../../../../Common/GenericWizard/GenericWizard\";\nimport { IWizardElement } from \"../../../../Common/GenericWizard/types\";\nimport PoolResources from \"./PoolResources\";\nimport ScreenTitle from \"../../../../Common/ScreenTitle/ScreenTitle\";\nimport { BackLink, TenantsIcon } from \"mds\";\n\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport PoolConfiguration from \"./PoolConfiguration\";\nimport PoolPodPlacement from \"./PoolPodPlacement\";\n\nimport { resetPoolForm } from \"./addPoolSlice\";\nimport AddPoolCreateButton from \"./AddPoolCreateButton\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport PageHeaderWrapper from \"../../../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      margin: \"auto\",\n      justifyContent: \"center\",\n      \"& div\": {\n        width: 150,\n        \"@media (max-width: 900px)\": {\n          flexFlow: \"column\",\n        },\n      },\n    },\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n      borderTop: 0,\n    },\n    addPoolTitle: {\n      border: \"1px solid #EAEAEA\",\n      borderBottom: 0,\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  })\n);\n\nconst AddPool = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n  const sending = useSelector((state: AppState) => state.addPool.sending);\n  const navigateTo = useSelector((state: AppState) => state.addPool.navigateTo);\n\n  const poolsURL = `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n    tenant?.name || \"\"\n  }/pools`;\n\n  useEffect(() => {\n    if (navigateTo !== \"\") {\n      const goTo = `${navigateTo}`;\n      dispatch(resetPoolForm());\n      navigate(goTo);\n    }\n  }, [navigateTo, navigate, dispatch]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetPoolForm());\n      navigate(poolsURL);\n    },\n  };\n\n  const createButton = {\n    componentRender: <AddPoolCreateButton key={\"add-pool-crate\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <PoolResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configuration\",\n      advancedOnly: true,\n      componentRender: <PoolConfiguration />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <PoolPodPlacement />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeaderWrapper\n          label={\n            <Fragment>\n              <BackLink\n                label={`Tenant Pools`}\n                onClick={() => navigate(poolsURL)}\n              />\n            </Fragment>\n          }\n        />\n        <PageLayout>\n          <Grid item xs={12} className={classes.addPoolTitle}>\n            <ScreenTitle\n              icon={<TenantsIcon />}\n              title={`Add New Pool to ${tenant?.name || \"\"}`}\n              subTitle={\n                <Fragment>\n                  Namespace: {tenant?.namespace || \"\"} / Current Capacity:{\" \"}\n                  {niceBytes((tenant?.total_size || 0).toString(10))}\n                </Fragment>\n              }\n            />\n          </Grid>\n          {sending && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n          <Grid item xs={12} className={classes.pageBox}>\n            <GenericWizard wizardSteps={wizardSteps} />\n          </Grid>\n        </PageLayout>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AddPool;\n"],"names":["withStyles","theme","createStyles","_objectSpread","bottomContainer","display","flexGrow","alignItems","margin","justifyContent","width","flexFlow","factorElements","marginLeft","sizeNumber","fontSize","fontWeight","textAlign","sizeDescription","color","formFieldStyles","wizardCommon","_ref","classes","dispatch","useAppDispatch","tenant","useSelector","state","tenants","tenantInfo","storageClasses","addPool","numberOfNodes","setup","toString","storageClass","volumeSize","volumesPerServer","_useState","useState","_useState2","_slicedToArray","validationErrors","setValidationErrors","instanceCapacity","parseInt","totalCapacity","useEffect","customAccountValidation","fieldKey","required","value","customValidation","isNaN","customValidationMessage","commonVal","commonFormValidation","isPoolPageValid","page","status","Object","keys","length","api","invoke","concat","namespace","then","res","newStorage","get","map","name","split","label","setPoolField","field","setPoolStorageClasses","catch","err","console","error","setFieldInfo","fieldName","_jsxs","Paper","className","paperWrapper","children","headerElement","_jsx","H3Section","descriptionText","Grid","item","xs","formFieldRow","InputBoxWrapper","id","onChange","e","intValue","target","validity","valid","pattern","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","disabled","SelectWrapper","options","niceBytes","configSectionItem","marginRight","border","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","paddingTop","marginBottom","responsiveSectionItem","modalBasic","securityContextEnabled","configuration","securityContext","customRuntime","runtimeClassName","updateField","useCallback","runAsUser","runAsGroup","fsGroup","cleanValidation","clearValidationError","FormSwitchWrapper","checked","multiContainer","type","min","runAsNonRoot","sx","marginTop","overlayAction","maxWidth","maxHeight","background","affinityConfigField","affinityFieldLabel","flex","radioField","affinityLabelKey","affinityLabelValue","rowActions","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","_useState3","_useState4","loading","setLoading","_useState5","_useState6","keyValueMap","setKeyValueMap","_useState7","_useState8","keyOptions","setKeyOptions","k","push","setModalErrorSnackMessage","vl","filter","kvp","key","kvs","i","a","indexOf","join","splittedLabels","forEach","index","splitItem","_toConsumableArray","updateToleration","alterToleration","_defineProperty","setPoolTolerationInfo","tolerationValue","affinityHelpText","RadioGroupSelector","currentSelection","selectorOptions","Fragment","container","newKey","newLKP","arrCp","setPoolKeyValuePairs","placeholder","v","IconButton","size","onClick","AddIcon","RemoveIcon","tol","_tol$tolerationSecond","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewPoolToleration","removePoolToleration","selectedStorageClass","validPages","enabled","sending","every","includes","Button","variant","addPoolAsync","useStyles","makeStyles","pageBox","borderTop","addPoolTitle","borderBottom","modalStyleUtils","navigate","useNavigate","navigateTo","poolsURL","goTo","resetPoolForm","cancelButton","action","createButton","componentRender","AddPoolCreateButton","wizardSteps","PoolResources","buttons","advancedOnly","PoolConfiguration","PoolPodPlacement","PageHeaderWrapper","BackLink","PageLayout","ScreenTitle","icon","TenantsIcon","title","subTitle","total_size","LinearProgress","GenericWizard"],"sourceRoot":""}