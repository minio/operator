{"version":3,"file":"static/js/585.cc390c26.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/Tenants/TenantDetails/TenantDetails.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null,\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  BackLink,\n  Box,\n  Button,\n  CircleIcon,\n  EditIcon,\n  Grid,\n  MinIOTierIconXs,\n  PageLayout,\n  ProgressBar,\n  RefreshIcon,\n  ScreenTitle,\n  Tabs,\n  TenantsIcon,\n  TrashIcon,\n} from \"mds\";\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n  useParams,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport { setSnackBarMessage } from \"../../../../systemSlice\";\nimport { setTenantName } from \"../tenantsSlice\";\nimport { getTenantAsync } from \"../thunks/tenantDetailsAsync\";\nimport { tenantIsOnline } from \"./utils\";\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst TenantYAML = withSuspense(React.lazy(() => import(\"./TenantYAML\")));\nconst TenantSummary = withSuspense(React.lazy(() => import(\"./TenantSummary\")));\nconst TenantLicense = withSuspense(React.lazy(() => import(\"./TenantLicense\")));\nconst PoolsSummary = withSuspense(React.lazy(() => import(\"./PoolsSummary\")));\nconst PodsSummary = withSuspense(React.lazy(() => import(\"./PodsSummary\")));\nconst TenantEvents = withSuspense(React.lazy(() => import(\"./TenantEvents\")));\nconst TenantCSR = withSuspense(React.lazy(() => import(\"./TenantCSR\")));\nconst VolumesSummary = withSuspense(\n  React.lazy(() => import(\"./VolumesSummary\")),\n);\nconst TenantMetrics = withSuspense(React.lazy(() => import(\"./TenantMetrics\")));\nconst TenantTrace = withSuspense(React.lazy(() => import(\"./TenantTrace\")));\nconst TenantVolumes = withSuspense(\n  React.lazy(() => import(\"./pvcs/TenantVolumes\")),\n);\nconst TenantIdentityProvider = withSuspense(\n  React.lazy(() => import(\"./TenantIdentityProvider\")),\n);\nconst TenantSecurity = withSuspense(\n  React.lazy(() => import(\"./TenantSecurity\")),\n);\nconst TenantEncryption = withSuspense(\n  React.lazy(() => import(\"./TenantEncryption\")),\n);\nconst DeleteTenant = withSuspense(\n  React.lazy(() => import(\"../ListTenants/DeleteTenant\")),\n);\nconst PodDetails = withSuspense(React.lazy(() => import(\"./pods/PodDetails\")));\n\nconst TenantConfiguration = withSuspense(\n  React.lazy(() => import(\"./TenantConfiguration\")),\n);\n\nconst HealthsStatusIcon = styled.div(({ theme }) => ({\n  position: \"relative\",\n  fontSize: 10,\n  left: 26,\n  height: 10,\n  top: 4,\n  \"& .statusIcon\": {\n    color: get(theme, \"signalColors.disabled\", \"#E6EBEB\"),\n    \"&.red\": {\n      color: get(theme, \"signalColors.danger\", \"#C51B3F\"),\n    },\n    \"&.yellow\": {\n      color: get(theme, \"signalColors.warning\", \"#FFBD62\"),\n    },\n    \"&.green\": {\n      color: get(theme, \"signalColors.good\", \"#4CCB92\"),\n    },\n  },\n}));\n\nconst TenantDetails = () => {\n  const dispatch = useAppDispatch();\n  const params = useParams();\n  const navigate = useNavigate();\n  const { pathname = \"\" } = useLocation();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant,\n  );\n  const selectedTenant = useSelector(\n    (state: AppState) => state.tenants.currentTenant,\n  );\n  const selectedNamespace = useSelector(\n    (state: AppState) => state.tenants.currentNamespace,\n  );\n  const tenantInfo = useSelector((state: AppState) => state.tenants.tenantInfo);\n\n  const tenantName = params.tenantName || \"\";\n  const tenantNamespace = params.tenantNamespace || \"\";\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n\n  // if the current tenant selected is not the one in the redux, reload it\n  useEffect(() => {\n    if (\n      selectedNamespace !== tenantNamespace ||\n      selectedTenant !== tenantName\n    ) {\n      dispatch(\n        setTenantName({\n          name: tenantName,\n          namespace: tenantNamespace,\n        }),\n      );\n      dispatch(getTenantAsync());\n    }\n  }, [\n    selectedTenant,\n    selectedNamespace,\n    dispatch,\n    tenantName,\n    tenantNamespace,\n  ]);\n\n  const editYaml = () => {\n    navigate(getRoutePath(\"summary/yaml\"));\n  };\n\n  const getRoutePath = (newValue: string) => {\n    return `/namespaces/${tenantNamespace}/tenants/${tenantName}/${newValue}`;\n  };\n\n  const confirmDeleteTenant = () => {\n    setDeleteOpen(true);\n  };\n\n  const closeDeleteModalAndRefresh = (reloadData: boolean) => {\n    setDeleteOpen(false);\n\n    if (reloadData) {\n      dispatch(setSnackBarMessage(\"Tenant Deleted\"));\n      navigate(`/tenants`);\n    }\n  };\n\n  return (\n    <Fragment>\n      {deleteOpen && tenantInfo !== null && (\n        <DeleteTenant\n          deleteOpen={deleteOpen}\n          selectedTenant={tenantInfo}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n\n      <PageHeaderWrapper\n        label={\n          <Fragment>\n            <BackLink\n              label=\"Tenants\"\n              onClick={() => navigate(IAM_PAGES.TENANTS)}\n            />\n          </Fragment>\n        }\n        actions={<Fragment />}\n      />\n\n      <PageLayout variant={\"constrained\"}>\n        {loadingTenant && (\n          <Grid item xs={12}>\n            <ProgressBar />\n          </Grid>\n        )}\n        <Box\n          withBorders={true}\n          customBorderPadding={\"0px\"}\n          sx={{ borderBottom: 0 }}\n        >\n          <ScreenTitle\n            icon={\n              <Fragment>\n                <HealthsStatusIcon>\n                  {tenantInfo && tenantInfo.status && (\n                    <span\n                      className={`statusIcon ${tenantInfo.status\n                        ?.health_status!}`}\n                    >\n                      <CircleIcon style={{ width: 15, height: 15 }} />\n                    </span>\n                  )}\n                </HealthsStatusIcon>\n                <TenantsIcon />\n              </Fragment>\n            }\n            title={tenantName}\n            subTitle={\n              <Fragment>\n                Namespace: {tenantNamespace} / Capacity:{\" \"}\n                {niceBytes((tenantInfo?.total_size || 0).toString(10))}\n              </Fragment>\n            }\n            actions={\n              <Box\n                sx={{ display: \"flex\", justifyContent: \"flex-end\", gap: 10 }}\n              >\n                <TooltipWrapper tooltip={\"Delete\"}>\n                  <Button\n                    id={\"delete-tenant\"}\n                    variant=\"secondary\"\n                    onClick={() => {\n                      confirmDeleteTenant();\n                    }}\n                    color=\"secondary\"\n                    icon={<TrashIcon />}\n                  />\n                </TooltipWrapper>\n                <TooltipWrapper tooltip={\"Edit YAML\"}>\n                  <Button\n                    icon={<EditIcon />}\n                    id={\"yaml_button\"}\n                    variant=\"regular\"\n                    aria-label=\"Edit YAML\"\n                    onClick={() => {\n                      editYaml();\n                    }}\n                  />\n                </TooltipWrapper>\n                <TooltipWrapper tooltip={\"Management Console\"}>\n                  <Button\n                    id={\"tenant-hop\"}\n                    onClick={() => {\n                      navigate(\n                        `/namespaces/${tenantNamespace}/tenants/${tenantName}/hop`,\n                      );\n                    }}\n                    disabled={!tenantInfo || !tenantIsOnline(tenantInfo)}\n                    variant={\"regular\"}\n                    icon={<MinIOTierIconXs style={{ height: 16 }} />}\n                  />\n                </TooltipWrapper>\n                <TooltipWrapper tooltip={\"Refresh\"}>\n                  <Button\n                    id={\"tenant-refresh\"}\n                    variant=\"regular\"\n                    aria-label=\"Refresh List\"\n                    onClick={() => {\n                      dispatch(getTenantAsync());\n                    }}\n                    icon={<RefreshIcon />}\n                  />\n                </TooltipWrapper>\n              </Box>\n            }\n          />\n        </Box>\n\n        <Tabs\n          currentTabOrPath={pathname}\n          useRouteTabs\n          onTabClick={(route) => navigate(route)}\n          routes={\n            <Routes>\n              <Route path={\"summary\"} element={<TenantSummary />} />\n              <Route path={\"configuration\"} element={<TenantConfiguration />} />\n              <Route path={`summary/yaml`} element={<TenantYAML />} />\n              <Route path={\"metrics\"} element={<TenantMetrics />} />\n              <Route path={\"trace\"} element={<TenantTrace />} />\n              <Route\n                path={\"identity-provider\"}\n                element={<TenantIdentityProvider />}\n              />\n              <Route path={\"security\"} element={<TenantSecurity />} />\n              <Route path={\"encryption\"} element={<TenantEncryption />} />\n              <Route path={\"pools\"} element={<PoolsSummary />} />\n              <Route path={\"pods/:podName\"} element={<PodDetails />} />\n              <Route path={\"pods\"} element={<PodsSummary />} />\n              <Route path={\"pvcs/:PVCName\"} element={<TenantVolumes />} />\n              <Route path={\"volumes\"} element={<VolumesSummary />} />\n              <Route path={\"license\"} element={<TenantLicense />} />\n              <Route path={\"events\"} element={<TenantEvents />} />\n              <Route path={\"csr\"} element={<TenantCSR />} />\n              <Route\n                path={\"/\"}\n                element={\n                  <Navigate\n                    to={`/namespaces/${tenantNamespace}/tenants/${tenantName}/summary`}\n                  />\n                }\n              />\n            </Routes>\n          }\n          options={[\n            {\n              tabConfig: {\n                label: \"Summary\",\n                id: `details-summary`,\n                to: getRoutePath(\"summary\"),\n              },\n            },\n            {\n              tabConfig: {\n                label: \"Configuration\",\n                id: `details-configuration`,\n                to: getRoutePath(\"configuration\"),\n              },\n            },\n            {\n              tabConfig: {\n                label: \"Metrics\",\n                id: `details-metrics`,\n                to: getRoutePath(\"metrics\"),\n              },\n            },\n            {\n              tabConfig: {\n                label: \"Identity Provider\",\n                id: `details-idp`,\n                to: getRoutePath(\"identity-provider\"),\n              },\n            },\n            {\n              tabConfig: {\n                label: \"Security\",\n                id: `details-security`,\n                to: getRoutePath(\"security\"),\n              },\n            },\n            {\n              tabConfig: {\n                label: \"Encryption\",\n                id: `details-encryption`,\n                to: getRoutePath(\"encryption\"),\n              },\n            },\n            {\n              tabConfig: {\n                label: \"Pools\",\n                id: `details-pools`,\n                to: getRoutePath(\"pools\"),\n              },\n            },\n            {\n              tabConfig: {\n                label: \"Pods\",\n                id: \"tenant-pod-tab\",\n                to: getRoutePath(\"pods\"),\n              },\n            },\n\n            {\n              tabConfig: {\n                label: \"Volumes\",\n                id: `details-volumes`,\n                to: getRoutePath(\"volumes\"),\n              },\n            },\n            {\n              tabConfig: {\n                label: \"Events\",\n                id: `details-events`,\n                to: getRoutePath(\"events\"),\n              },\n            },\n            {\n              tabConfig: {\n                label: \"Certificate Requests\",\n                id: `details-csr`,\n                to: getRoutePath(\"csr\"),\n              },\n            },\n            {\n              tabConfig: {\n                label: \"License\",\n                id: `details-license`,\n                to: getRoutePath(\"license\"),\n              },\n            },\n          ]}\n        />\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default TenantDetails;\n"],"names":["WrappedComponent","fallback","arguments","length","undefined","props","_jsx","Suspense","children","TenantYAML","withSuspense","React","TenantSummary","TenantLicense","PoolsSummary","PodsSummary","TenantEvents","TenantCSR","VolumesSummary","TenantMetrics","TenantTrace","TenantVolumes","TenantIdentityProvider","TenantSecurity","TenantEncryption","DeleteTenant","PodDetails","TenantConfiguration","HealthsStatusIcon","styled","div","_ref","theme","position","fontSize","left","height","top","color","get","TenantDetails","_tenantInfo$status","dispatch","useAppDispatch","params","useParams","navigate","useNavigate","pathname","useLocation","loadingTenant","useSelector","state","tenants","selectedTenant","currentTenant","selectedNamespace","currentNamespace","tenantInfo","tenantName","tenantNamespace","deleteOpen","setDeleteOpen","useState","useEffect","setTenantName","name","namespace","getTenantAsync","getRoutePath","newValue","concat","_jsxs","Fragment","closeDeleteModalAndRefresh","reloadData","setSnackBarMessage","PageHeaderWrapper","label","BackLink","onClick","IAM_PAGES","TENANTS","actions","PageLayout","variant","Grid","item","xs","ProgressBar","Box","withBorders","customBorderPadding","sx","borderBottom","ScreenTitle","icon","status","className","health_status","CircleIcon","style","width","TenantsIcon","title","subTitle","niceBytes","total_size","toString","display","justifyContent","gap","TooltipWrapper","tooltip","Button","id","TrashIcon","EditIcon","disabled","tenantIsOnline","MinIOTierIconXs","RefreshIcon","Tabs","currentTabOrPath","useRouteTabs","onTabClick","route","routes","Routes","Route","path","element","Navigate","to","options","tabConfig"],"sourceRoot":""}