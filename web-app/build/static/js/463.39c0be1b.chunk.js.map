{"version":3,"file":"static/js/463.39c0be1b.chunk.js","mappings":"iGAAA,SAASA,EAAEC,GAAG,IAAIC,EAAEC,EAAEC,EAAE,GAAG,GAAG,iBAAiBH,GAAG,iBAAiBA,EAAEG,GAAGH,OAAO,GAAG,iBAAiBA,EAAE,GAAGI,MAAMC,QAAQL,GAAG,IAAIC,EAAE,EAAEA,EAAED,EAAEM,OAAOL,IAAID,EAAEC,KAAKC,EAAEH,EAAEC,EAAEC,OAAOE,IAAIA,GAAG,KAAKA,GAAGD,QAAQ,IAAID,KAAKD,EAAEA,EAAEC,KAAKE,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,C,iBAA2H,QAAnH,WAAgB,IAAI,IAAIH,EAAEC,EAAEC,EAAE,EAAEC,EAAE,GAAGD,EAAEK,UAAUD,SAASN,EAAEO,UAAUL,QAAQD,EAAEF,EAAEC,MAAMG,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,C,gBCAlV,SAASK,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,oCAExB,C,8DCHA,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAMR,OAAQS,IAAK,CACrC,IAAIC,EAAaF,EAAMC,GACvBC,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeR,GAAQ,EAAAS,EAAA,GAAcN,EAAWO,KAAMP,EAC/D,CACF,CACe,SAASQ,EAAad,EAAae,EAAYC,GAM5D,OALID,GAAYb,EAAkBF,EAAYiB,UAAWF,GACrDC,GAAad,EAAkBF,EAAagB,GAChDN,OAAOC,eAAeX,EAAa,YAAa,CAC9CS,UAAU,IAELT,CACT,C,wBCfe,SAASkB,EAA2BC,EAAMC,GACvD,GAAIA,IAA2B,YAAlB,OAAQA,IAAsC,oBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAInB,UAAU,4DAEtB,OAAO,EAAAoB,EAAA,GAAsBF,EAC/B,CCTe,SAASG,EAAgBC,GAItC,OAHAD,EAAkBZ,OAAOc,eAAiBd,OAAOe,eAAeC,OAAS,SAAyBH,GAChG,OAAOA,EAAEI,WAAajB,OAAOe,eAAeF,EAC9C,EACOD,EAAgBC,EACzB,C,cCJe,SAASK,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAI7B,UAAU,sDAEtB4B,EAASZ,UAAYP,OAAOqB,OAAOD,GAAcA,EAAWb,UAAW,CACrEe,YAAa,CACXC,MAAOJ,EACPpB,UAAU,EACVD,cAAc,KAGlBE,OAAOC,eAAekB,EAAU,YAAa,CAC3CpB,UAAU,IAERqB,IAAY,EAAAN,EAAA,GAAeK,EAAUC,EAC3C,C,sDCbe,SAASI,EAAkDC,GACxE,IAAIC,EAAYD,EAAKC,UACjBC,EAAWF,EAAKE,SAChBC,EAA0BH,EAAKG,wBAC/BC,EAA+BJ,EAAKI,6BACpCC,EAAiBL,EAAKK,eACtBC,EAAeN,EAAKM,aACpBC,EAAoBP,EAAKO,kBACzBC,EAAgBR,EAAKQ,cACrBC,EAAqCT,EAAKS,mCAI1CR,IAAcI,IAAuC,kBAAbH,GAAiD,kBAAjBI,GAA8BJ,IAAaI,KACrHH,EAAwBC,GAGpBI,GAAiB,GAAKA,IAAkBD,GAC1CE,IAGN,CCvBe,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIjC,EAAKR,EADLF,ECHS,SAAuC2C,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IAEIjC,EAAKR,EAFLF,EAAS,CAAC,EACV6C,EAAatC,OAAOuC,KAAKH,GAE7B,IAAKzC,EAAI,EAAGA,EAAI2C,EAAWpD,OAAQS,IACjCQ,EAAMmC,EAAW3C,GACb0C,EAASG,QAAQrC,IAAQ,IAC7BV,EAAOU,GAAOiC,EAAOjC,IAEvB,OAAOV,CACT,CDRe,CAA6B2C,EAAQC,GAElD,GAAIrC,OAAOyC,sBAAuB,CAChC,IAAIC,EAAmB1C,OAAOyC,sBAAsBL,GACpD,IAAKzC,EAAI,EAAGA,EAAI+C,EAAiBxD,OAAQS,IACvCQ,EAAMuC,EAAiB/C,GACnB0C,EAASG,QAAQrC,IAAQ,GACxBH,OAAOO,UAAUoC,qBAAqBjC,KAAK0B,EAAQjC,KACxDV,EAAOU,GAAOiC,EAAOjC,GAEzB,CACA,OAAOV,CACT,CEbA,ICKImD,EAEJ,WAKE,SAASA,EAA2BnB,GAClC,IAAIC,EAAYD,EAAKC,UACjBmB,EAAiBpB,EAAKoB,eACtBC,EAAoBrB,EAAKqB,kBAE7B1D,EAAgB2D,KAAMH,IAEtBI,EAAAA,EAAAA,GAAgBD,KAAM,2BAA4B,CAAC,IAEnDC,EAAAA,EAAAA,GAAgBD,KAAM,sBAAuB,IAE7CC,EAAAA,EAAAA,GAAgBD,KAAM,qBAAsB,IAE5CC,EAAAA,EAAAA,GAAgBD,KAAM,kBAAc,IAEpCC,EAAAA,EAAAA,GAAgBD,KAAM,uBAAmB,IAEzCC,EAAAA,EAAAA,GAAgBD,KAAM,0BAAsB,GAE5CA,KAAKE,gBAAkBJ,EACvBE,KAAKG,WAAaxB,EAClBqB,KAAKI,mBAAqBL,CAC5B,CAqQA,OAnQA1C,EAAawC,EAA4B,CAAC,CACxCzC,IAAK,qBACLoB,MAAO,WACL,OAAO,CACT,GACC,CACDpB,IAAK,YACLoB,MAAO,SAAmB6B,GACxB,IAAI1B,EAAY0B,EAAM1B,UAClBoB,EAAoBM,EAAMN,kBAC1BD,EAAiBO,EAAMP,eAC3BE,KAAKG,WAAaxB,EAClBqB,KAAKI,mBAAqBL,EAC1BC,KAAKE,gBAAkBJ,CACzB,GACC,CACD1C,IAAK,eACLoB,MAAO,WACL,OAAOwB,KAAKG,UACd,GACC,CACD/C,IAAK,uBACLoB,MAAO,WACL,OAAOwB,KAAKI,kBACd,GACC,CACDhD,IAAK,uBACLoB,MAAO,WACL,OAAOwB,KAAKM,kBACd,GACC,CACDlD,IAAK,sBACLoB,MAAO,WACL,OAAO,CACT,GAMC,CACDpB,IAAK,2BACLoB,MAAO,SAAkC+B,GACvC,GAAIA,EAAQ,GAAKA,GAASP,KAAKG,WAC7B,MAAMK,MAAM,mBAAmBC,OAAOF,EAAO,4BAA4BE,OAAOT,KAAKG,aAGvF,GAAII,EAAQP,KAAKM,mBAIf,IAHA,IAAII,EAAkCV,KAAKW,uCACvCC,EAASF,EAAgCE,OAASF,EAAgCG,KAE7EjE,EAAIoD,KAAKM,mBAAqB,EAAG1D,GAAK2D,EAAO3D,IAAK,CACzD,IAAIiE,EAAOb,KAAKE,gBAAgB,CAC9BK,MAAO3D,IAKT,QAAakE,IAATD,GAAsBE,MAAMF,GAC9B,MAAML,MAAM,kCAAkCC,OAAO7D,EAAG,cAAc6D,OAAOI,IAC3D,OAATA,GACTb,KAAKgB,yBAAyBpE,GAAK,CACjCgE,OAAQA,EACRC,KAAM,GAERb,KAAKiB,kBAAoBV,IAEzBP,KAAKgB,yBAAyBpE,GAAK,CACjCgE,OAAQA,EACRC,KAAMA,GAERD,GAAUC,EACVb,KAAKM,mBAAqBC,EAE9B,CAGF,OAAOP,KAAKgB,yBAAyBT,EACvC,GACC,CACDnD,IAAK,uCACLoB,MAAO,WACL,OAAOwB,KAAKM,oBAAsB,EAAIN,KAAKgB,yBAAyBhB,KAAKM,oBAAsB,CAC7FM,OAAQ,EACRC,KAAM,EAEV,GAOC,CACDzD,IAAK,eACLoB,MAAO,WACL,IAAIkC,EAAkCV,KAAKW,uCAI3C,OAH+BD,EAAgCE,OAASF,EAAgCG,MAC/Eb,KAAKG,WAAaH,KAAKM,mBAAqB,GACfN,KAAKI,kBAE7D,GAaC,CACDhD,IAAK,2BACLoB,MAAO,SAAkC0C,GACvC,IAAIC,EAAcD,EAAME,MACpBA,OAAwB,IAAhBD,EAAyB,OAASA,EAC1CE,EAAgBH,EAAMG,cACtBC,EAAgBJ,EAAMI,cACtBC,EAAcL,EAAMK,YAExB,GAAIF,GAAiB,EACnB,OAAO,EAGT,IAGIG,EAHAC,EAAQzB,KAAK0B,yBAAyBH,GACtCI,EAAYF,EAAMb,OAClBgB,EAAYD,EAAYN,EAAgBI,EAAMZ,KAGlD,OAAQO,GACN,IAAK,QACHI,EAAcG,EACd,MAEF,IAAK,MACHH,EAAcI,EACd,MAEF,IAAK,SACHJ,EAAcG,GAAaN,EAAgBI,EAAMZ,MAAQ,EACzD,MAEF,QACEW,EAAcK,KAAKC,IAAIF,EAAWC,KAAKE,IAAIJ,EAAWL,IAI1D,IAAIU,EAAYhC,KAAKiC,eACrB,OAAOJ,KAAKC,IAAI,EAAGD,KAAKE,IAAIC,EAAYX,EAAeG,GACzD,GACC,CACDpE,IAAK,sBACLoB,MAAO,SAA6B0D,GAClC,IAAIb,EAAgBa,EAAOb,cACvBT,EAASsB,EAAOtB,OAGpB,GAAkB,IAFFZ,KAAKiC,eAGnB,MAAO,CAAC,EAGV,IAAIN,EAAYf,EAASS,EAErBc,EAAQnC,KAAKoC,iBAAiBxB,GAE9Ba,EAAQzB,KAAK0B,yBAAyBS,GAC1CvB,EAASa,EAAMb,OAASa,EAAMZ,KAG9B,IAFA,IAAIwB,EAAOF,EAEJvB,EAASe,GAAaU,EAAOrC,KAAKG,WAAa,GACpDkC,IACAzB,GAAUZ,KAAK0B,yBAAyBW,GAAMxB,KAGhD,MAAO,CACLsB,MAAOA,EACPE,KAAMA,EAEV,GAOC,CACDjF,IAAK,YACLoB,MAAO,SAAmB+B,GACxBP,KAAKM,mBAAqBuB,KAAKE,IAAI/B,KAAKM,mBAAoBC,EAAQ,EACtE,GACC,CACDnD,IAAK,gBACLoB,MAAO,SAAuB8D,EAAMC,EAAK3B,GACvC,KAAO2B,GAAOD,GAAM,CAClB,IAAIE,EAASD,EAAMV,KAAKY,OAAOH,EAAOC,GAAO,GACzCjB,EAAgBtB,KAAK0B,yBAAyBc,GAAQ5B,OAE1D,GAAIU,IAAkBV,EACpB,OAAO4B,EACElB,EAAgBV,EACzB2B,EAAMC,EAAS,EACNlB,EAAgBV,IACzB0B,EAAOE,EAAS,EAEpB,CAEA,OAAID,EAAM,EACDA,EAAM,EAEN,CAEX,GACC,CACDnF,IAAK,qBACLoB,MAAO,SAA4B+B,EAAOK,GAGxC,IAFA,IAAI8B,EAAW,EAERnC,EAAQP,KAAKG,YAAcH,KAAK0B,yBAAyBnB,GAAOK,OAASA,GAC9EL,GAASmC,EACTA,GAAY,EAGd,OAAO1C,KAAK2C,cAAcd,KAAKE,IAAIxB,EAAOP,KAAKG,WAAa,GAAI0B,KAAKY,MAAMlC,EAAQ,GAAIK,EACzF,GAQC,CACDxD,IAAK,mBACLoB,MAAO,SAA0BoC,GAC/B,GAAIG,MAAMH,GACR,MAAMJ,MAAM,kBAAkBC,OAAOG,EAAQ,eAK/CA,EAASiB,KAAKC,IAAI,EAAGlB,GACrB,IAAIF,EAAkCV,KAAKW,uCACvCiC,EAAoBf,KAAKC,IAAI,EAAG9B,KAAKM,oBAEzC,OAAII,EAAgCE,QAAUA,EAErCZ,KAAK2C,cAAcC,EAAmB,EAAGhC,GAKzCZ,KAAK6C,mBAAmBD,EAAmBhC,EAEtD,KAGKf,CACT,CAjSA,GCEWiD,EAAoB,WAC7B,MARyB,qBAAXC,QAILA,OAAOC,OAPY,SADC,IAmB/B,ECTIC,EAEJ,WACE,SAASA,EAAkCvE,GACzC,IAAIwE,EAAqBxE,EAAKyE,cAC1BA,OAAuC,IAAvBD,EAAgCJ,IAAsBI,EACtEhB,EAAS9C,EAAyBV,EAAM,CAAC,kBAE7CrC,EAAgB2D,KAAMiD,IAEtBhD,EAAAA,EAAAA,GAAgBD,KAAM,mCAA+B,IAErDC,EAAAA,EAAAA,GAAgBD,KAAM,sBAAkB,GAGxCA,KAAKoD,4BAA8B,IAAIvD,EAA2BqC,GAClElC,KAAKqD,eAAiBF,CACxB,CAyKA,OAvKA9F,EAAa4F,EAAmC,CAAC,CAC/C7F,IAAK,qBACLoB,MAAO,WACL,OAAOwB,KAAKoD,4BAA4BnB,eAAiBjC,KAAKqD,cAChE,GACC,CACDjG,IAAK,YACLoB,MAAO,SAAmB0D,GACxBlC,KAAKoD,4BAA4BE,UAAUpB,EAC7C,GACC,CACD9E,IAAK,eACLoB,MAAO,WACL,OAAOwB,KAAKoD,4BAA4BG,cAC1C,GACC,CACDnG,IAAK,uBACLoB,MAAO,WACL,OAAOwB,KAAKoD,4BAA4BI,sBAC1C,GACC,CACDpG,IAAK,uBACLoB,MAAO,WACL,OAAOwB,KAAKoD,4BAA4BK,sBAC1C,GAMC,CACDrG,IAAK,sBACLoB,MAAO,SAA6B6B,GAClC,IAAIgB,EAAgBhB,EAAMgB,cACtBT,EAASP,EAAMO,OAEfoB,EAAYhC,KAAKoD,4BAA4BnB,eAE7CyB,EAAgB1D,KAAKiC,eAErB0B,EAAmB3D,KAAK4D,qBAAqB,CAC/CvC,cAAeA,EACfT,OAAQA,EACRoB,UAAW0B,IAGb,OAAO7B,KAAKgC,MAAMF,GAAoBD,EAAgB1B,GACxD,GACC,CACD5E,IAAK,2BACLoB,MAAO,SAAkC+B,GACvC,OAAOP,KAAKoD,4BAA4B1B,yBAAyBnB,EACnE,GACC,CACDnD,IAAK,uCACLoB,MAAO,WACL,OAAOwB,KAAKoD,4BAA4BzC,sCAC1C,GAGC,CACDvD,IAAK,eACLoB,MAAO,WACL,OAAOqD,KAAKE,IAAI/B,KAAKqD,eAAgBrD,KAAKoD,4BAA4BnB,eACxE,GAGC,CACD7E,IAAK,2BACLoB,MAAO,SAAkC0C,GACvC,IAAIC,EAAcD,EAAME,MACpBA,OAAwB,IAAhBD,EAAyB,OAASA,EAC1CE,EAAgBH,EAAMG,cACtBC,EAAgBJ,EAAMI,cACtBC,EAAcL,EAAMK,YACxBD,EAAgBtB,KAAK8D,oBAAoB,CACvCzC,cAAeA,EACfT,OAAQU,IAGV,IAAIV,EAASZ,KAAKoD,4BAA4BW,yBAAyB,CACrE3C,MAAOA,EACPC,cAAeA,EACfC,cAAeA,EACfC,YAAaA,IAGf,OAAOvB,KAAKgE,oBAAoB,CAC9B3C,cAAeA,EACfT,OAAQA,GAEZ,GAGC,CACDxD,IAAK,sBACLoB,MAAO,SAA6ByF,GAClC,IAAI5C,EAAgB4C,EAAM5C,cACtBT,EAASqD,EAAMrD,OAKnB,OAJAA,EAASZ,KAAK8D,oBAAoB,CAChCzC,cAAeA,EACfT,OAAQA,IAEHZ,KAAKoD,4BAA4Bc,oBAAoB,CAC1D7C,cAAeA,EACfT,OAAQA,GAEZ,GACC,CACDxD,IAAK,YACLoB,MAAO,SAAmB+B,GACxBP,KAAKoD,4BAA4Be,UAAU5D,EAC7C,GACC,CACDnD,IAAK,uBACLoB,MAAO,SAA8B4F,GACnC,IAAI/C,EAAgB+C,EAAM/C,cACtBT,EAASwD,EAAMxD,OACfoB,EAAYoC,EAAMpC,UACtB,OAAOA,GAAaX,EAAgB,EAAIT,GAAUoB,EAAYX,EAChE,GACC,CACDjE,IAAK,sBACLoB,MAAO,SAA6B6F,GAClC,IAAIhD,EAAgBgD,EAAMhD,cACtBT,EAASyD,EAAMzD,OAEfoB,EAAYhC,KAAKoD,4BAA4BnB,eAE7CyB,EAAgB1D,KAAKiC,eAEzB,GAAID,IAAc0B,EAChB,OAAO9C,EAEP,IAAI+C,EAAmB3D,KAAK4D,qBAAqB,CAC/CvC,cAAeA,EACfT,OAAQA,EACRoB,UAAWA,IAGb,OAAOH,KAAKgC,MAAMF,GAAoBD,EAAgBrC,GAE1D,GACC,CACDjE,IAAK,sBACLoB,MAAO,SAA6B8F,GAClC,IAAIjD,EAAgBiD,EAAMjD,cACtBT,EAAS0D,EAAM1D,OAEfoB,EAAYhC,KAAKoD,4BAA4BnB,eAE7CyB,EAAgB1D,KAAKiC,eAEzB,GAAID,IAAc0B,EAChB,OAAO9C,EAEP,IAAI+C,EAAmB3D,KAAK4D,qBAAqB,CAC/CvC,cAAeA,EACfT,OAAQA,EACRoB,UAAW0B,IAGb,OAAO7B,KAAKgC,MAAMF,GAAoB3B,EAAYX,GAEtD,KAGK4B,CACT,CAzLA,GCTe,SAASsB,IACtB,IAAIC,IAAiBpI,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,KAAmBA,UAAU,GAChFqI,EAAgB,CAAC,EACrB,OAAO,SAAU/F,GACf,IAAIgG,EAAWhG,EAAKgG,SAChBC,EAAUjG,EAAKiG,QACfnF,EAAOvC,OAAOuC,KAAKmF,GACnBC,GAAkBJ,GAAkBhF,EAAKqF,OAAM,SAAUzH,GAC3D,IAAIoB,EAAQmG,EAAQvH,GACpB,OAAOnB,MAAMC,QAAQsC,GAASA,EAAMrC,OAAS,EAAIqC,GAAS,CAC5D,IACIsG,EAAetF,EAAKrD,SAAWc,OAAOuC,KAAKiF,GAAetI,QAAUqD,EAAKuF,MAAK,SAAU3H,GAC1F,IAAI4H,EAAcP,EAAcrH,GAC5BoB,EAAQmG,EAAQvH,GACpB,OAAOnB,MAAMC,QAAQsC,GAASwG,EAAYC,KAAK,OAASzG,EAAMyG,KAAK,KAAOD,IAAgBxG,CAC5F,IACAiG,EAAgBE,EAEZC,GAAkBE,GACpBJ,EAASC,EAEb,CACF,CCnBe,SAASO,EAAwBxG,GAC9C,IAAIE,EAAWF,EAAKE,SAChBuG,EAA6BzG,EAAKyG,2BAClCC,EAAqB1G,EAAK0G,mBAC1BC,EAAmB3G,EAAK2G,iBACxBC,EAA4B5G,EAAK4G,0BACjCC,EAAwB7G,EAAK6G,sBAC7BC,EAAe9G,EAAK8G,aACpBC,EAAe/G,EAAK+G,aACpBC,EAAoBhH,EAAKgH,kBACzBxG,EAAgBR,EAAKQ,cACrB2B,EAAOnC,EAAKmC,KACZ8E,EAA4BjH,EAAKiH,0BACjCC,EAA4BlH,EAAKkH,0BACjCjH,EAAYwG,EAA2B5B,eACvCsC,EAAmB3G,GAAiB,GAAKA,EAAgBP,EAIzDkH,IAHiBhF,IAAS2E,GAAgBG,IAA8BN,GAAwC,kBAAbzG,GAAyBA,IAAayG,GAGlGK,IAAsBJ,GAA6BpG,IAAkBqG,GAC9GK,EAA0B1G,IAEhB2G,GAAoBlH,EAAY,IAAMkC,EAAO2E,GAAgB7G,EAAYyG,IAK/EK,EAAeN,EAA2BlD,eAAiBpB,GAC7D+E,EAA0BjH,EAAY,EAG5C,CCrCA,UAAoC,qBAAXoE,SAA0BA,OAAO+C,WAAY/C,OAAO+C,SAASC,eCCtF,IAAIlF,ECAAmF,EDCW,SAASC,EAAcC,GACpC,KAAKrF,GAAiB,IAATA,GAAcqF,IACrBC,EAAW,CACb,IAAIC,EAAYN,SAASC,cAAc,OACvCK,EAAUC,MAAMC,SAAW,WAC3BF,EAAUC,MAAME,IAAM,UACtBH,EAAUC,MAAMG,MAAQ,OACxBJ,EAAUC,MAAMI,OAAS,OACzBL,EAAUC,MAAMK,SAAW,SAC3BZ,SAASa,KAAKC,YAAYR,GAC1BvF,EAAOuF,EAAUS,YAAcT,EAAUU,YACzChB,SAASa,KAAKI,YAAYX,EAC5B,CAGF,OAAOvF,CACT,CCLA,ICJImG,EAAQC,EDIRC,GATFlB,EADoB,qBAAXjD,OACHA,OACmB,qBAATrF,KACVA,KAEA,CAAC,GAKSyJ,uBAAyBnB,EAAIoB,6BAA+BpB,EAAIqB,0BAA4BrB,EAAIsB,wBAA0BtB,EAAIuB,yBAA2B,SAAU7C,GACnL,OAAOsB,EAAIwB,WAAW9C,EAAU,IAAO,GACzC,EAEI+C,EAASzB,EAAI0B,sBAAwB1B,EAAI2B,4BAA8B3B,EAAI4B,yBAA2B5B,EAAI6B,uBAAyB7B,EAAI8B,wBAA0B,SAAUC,GAC7K/B,EAAIgC,aAAaD,EACnB,EAEWE,EAAMf,EACNgB,EAAMT,EElBNU,EAAyB,SAAgCC,GAClE,OAAOF,EAAIE,EAAML,GACnB,EAQWM,EAA0B,SAAiC3D,EAAU4D,GAC9E,IAAInG,EAEJoG,QAAQC,UAAUC,MAAK,WACrBtG,EAAQuG,KAAKC,KACf,IAEA,IAQIP,EAAQ,CACVL,GAAIE,GATQ,SAASW,IACjBF,KAAKC,MAAQxG,GAASmG,EACxB5D,EAAS/G,OAETyK,EAAML,GAAKE,EAAIW,EAEnB,KAKA,OAAOR,CACT,EDtBA,SAASS,EAAQC,EAAQC,GAAkB,IAAIvJ,EAAOvC,OAAOuC,KAAKsJ,GAAS,GAAI7L,OAAOyC,sBAAuB,CAAE,IAAIsJ,EAAU/L,OAAOyC,sBAAsBoJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOjM,OAAOkM,yBAAyBL,EAAQI,GAAKpM,UAAY,KAAI0C,EAAK4J,KAAKC,MAAM7J,EAAMwJ,EAAU,CAAE,OAAOxJ,CAAM,CAEpV,SAAS8J,EAAc5M,GAAU,IAAK,IAAIE,EAAI,EAAGA,EAAIR,UAAUD,OAAQS,IAAK,CAAE,IAAIyC,EAAyB,MAAhBjD,UAAUQ,GAAaR,UAAUQ,GAAK,CAAC,EAAOA,EAAI,EAAKiM,EAAQxJ,GAAQ,GAAMkK,SAAQ,SAAUnM,IAAO6C,EAAAA,EAAAA,GAAgBvD,EAAQU,EAAKiC,EAAOjC,GAAO,IAAeH,OAAOuM,0BAA6BvM,OAAOwM,iBAAiB/M,EAAQO,OAAOuM,0BAA0BnK,IAAmBwJ,EAAQxJ,GAAQkK,SAAQ,SAAUnM,GAAOH,OAAOC,eAAeR,EAAQU,EAAKH,OAAOkM,yBAAyB9J,EAAQjC,GAAO,GAAM,CAAE,OAAOV,CAAQ,CAkB9f,IAMHgN,EACQ,WADRA,EAES,YAWTC,GAAQ1C,EAAQD,EAEpB,SAAU4C,GAIR,SAASD,EAAKhN,GACZ,IAAIkN,EAEJxN,EAAgB2D,KAAM2J,GAEtBE,EAAQpM,EAA2BuC,KAAMnC,EAAgB8L,GAAMhM,KAAKqC,KAAMrD,KAE1EsD,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,0BAA2BtF,MAE1EtE,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,oBAAqBtF,GAAuB,KAE3FtE,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,iCAAkC,OAEjF5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,8BAA+B,OAE9E5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,4BAA4B,IAE3E5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,2BAA2B,IAE1E5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,2BAA4B,IAE3E5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,yBAA0B,IAEzE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,6BAA6B,IAE5E5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,2BAAuB,IAEtE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,0BAAsB,IAErE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,yBAAqB,IAEpE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,wBAAoB,IAEnE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,sBAAkB,IAEjE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,qBAAiB,IAEhE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,4BAA6B,IAE5E5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,2BAA4B,IAE3E5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,yBAA0B,IAEzE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,wBAAyB,IAExE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,yBAAqB,IAEpE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,0BAAsB,IAErE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,sCAAkC,IAEjF5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,cAAe,CAAC,IAE/D5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,aAAc,CAAC,IAE9D5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,gCAAgC,WAC7EA,EAAME,+BAAiC,KAEvCF,EAAMG,SAAS,CACbC,aAAa,EACbC,uBAAuB,GAE3B,KAEAjK,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,+BAA+B,WAC5E,IAAIM,EAAoBN,EAAMlN,MAAMwN,kBAEpCN,EAAMO,wBAAwB,CAC5B1F,SAAUyF,EACVxF,QAAS,CACP0F,yBAA0BR,EAAMS,kBAChCC,wBAAyBV,EAAMW,iBAC/BC,iBAAkBZ,EAAMa,0BACxBC,gBAAiBd,EAAMe,yBACvBC,sBAAuBhB,EAAMiB,eAC7BC,qBAAsBlB,EAAMmB,cAC5BC,cAAepB,EAAMqB,uBACrBC,aAActB,EAAMuB,wBAG1B,KAEAnL,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,6BAA6B,SAAUwB,GACpFxB,EAAMyB,oBAAsBD,CAC9B,KAEApL,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,aAAa,SAAU0B,GAIhEA,EAAM7O,SAAWmN,EAAMyB,qBACzBzB,EAAM2B,kBAAkBD,EAAM7O,OAElC,IAEA,IAAI+O,EAA+B,IAAIxI,EAAkC,CACvEtE,UAAWhC,EAAM+O,YACjB5L,eAAgB,SAAwBoC,GACtC,OAAOyH,EAAKgC,gBAAgBhP,EAAMiP,YAA3BjC,CAAwCzH,EACjD,EACAnC,kBAAmB4J,EAAKkC,wBAAwBlP,KAE9CmP,EAA4B,IAAI7I,EAAkC,CACpEtE,UAAWhC,EAAMoP,SACjBjM,eAAgB,SAAwBoC,GACtC,OAAOyH,EAAKgC,gBAAgBhP,EAAMqP,UAA3BrC,CAAsCzH,EAC/C,EACAnC,kBAAmB4J,EAAKsC,qBAAqBtP,KAiC/C,OA/BAkN,EAAMqC,MAAQ,CACZC,cAAe,CACbV,6BAA8BA,EAC9BK,0BAA2BA,EAC3BM,gBAAiBzP,EAAMiP,YACvBS,cAAe1P,EAAMqP,UACrBM,gBAAiB3P,EAAM+O,YACvBa,aAAc5P,EAAMoP,SACpBS,iBAAuC,IAAtB7P,EAAMsN,YACvBwC,mBAAoB9P,EAAM+P,eAC1BC,gBAAiBhQ,EAAMiQ,YACvB3G,cAAe,EACf4G,uBAAuB,GAEzB5C,aAAa,EACb6C,0BEnLgC,EFoLhCC,wBEpLgC,EFqLhCC,WAAY,EACZC,UAAW,EACXC,2BAA4B,KAC5BhD,uBAAuB,GAGrBvN,EAAMiQ,YAAc,IACtB/C,EAAMsD,kBAAoBtD,EAAMuD,wBAAwBzQ,EAAOkN,EAAMqC,QAGnEvP,EAAM+P,eAAiB,IACzB7C,EAAMwD,mBAAqBxD,EAAMyD,yBAAyB3Q,EAAOkN,EAAMqC,QAGlErC,CACT,CA2iCA,OA3rCA1L,EAAUwL,EAAMC,GAsJhBvM,EAAasM,EAAM,CAAC,CAClBvM,IAAK,mBACLoB,MAAO,WACL,IAAIE,EAAOtC,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC5EmR,EAAiB7O,EAAK8O,UACtBA,OAA+B,IAAnBD,EAA4BvN,KAAKrD,MAAM+I,kBAAoB6H,EACvEE,EAAmB/O,EAAKgP,YACxBA,OAAmC,IAArBD,EAA8BzN,KAAKrD,MAAM+P,eAAiBe,EACxEE,EAAgBjP,EAAKkP,SACrBA,OAA6B,IAAlBD,EAA2B3N,KAAKrD,MAAMiQ,YAAce,EAE/DE,EAAcvE,EAAc,CAAC,EAAGtJ,KAAKrD,MAAO,CAC9C+I,kBAAmB8H,EACnBd,eAAgBgB,EAChBd,YAAagB,IAGf,MAAO,CACLZ,WAAYhN,KAAKsN,yBAAyBO,GAC1CZ,UAAWjN,KAAKoN,wBAAwBS,GAE5C,GAKC,CACDzQ,IAAK,qBACLoB,MAAO,WACL,OAAOwB,KAAKkM,MAAMC,cAAcL,0BAA0B7J,cAC5D,GAKC,CACD7E,IAAK,uBACLoB,MAAO,WACL,OAAOwB,KAAKkM,MAAMC,cAAcV,6BAA6BxJ,cAC/D,GAMC,CACD7E,IAAK,oBACLoB,MAAO,SAA2B6B,GAChC,IAAIyN,EAAmBzN,EAAM2M,WACzBe,OAAuC,IAArBD,EAA8B,EAAIA,EACpDE,EAAkB3N,EAAM4M,UACxBgB,OAAqC,IAApBD,EAA6B,EAAIA,EAItD,KAAIC,EAAiB,GAArB,CAKAjO,KAAKkO,uBAEL,IAAIC,EAAcnO,KAAKrD,MACnByR,EAAaD,EAAYC,WACzBC,EAAYF,EAAYE,UACxB5H,EAAS0H,EAAY1H,OACrBD,EAAQ2H,EAAY3H,MACpB2F,EAAgBnM,KAAKkM,MAAMC,cAK3BlG,EAAgBkG,EAAclG,cAC9BqI,EAAkBnC,EAAcL,0BAA0B7J,eAC1DsM,EAAoBpC,EAAcV,6BAA6BxJ,eAC/D+K,EAAanL,KAAKE,IAAIF,KAAKC,IAAI,EAAGyM,EAAoB/H,EAAQP,GAAgB8H,GAC9Ed,EAAYpL,KAAKE,IAAIF,KAAKC,IAAI,EAAGwM,EAAkB7H,EAASR,GAAgBgI,GAKhF,GAAIjO,KAAKkM,MAAMc,aAAeA,GAAchN,KAAKkM,MAAMe,YAAcA,EAAW,CAG9E,IAEIuB,EAAW,CACbvE,aAAa,EACb6C,0BAJ8BE,IAAehN,KAAKkM,MAAMc,WAAaA,EAAahN,KAAKkM,MAAMc,WE9RjE,GADC,EF+RoIhN,KAAKkM,MAAMY,0BAK5KC,wBAJ4BE,IAAcjN,KAAKkM,MAAMe,UAAYA,EAAYjN,KAAKkM,MAAMe,UE/R5D,GADC,EFgS8HjN,KAAKkM,MAAMa,wBAKtKG,2BAA4BxD,GAGzB0E,IACHI,EAASvB,UAAYA,GAGlBoB,IACHG,EAASxB,WAAaA,GAGxBwB,EAAStE,uBAAwB,EACjClK,KAAKgK,SAASwE,EAChB,CAEAxO,KAAKyO,wBAAwB,CAC3BzB,WAAYA,EACZC,UAAWA,EACXsB,kBAAmBA,EACnBD,gBAAiBA,GApDnB,CAsDF,GASC,CACDlR,IAAK,gCACLoB,MAAO,SAAuC0C,GAC5C,IAAIwM,EAAcxM,EAAMwM,YACpBE,EAAW1M,EAAM0M,SACrB5N,KAAK0O,+BAAgF,kBAAxC1O,KAAK0O,+BAA8C7M,KAAKE,IAAI/B,KAAK0O,+BAAgChB,GAAeA,EAC7J1N,KAAK2O,4BAA0E,kBAArC3O,KAAK2O,4BAA2C9M,KAAKE,IAAI/B,KAAK2O,4BAA6Bf,GAAYA,CACnJ,GAOC,CACDxQ,IAAK,kBACLoB,MAAO,WACL,IAAIoQ,EAAe5O,KAAKrD,MACpB+O,EAAckD,EAAalD,YAC3BK,EAAW6C,EAAa7C,SACxBI,EAAgBnM,KAAKkM,MAAMC,cAC/BA,EAAcV,6BAA6B/J,yBAAyBgK,EAAc,GAClFS,EAAcL,0BAA0BpK,yBAAyBqK,EAAW,EAC9E,GAOC,CACD3O,IAAK,oBACLoB,MAAO,WACL,IAAIyF,EAAQ7H,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC7EyS,EAAoB5K,EAAMyJ,YAC1BA,OAAoC,IAAtBmB,EAA+B,EAAIA,EACjDC,EAAiB7K,EAAM2J,SACvBA,OAA8B,IAAnBkB,EAA4B,EAAIA,EAE3CC,EAAe/O,KAAKrD,MACpB+P,EAAiBqC,EAAarC,eAC9BE,EAAcmC,EAAanC,YAC3BT,EAAgBnM,KAAKkM,MAAMC,cAC/BA,EAAcV,6BAA6BtH,UAAUuJ,GACrDvB,EAAcL,0BAA0B3H,UAAUyJ,GAIlD5N,KAAKgP,yBAA2BtC,GAAkB,IElXlB,IFkXwB1M,KAAKkM,MAAMY,0BAAyDY,GAAehB,EAAiBgB,GAAehB,GAC3K1M,KAAKiP,wBAA0BrC,GAAe,IEnXd,IFmXoB5M,KAAKkM,MAAMa,wBAAuDa,GAAYhB,EAAcgB,GAAYhB,GAG5J5M,KAAKkP,YAAc,CAAC,EACpBlP,KAAKmP,WAAa,CAAC,EACnBnP,KAAKoP,aACP,GAKC,CACDhS,IAAK,eACLoB,MAAO,SAAsB4F,GAC3B,IAAIsJ,EAActJ,EAAMsJ,YACpBE,EAAWxJ,EAAMwJ,SACjBlC,EAAc1L,KAAKrD,MAAM+O,YACzB/O,EAAQqD,KAAKrD,MAGb+O,EAAc,QAAqB5K,IAAhB4M,GACrB1N,KAAKqP,mCAAmC/F,EAAc,CAAC,EAAG3M,EAAO,CAC/D+P,eAAgBgB,UAIH5M,IAAb8M,GACF5N,KAAKsP,+BAA+BhG,EAAc,CAAC,EAAG3M,EAAO,CAC3DiQ,YAAagB,IAGnB,GACC,CACDxQ,IAAK,oBACLoB,MAAO,WACL,IAAI+Q,EAAevP,KAAKrD,MACpB6S,EAAmBD,EAAaC,iBAChC/I,EAAS8I,EAAa9I,OACtBuG,EAAauC,EAAavC,WAC1BN,EAAiB6C,EAAa7C,eAC9BO,EAAYsC,EAAatC,UACzBL,EAAc2C,EAAa3C,YAC3BpG,EAAQ+I,EAAa/I,MACrB2F,EAAgBnM,KAAKkM,MAAMC,cAsB/B,GApBAnM,KAAKmN,kBAAoB,EACzBnN,KAAKqN,mBAAqB,EAG1BrN,KAAKyP,6BAIAtD,EAAcU,uBACjB7M,KAAKgK,UAAS,SAAU0F,GACtB,IAAIC,EAAcrG,EAAc,CAAC,EAAGoG,EAAW,CAC7CxF,uBAAuB,IAKzB,OAFAyF,EAAYxD,cAAclG,cAAgBuJ,IAC1CG,EAAYxD,cAAcU,uBAAwB,EAC3C8C,CACT,IAGwB,kBAAf3C,GAA2BA,GAAc,GAA0B,kBAAdC,GAA0BA,GAAa,EAAG,CACxG,IAAI0C,EAAchG,EAAKiG,gCAAgC,CACrDF,UAAW1P,KAAKkM,MAChBc,WAAYA,EACZC,UAAWA,IAGT0C,IACFA,EAAYzF,uBAAwB,EACpClK,KAAKgK,SAAS2F,GAElB,CAGI3P,KAAKsL,sBAGHtL,KAAKsL,oBAAoB0B,aAAehN,KAAKkM,MAAMc,aACrDhN,KAAKsL,oBAAoB0B,WAAahN,KAAKkM,MAAMc,YAG/ChN,KAAKsL,oBAAoB2B,YAAcjN,KAAKkM,MAAMe,YACpDjN,KAAKsL,oBAAoB2B,UAAYjN,KAAKkM,MAAMe,YAMpD,IAAI4C,EAAuBpJ,EAAS,GAAKD,EAAQ,EAE7CkG,GAAkB,GAAKmD,GACzB7P,KAAKqP,qCAGHzC,GAAe,GAAKiD,GACtB7P,KAAKsP,iCAIPtP,KAAK8P,8BAGL9P,KAAKyO,wBAAwB,CAC3BzB,WAAYA,GAAc,EAC1BC,UAAWA,GAAa,EACxBsB,kBAAmBpC,EAAcV,6BAA6BxJ,eAC9DqM,gBAAiBnC,EAAcL,0BAA0B7J,iBAG3DjC,KAAK+P,qCACP,GAOC,CACD3S,IAAK,qBACLoB,MAAO,SAA4BwR,EAAWN,GAC5C,IAAIO,EAASjQ,KAETkQ,EAAelQ,KAAKrD,MACpByR,EAAa8B,EAAa9B,WAC1BC,EAAY6B,EAAa7B,UACzB3C,EAAcwE,EAAaxE,YAC3BjF,EAASyJ,EAAazJ,OACtBsF,EAAWmE,EAAanE,SACxBrG,EAAoBwK,EAAaxK,kBACjCgH,EAAiBwD,EAAaxD,eAC9BE,EAAcsD,EAAatD,YAC3BpG,EAAQ0J,EAAa1J,MACrB2J,EAAcnQ,KAAKkM,MACnBc,EAAamD,EAAYnD,WACzBE,EAA6BiD,EAAYjD,2BACzCD,EAAYkD,EAAYlD,UACxBd,EAAgBgE,EAAYhE,cAGhCnM,KAAKyP,6BAKL,IAAIW,EAAwC1E,EAAc,GAA+B,IAA1BsE,EAAUtE,aAAqBK,EAAW,GAA4B,IAAvBiE,EAAUjE,SAMpHmB,IAA+BxD,KAG5B2E,GAAarB,GAAc,IAAMA,IAAehN,KAAKsL,oBAAoB0B,YAAcoD,KAC1FpQ,KAAKsL,oBAAoB0B,WAAaA,IAGnCoB,GAAcnB,GAAa,IAAMA,IAAcjN,KAAKsL,oBAAoB2B,WAAamD,KACxFpQ,KAAKsL,oBAAoB2B,UAAYA,IAOzC,IAAItH,GAAiD,IAApBqK,EAAUxJ,OAAoC,IAArBwJ,EAAUvJ,SAAiBA,EAAS,GAAKD,EAAQ,EAqD3G,GAlDIxG,KAAKgP,0BACPhP,KAAKgP,0BAA2B,EAEhChP,KAAKqP,mCAAmCrP,KAAKrD,QAE7CuI,EAAwB,CACtBC,2BAA4BgH,EAAcV,6BAC1CrG,mBAAoB4K,EAAUtE,YAC9BrG,iBAAkB2K,EAAUpE,YAC5BtG,0BAA2B0K,EAAUtK,kBACrCH,sBAAuByK,EAAUtD,eACjClH,aAAcwK,EAAUxJ,MACxBf,aAAcuH,EACdtH,kBAAmBA,EACnBxG,cAAewN,EACf7L,KAAM2F,EACNb,0BAA2BA,EAC3BC,0BAA2B,WACzB,OAAOqK,EAAOZ,mCAAmCY,EAAOtT,MAC1D,IAIAqD,KAAKiP,yBACPjP,KAAKiP,yBAA0B,EAE/BjP,KAAKsP,+BAA+BtP,KAAKrD,QAEzCuI,EAAwB,CACtBC,2BAA4BgH,EAAcL,0BAC1C1G,mBAAoB4K,EAAUjE,SAC9B1G,iBAAkB2K,EAAUhE,UAC5B1G,0BAA2B0K,EAAUtK,kBACrCH,sBAAuByK,EAAUpD,YACjCpH,aAAcwK,EAAUvJ,OACxBhB,aAAcwH,EACdvH,kBAAmBA,EACnBxG,cAAe0N,EACf/L,KAAM4F,EACNd,0BAA2BA,EAC3BC,0BAA2B,WACzB,OAAOqK,EAAOX,+BAA+BW,EAAOtT,MACtD,IAKJqD,KAAK8P,8BAGD9C,IAAe0C,EAAU1C,YAAcC,IAAcyC,EAAUzC,UAAW,CAC5E,IAAIqB,EAAkBnC,EAAcL,0BAA0B7J,eAC1DsM,EAAoBpC,EAAcV,6BAA6BxJ,eAEnEjC,KAAKyO,wBAAwB,CAC3BzB,WAAYA,EACZC,UAAWA,EACXsB,kBAAmBA,EACnBD,gBAAiBA,GAErB,CAEAtO,KAAK+P,qCACP,GACC,CACD3S,IAAK,uBACLoB,MAAO,WACDwB,KAAK+J,gCACP5B,EAAuBnI,KAAK+J,+BAEhC,GAQC,CACD3M,IAAK,SACLoB,MAAO,WACL,IAAI6R,EAAerQ,KAAKrD,MACpB2T,EAAqBD,EAAaC,mBAClClC,EAAaiC,EAAajC,WAC1BC,EAAYgC,EAAahC,UACzBkC,EAAYF,EAAaE,UACzBC,EAAiBH,EAAaG,eAC9BC,EAAgBJ,EAAaI,cAC7BC,EAAiBL,EAAaK,eAC9BjK,EAAS4J,EAAa5J,OACtBsB,EAAKsI,EAAatI,GAClB4I,EAAoBN,EAAaM,kBACjCC,EAAOP,EAAaO,KACpBvK,EAAQgK,EAAahK,MACrBwK,EAAWR,EAAaQ,SACxBrK,EAAQ6J,EAAa7J,MACrBsK,EAAe9Q,KAAKkM,MACpBC,EAAgB2E,EAAa3E,cAC7BjC,EAAwB4G,EAAa5G,sBAErCD,EAAcjK,KAAK+Q,eAEnBC,EAAY,CACdC,UAAW,aACXC,UAAW,MACXzK,OAAQ2H,EAAa,OAAS3H,EAC9BH,SAAU,WACVE,MAAO6H,EAAY,OAAS7H,EAC5B2K,wBAAyB,QACzBC,WAAY,aAGVlH,IACFlK,KAAKkP,YAAc,CAAC,GAKjBlP,KAAKkM,MAAMjC,aACdjK,KAAKqR,mBAIPrR,KAAKsR,2BAA2BtR,KAAKrD,MAAOqD,KAAKkM,OAEjD,IAAIqC,EAAoBpC,EAAcV,6BAA6BxJ,eAC/DqM,EAAkBnC,EAAcL,0BAA0B7J,eAI1DsP,EAAwBjD,EAAkB7H,EAAS0F,EAAclG,cAAgB,EACjFuL,EAA0BjD,EAAoB/H,EAAQ2F,EAAclG,cAAgB,EAEpFuL,IAA4BxR,KAAKyR,0BAA4BF,IAA0BvR,KAAK0R,yBAC9F1R,KAAKyR,yBAA2BD,EAChCxR,KAAK0R,uBAAyBH,EAC9BvR,KAAK2R,2BAA4B,GAQnCX,EAAUY,UAAYrD,EAAoBgD,GAAyB/K,EAAQ,SAAW,OACtFwK,EAAUa,UAAYvD,EAAkBkD,GAA2B/K,EAAS,SAAW,OACvF,IAAIqL,EAAoB9R,KAAK+R,mBACzBC,EAAqD,IAA7BF,EAAkB3V,QAAgBsK,EAAS,GAAKD,EAAQ,EACpF,OAAOyL,EAAAA,cAAoB,OAAOC,EAAAA,EAAAA,GAAS,CACzC7G,IAAKrL,KAAKmS,2BACT3B,EAAgB,CACjB,aAAcxQ,KAAKrD,MAAM,cACzB,gBAAiBqD,KAAKrD,MAAM,iBAC5B4T,WAAW6B,EAAAA,EAAAA,GAAK,yBAA0B7B,GAC1CxI,GAAIA,EACJsK,SAAUrS,KAAKsS,UACf1B,KAAMA,EACNvK,MAAOiD,EAAc,CAAC,EAAG0H,EAAW,CAAC,EAAG3K,GACxCwK,SAAUA,IACRiB,EAAkB3V,OAAS,GAAK8V,EAAAA,cAAoB,MAAO,CAC7D1B,UAAW,+CACXK,KAAMH,EACNpK,MAAOiD,EAAc,CACnB9C,MAAO8J,EAAqB,OAAS/B,EACrC9H,OAAQ6H,EACRiE,SAAUhE,EACViE,UAAWlE,EACX5H,SAAU,SACV+L,cAAexI,EAAc,OAAS,GACtC3D,SAAU,YACToK,IACFoB,GAAoBE,GAAyBrB,IAClD,GAGC,CACDvT,IAAK,6BACLoB,MAAO,WACL,IAAI7B,EAAQP,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKrD,MACjFuP,EAAQ9P,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKkM,MACjFwG,EAAe/V,EAAM+V,aACrBC,EAAoBhW,EAAMgW,kBAC1BjH,EAAc/O,EAAM+O,YACpBkH,EAA2BjW,EAAMiW,yBACjCnM,EAAS9J,EAAM8J,OACfoM,EAAsBlW,EAAMkW,oBAC5BC,EAAwBnW,EAAMmW,sBAC9BC,EAAmBpW,EAAMoW,iBACzBhH,EAAWpP,EAAMoP,SACjBvF,EAAQ7J,EAAM6J,MACdwM,EAAoBrW,EAAMqW,kBAC1BlG,EAA4BZ,EAAMY,0BAClCC,EAA0Bb,EAAMa,wBAChCZ,EAAgBD,EAAMC,cACtBc,EAAYjN,KAAKmN,kBAAoB,EAAInN,KAAKmN,kBAAoBjB,EAAMe,UACxED,EAAahN,KAAKqN,mBAAqB,EAAIrN,KAAKqN,mBAAqBnB,EAAMc,WAE3E/C,EAAcjK,KAAK+Q,aAAapU,EAAOuP,GAI3C,GAFAlM,KAAK+R,mBAAqB,GAEtBtL,EAAS,GAAKD,EAAQ,EAAG,CAC3B,IAAIyM,EAAuB9G,EAAcV,6BAA6BvH,oBAAoB,CACxF7C,cAAemF,EACf5F,OAAQoM,IAENkG,EAAoB/G,EAAcL,0BAA0B5H,oBAAoB,CAClF7C,cAAeoF,EACf7F,OAAQqM,IAENkG,EAA6BhH,EAAcV,6BAA6B2H,oBAAoB,CAC9F/R,cAAemF,EACf5F,OAAQoM,IAENqG,EAA2BlH,EAAcL,0BAA0BsH,oBAAoB,CACzF/R,cAAeoF,EACf7F,OAAQqM,IAGVjN,KAAK0K,0BAA4BuI,EAAqB9Q,MACtDnC,KAAK4K,yBAA2BqI,EAAqB5Q,KACrDrC,KAAKkL,uBAAyBgI,EAAkB/Q,MAChDnC,KAAKoL,sBAAwB8H,EAAkB7Q,KAC/C,IAAIiR,EAAwBR,EAAsB,CAChD5B,UAAW,aACXvS,UAAW+M,EACX6H,mBAAoBV,EACpBW,gBAAiB1G,EACjB2G,WAAkD,kBAA/BR,EAAqB9Q,MAAqB8Q,EAAqB9Q,MAAQ,EAC1FuR,UAAgD,kBAA9BT,EAAqB5Q,KAAoB4Q,EAAqB5Q,MAAQ,IAEtFsR,EAAqBb,EAAsB,CAC7C5B,UAAW,WACXvS,UAAWoN,EACXwH,mBAAoBR,EACpBS,gBAAiBzG,EACjB0G,WAA+C,kBAA5BP,EAAkB/Q,MAAqB+Q,EAAkB/Q,MAAQ,EACpFuR,UAA6C,kBAA3BR,EAAkB7Q,KAAoB6Q,EAAkB7Q,MAAQ,IAGhFoI,EAAmB6I,EAAsBM,mBACzCjJ,EAAkB2I,EAAsBO,kBACxC5I,EAAgB0I,EAAmBC,mBACnCzI,EAAewI,EAAmBE,kBAEtC,GAAIjB,EAA0B,CAK5B,IAAKA,EAAyBkB,iBAC5B,IAAK,IAAIlG,EAAW3C,EAAe2C,GAAYzC,EAAcyC,IAC3D,IAAKgF,EAAyBmB,IAAInG,EAAU,GAAI,CAC9CnD,EAAmB,EACnBE,EAAkBe,EAAc,EAChC,KACF,CAQJ,IAAKkH,EAAyBoB,gBAC5B,IAAK,IAAItG,EAAcjD,EAAkBiD,GAAe/C,EAAiB+C,IACvE,IAAKkF,EAAyBmB,IAAI,EAAGrG,GAAc,CACjDzC,EAAgB,EAChBE,EAAeY,EAAW,EAC1B,KACF,CAGN,CAEA/L,KAAK+R,mBAAqBY,EAAkB,CAC1CsB,UAAWjU,KAAKmP,WAChBuD,aAAcA,EACdjH,6BAA8BU,EAAcV,6BAC5ChB,iBAAkBA,EAClBE,gBAAiBA,EACjBiI,yBAA0BA,EAC1BO,2BAA4BA,EAC5BlJ,YAAaA,EACb+I,kBAAmBA,EACnBkB,OAAQlU,KACR8L,0BAA2BK,EAAcL,0BACzCb,cAAeA,EACfE,aAAcA,EACd6B,WAAYA,EACZC,UAAWA,EACXkH,WAAYnU,KAAKkP,YACjBmE,yBAA0BA,EAC1BJ,qBAAsBA,EACtBC,kBAAmBA,IAGrBlT,KAAKsK,kBAAoBG,EACzBzK,KAAKwK,iBAAmBG,EACxB3K,KAAK8K,eAAiBG,EACtBjL,KAAKgL,cAAgBG,CACvB,CACF,GAOC,CACD/N,IAAK,uBACLoB,MAAO,WACL,IAAI4V,EAA6BpU,KAAKrD,MAAMyX,2BAExCpU,KAAK+J,gCACP5B,EAAuBnI,KAAK+J,gCAG9B/J,KAAK+J,+BAAiC1B,EAAwBrI,KAAKqU,6BAA8BD,EACnG,GACC,CACDhX,IAAK,6BAMLoB,MAAO,WACL,GAAmD,kBAAxCwB,KAAK0O,gCAA2F,kBAArC1O,KAAK2O,4BAA0C,CACnH,IAAIjB,EAAc1N,KAAK0O,+BACnBd,EAAW5N,KAAK2O,4BACpB3O,KAAK0O,+BAAiC,KACtC1O,KAAK2O,4BAA8B,KACnC3O,KAAKsU,kBAAkB,CACrB5G,YAAaA,EACbE,SAAUA,GAEd,CACF,GACC,CACDxQ,IAAK,0BACLoB,MAAO,SAAiC6F,GACtC,IAAIkQ,EAASvU,KAETgN,EAAa3I,EAAM2I,WACnBC,EAAY5I,EAAM4I,UAClBsB,EAAoBlK,EAAMkK,kBAC1BD,EAAkBjK,EAAMiK,gBAE5BtO,KAAKwU,kBAAkB,CACrB9P,SAAU,SAAkBJ,GAC1B,IAAI0I,EAAa1I,EAAM0I,WACnBC,EAAY3I,EAAM2I,UAClBwH,EAAeF,EAAO5X,MACtB8J,EAASgO,EAAahO,QAG1B4L,EAFeoC,EAAapC,UAEnB,CACPqC,aAAcjO,EACdK,YAHU2N,EAAajO,MAIvBmO,aAAcrG,EACdtB,WAAYA,EACZC,UAAWA,EACX2H,YAAarG,GAEjB,EACA5J,QAAS,CACPqI,WAAYA,EACZC,UAAWA,IAGjB,GACC,CACD7P,IAAK,eACLoB,MAAO,WACL,IAAI7B,EAAQP,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKrD,MACjFuP,EAAQ9P,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKkM,MAGrF,OAAOjP,OAAO4X,eAAelX,KAAKhB,EAAO,eAAiBmY,QAAQnY,EAAMsN,aAAe6K,QAAQ5I,EAAMjC,YACvG,GACC,CACD7M,IAAK,sCACLoB,MAAO,WACL,GAAIwB,KAAK2R,0BAA2B,CAClC,IAAIoD,EAA4B/U,KAAKrD,MAAMoY,0BAC3C/U,KAAK2R,2BAA4B,EACjCoD,EAA0B,CACxBC,WAAYhV,KAAKyR,yBAA2B,EAC5C5Q,KAAMb,KAAKkM,MAAMC,cAAclG,cAC/BgP,SAAUjV,KAAK0R,uBAAyB,GAE5C,CACF,GACC,CACDtU,IAAK,mBAMLoB,MAAO,SAA0B0W,GAC/B,IAAIlI,EAAakI,EAAMlI,WACnBC,EAAYiI,EAAMjI,UAElB0C,EAAchG,EAAKiG,gCAAgC,CACrDF,UAAW1P,KAAKkM,MAChBc,WAAYA,EACZC,UAAWA,IAGT0C,IACFA,EAAYzF,uBAAwB,EACpClK,KAAKgK,SAAS2F,GAElB,GACC,CACDvS,IAAK,2BACLoB,MAAO,WACL,IAAI7B,EAAQP,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKrD,MACjFuP,EAAQ9P,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKkM,MACrF,OAAOvC,EAAK2D,yBAAyB3Q,EAAOuP,EAC9C,GACC,CACD9O,IAAK,qCACLoB,MAAO,WACL,IAAI7B,EAAQP,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKrD,MACjFuP,EAAQ9P,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKkM,MAEjFyD,EAAchG,EAAKwL,2CAA2CxY,EAAOuP,GAErEyD,IACFA,EAAYzF,uBAAwB,EACpClK,KAAKgK,SAAS2F,GAElB,GACC,CACDvS,IAAK,0BACLoB,MAAO,WACL,IAAI7B,EAAQP,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKrD,MACjFuP,EAAQ9P,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKkM,MACrF,OAAOvC,EAAKyD,wBAAwBzQ,EAAOuP,EAC7C,GACC,CACD9O,IAAK,mBACLoB,MAAO,WACL,IAAI2V,EAAanU,KAAKkP,YAClB+E,EAAYjU,KAAKmP,WACjB6D,EAAoBhT,KAAKrD,MAAMqW,kBAOnChT,KAAKmP,WAAa,CAAC,EACnBnP,KAAKkP,YAAc,CAAC,EAEpB,IAAK,IAAItB,EAAW5N,KAAK8K,eAAgB8C,GAAY5N,KAAKgL,cAAe4C,IACvE,IAAK,IAAIF,EAAc1N,KAAKsK,kBAAmBoD,GAAe1N,KAAKwK,iBAAkBkD,IAAe,CAClG,IAAItQ,EAAM,GAAGqD,OAAOmN,EAAU,KAAKnN,OAAOiN,GAC1C1N,KAAKkP,YAAY9R,GAAO+W,EAAW/W,GAE/B4V,IACFhT,KAAKmP,WAAW/R,GAAO6W,EAAU7W,GAErC,CAEJ,GACC,CACDA,IAAK,iCACLoB,MAAO,WACL,IAAI7B,EAAQP,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKrD,MACjFuP,EAAQ9P,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKkM,MAEjFyD,EAAchG,EAAKyL,uCAAuCzY,EAAOuP,GAEjEyD,IACFA,EAAYzF,uBAAwB,EACpClK,KAAKgK,SAAS2F,GAElB,IACE,CAAC,CACHvS,IAAK,2BACLoB,MAAO,SAAkC6W,EAAW3F,GAClD,IAAIlB,EAAW,CAAC,EAEc,IAA1B6G,EAAU3J,aAA8C,IAAzBgE,EAAU1C,YAA2C,IAAvBqI,EAAUtJ,UAA0C,IAAxB2D,EAAUzC,WACrGuB,EAASxB,WAAa,EACtBwB,EAASvB,UAAY,IAEZoI,EAAUrI,aAAe0C,EAAU1C,YAAcqI,EAAU3I,eAAiB,GAAK2I,EAAUpI,YAAcyC,EAAUzC,WAAaoI,EAAUzI,YAAc,IACjK3P,OAAOqY,OAAO9G,EAAU7E,EAAKiG,gCAAgC,CAC3DF,UAAWA,EACX1C,WAAYqI,EAAUrI,WACtBC,UAAWoI,EAAUpI,aAIzB,IAgCIsI,EACAC,EAjCArJ,EAAgBuD,EAAUvD,cAkF9B,OAhFAqC,EAAStE,uBAAwB,EAE7BmL,EAAUzJ,cAAgBO,EAAcC,iBAAmBiJ,EAAUrJ,YAAcG,EAAcE,gBAEnGmC,EAAStE,uBAAwB,GAGnCiC,EAAcV,6BAA6BnI,UAAU,CACnD3E,UAAW0W,EAAU3J,YACrB3L,kBAAmB4J,EAAKkC,wBAAwBwJ,GAChDvV,eAAgB6J,EAAKgC,gBAAgB0J,EAAUzJ,eAEjDO,EAAcL,0BAA0BxI,UAAU,CAChD3E,UAAW0W,EAAUtJ,SACrBhM,kBAAmB4J,EAAKsC,qBAAqBoJ,GAC7CvV,eAAgB6J,EAAKgC,gBAAgB0J,EAAUrJ,aAGX,IAAlCG,EAAcG,iBAAwD,IAA/BH,EAAcI,eACvDJ,EAAcG,gBAAkB,EAChCH,EAAcI,aAAe,GAI3B8I,EAAUjH,aAAwC,IAA1BiH,EAAUpL,cAA2D,IAAlCkC,EAAcK,iBAC3EvP,OAAOqY,OAAO9G,EAAU,CACtBvE,aAAa,IAMjBxL,EAAkD,CAChDE,UAAWwN,EAAcG,gBACzB1N,SAAmD,kBAAlCuN,EAAcC,gBAA+BD,EAAcC,gBAAkB,KAC9FvN,wBAAyB,WACvB,OAAOsN,EAAcV,6BAA6BtH,UAAU,EAC9D,EACArF,6BAA8BuW,EAC9BtW,eAAgBsW,EAAU3J,YAC1B1M,aAA+C,kBAA1BqW,EAAUzJ,YAA2ByJ,EAAUzJ,YAAc,KAClF3M,kBAAmBoW,EAAU3I,eAC7BxN,cAAeiN,EAAcM,mBAC7BtN,mCAAoC,WAClCoW,EAAc5L,EAAKwL,2CAA2CE,EAAW3F,EAC3E,IAEFjR,EAAkD,CAChDE,UAAWwN,EAAcI,aACzB3N,SAAiD,kBAAhCuN,EAAcE,cAA6BF,EAAcE,cAAgB,KAC1FxN,wBAAyB,WACvB,OAAOsN,EAAcL,0BAA0B3H,UAAU,EAC3D,EACArF,6BAA8BuW,EAC9BtW,eAAgBsW,EAAUtJ,SAC1B/M,aAA6C,kBAAxBqW,EAAUrJ,UAAyBqJ,EAAUrJ,UAAY,KAC9E/M,kBAAmBoW,EAAUzI,YAC7B1N,cAAeiN,EAAcQ,gBAC7BxN,mCAAoC,WAClCqW,EAAc7L,EAAKyL,uCAAuCC,EAAW3F,EACvE,IAEFvD,EAAcG,gBAAkB+I,EAAU3J,YAC1CS,EAAcC,gBAAkBiJ,EAAUzJ,YAC1CO,EAAcK,iBAA4C,IAA1B6I,EAAUpL,YAC1CkC,EAAcI,aAAe8I,EAAUtJ,SACvCI,EAAcE,cAAgBgJ,EAAUrJ,UACxCG,EAAcM,mBAAqB4I,EAAU3I,eAC7CP,EAAcQ,gBAAkB0I,EAAUzI,YAE1CT,EAAclG,cAAgBoP,EAAU7F,wBAEJ1O,IAAhCqL,EAAclG,eAChBkG,EAAcU,uBAAwB,EACtCV,EAAclG,cAAgB,GAE9BkG,EAAcU,uBAAwB,EAGxC2B,EAASrC,cAAgBA,EAClB7C,EAAc,CAAC,EAAGkF,EAAU,CAAC,EAAG+G,EAAa,CAAC,EAAGC,EAC1D,GACC,CACDpY,IAAK,0BACLoB,MAAO,SAAiC7B,GACtC,MAAoC,kBAAtBA,EAAMiP,YAA2BjP,EAAMiP,YAAcjP,EAAM8Y,mBAC3E,GACC,CACDrY,IAAK,uBACLoB,MAAO,SAA8B7B,GACnC,MAAkC,kBAApBA,EAAMqP,UAAyBrP,EAAMqP,UAAYrP,EAAM+Y,gBACvE,GACC,CACDtY,IAAK,kCAMLoB,MAAO,SAAyCmX,GAC9C,IAAIjG,EAAYiG,EAAMjG,UAClB1C,EAAa2I,EAAM3I,WACnBC,EAAY0I,EAAM1I,UAClBuB,EAAW,CACbtB,2BAA4BxD,GAa9B,MAV0B,kBAAfsD,GAA2BA,GAAc,IAClDwB,EAAS1B,0BAA4BE,EAAa0C,EAAU1C,WEjoC9B,GADC,EFmoC/BwB,EAASxB,WAAaA,GAGC,kBAAdC,GAA0BA,GAAa,IAChDuB,EAASzB,wBAA0BE,EAAYyC,EAAUzC,UEtoC3B,GADC,EFwoC/BuB,EAASvB,UAAYA,GAGG,kBAAfD,GAA2BA,GAAc,GAAKA,IAAe0C,EAAU1C,YAAmC,kBAAdC,GAA0BA,GAAa,GAAKA,IAAcyC,EAAUzC,UAClKuB,EAGF,CAAC,CACV,GACC,CACDpR,IAAK,kBACLoB,MAAO,SAAyBA,GAC9B,MAAwB,oBAAVA,EAAuBA,EAAQ,WAC3C,OAAOA,CACT,CACF,GACC,CACDpB,IAAK,2BACLoB,MAAO,SAAkC6W,EAAW3F,GAClD,IAAIhE,EAAc2J,EAAU3J,YACxBjF,EAAS4O,EAAU5O,OACnBf,EAAoB2P,EAAU3P,kBAC9BgH,EAAiB2I,EAAU3I,eAC3BlG,EAAQ6O,EAAU7O,MAClBwG,EAAa0C,EAAU1C,WACvBb,EAAgBuD,EAAUvD,cAE9B,GAAIT,EAAc,EAAG,CACnB,IAAIkK,EAAclK,EAAc,EAC5BnK,EAAcmL,EAAiB,EAAIkJ,EAAc/T,KAAKE,IAAI6T,EAAalJ,GACvE4B,EAAkBnC,EAAcL,0BAA0B7J,eAC1D4T,EAAgB1J,EAAcU,uBAAyByB,EAAkB7H,EAAS0F,EAAclG,cAAgB,EACpH,OAAOkG,EAAcV,6BAA6B1H,yBAAyB,CACzE3C,MAAOsE,EACPrE,cAAemF,EAAQqP,EACvBvU,cAAe0L,EACfzL,YAAaA,GAEjB,CAEA,OAAO,CACT,GACC,CACDnE,IAAK,6CACLoB,MAAO,SAAoD6W,EAAW3F,GACpE,IAAI1C,EAAa0C,EAAU1C,WAEvB8I,EAAuBnM,EAAK2D,yBAAyB+H,EAAW3F,GAEpE,MAAoC,kBAAzBoG,GAAqCA,GAAwB,GAAK9I,IAAe8I,EACnFnM,EAAKiG,gCAAgC,CAC1CF,UAAWA,EACX1C,WAAY8I,EACZ7I,WAAY,IAIT,CAAC,CACV,GACC,CACD7P,IAAK,0BACLoB,MAAO,SAAiC6W,EAAW3F,GACjD,IAAIjJ,EAAS4O,EAAU5O,OACnBsF,EAAWsJ,EAAUtJ,SACrBrG,EAAoB2P,EAAU3P,kBAC9BkH,EAAcyI,EAAUzI,YACxBpG,EAAQ6O,EAAU7O,MAClByG,EAAYyC,EAAUzC,UACtBd,EAAgBuD,EAAUvD,cAE9B,GAAIJ,EAAW,EAAG,CAChB,IAAIgK,EAAWhK,EAAW,EACtBxK,EAAcqL,EAAc,EAAImJ,EAAWlU,KAAKE,IAAIgU,EAAUnJ,GAC9D2B,EAAoBpC,EAAcV,6BAA6BxJ,eAC/D4T,EAAgB1J,EAAcU,uBAAyB0B,EAAoB/H,EAAQ2F,EAAclG,cAAgB,EACrH,OAAOkG,EAAcL,0BAA0B/H,yBAAyB,CACtE3C,MAAOsE,EACPrE,cAAeoF,EAASoP,EACxBvU,cAAe2L,EACf1L,YAAaA,GAEjB,CAEA,OAAO,CACT,GACC,CACDnE,IAAK,yCACLoB,MAAO,SAAgD6W,EAAW3F,GAChE,IAAIzC,EAAYyC,EAAUzC,UAEtB+I,EAAsBrM,EAAKyD,wBAAwBiI,EAAW3F,GAElE,MAAmC,kBAAxBsG,GAAoCA,GAAuB,GAAK/I,IAAc+I,EAChFrM,EAAKiG,gCAAgC,CAC1CF,UAAWA,EACX1C,YAAa,EACbC,UAAW+I,IAIR,CAAC,CACV,KAGKrM,CACT,CA7rCA,CA6rCEsI,EAAAA,gBAAsBhS,EAAAA,EAAAA,GAAgB+G,EAAQ,YAAqD,MAkLjGC,IAEJhH,EAAAA,EAAAA,GAAgB0J,EAAM,eAAgB,CACpC,aAAc,OACd,iBAAiB,EACjB2G,oBAAoB,EACpBlC,YAAY,EACZC,WAAW,EACXsE,kBGv6Ca,SAAkCjU,GA2B/C,IA1BA,IAAIuV,EAAYvV,EAAKuV,UACjBvB,EAAehU,EAAKgU,aACpBjH,EAA+B/M,EAAK+M,6BACpChB,EAAmB/L,EAAK+L,iBACxBE,EAAkBjM,EAAKiM,gBACvBiI,EAA2BlU,EAAKkU,yBAChCO,EAA6BzU,EAAKyU,2BAClClJ,EAAcvL,EAAKuL,YACnB+I,EAAoBtU,EAAKsU,kBACzBkB,EAASxV,EAAKwV,OACdpI,EAA4BpN,EAAKoN,0BACjCb,EAAgBvM,EAAKuM,cACrBE,EAAezM,EAAKyM,aACpBgJ,EAAazV,EAAKyV,WAClBd,EAA2B3U,EAAK2U,yBAChCJ,EAAuBvU,EAAKuU,qBAC5BC,EAAoBxU,EAAKwU,kBACzB+C,EAAgB,GAMhBC,EAAqBzK,EAA6ByK,sBAAwBpK,EAA0BoK,qBACpGC,GAAiBlM,IAAgBiM,EAE5BtI,EAAW3C,EAAe2C,GAAYzC,EAAcyC,IAG3D,IAFA,IAAIwI,EAAWtK,EAA0BpK,yBAAyBkM,GAEzDF,EAAcjD,EAAkBiD,GAAe/C,EAAiB+C,IAAe,CACtF,IAAI2I,EAAc5K,EAA6B/J,yBAAyBgM,GACpE4I,EAAY5I,GAAeuF,EAAqB9Q,OAASuL,GAAeuF,EAAqB5Q,MAAQuL,GAAYsF,EAAkB/Q,OAASyL,GAAYsF,EAAkB7Q,KAC1KjF,EAAM,GAAGqD,OAAOmN,EAAU,KAAKnN,OAAOiN,GACtCrH,OAAQ,EAER8P,GAAiBhC,EAAW/W,GAC9BiJ,EAAQ8N,EAAW/W,GAIfwV,IAA6BA,EAAyBmB,IAAInG,EAAUF,GAItErH,EAAQ,CACNI,OAAQ,OACR8P,KAAM,EACNjQ,SAAU,WACVC,IAAK,EACLC,MAAO,SAGTH,EAAQ,CACNI,OAAQ2P,EAASvV,KACjB0V,KAAMF,EAAYzV,OAASuS,EAC3B7M,SAAU,WACVC,IAAK6P,EAASxV,OAASyS,EACvB7M,MAAO6P,EAAYxV,MAErBsT,EAAW/W,GAAOiJ,GAItB,IAAImQ,EAAqB,CACvB9I,YAAaA,EACbzD,YAAaA,EACbqM,UAAWA,EACXlZ,IAAKA,EACL8W,OAAQA,EACRtG,SAAUA,EACVvH,MAAOA,GAELoQ,OAAe,GAWdzD,IAAqB/I,GAAiBkJ,GAA+BE,EAQxEoD,EAAe/D,EAAa8D,IAPvBvC,EAAU7W,KACb6W,EAAU7W,GAAOsV,EAAa8D,IAGhCC,EAAexC,EAAU7W,IAMP,MAAhBqZ,IAAyC,IAAjBA,GAQ5BR,EAAc7M,KAAKqN,EACrB,CAGF,OAAOR,CACT,EH4zCExF,cAAe,WACfC,eAAgB,CAAC,EACjB+E,oBAAqB,IACrBC,iBAAkB,GAClBlG,iBAAkBvJ,EAClB0K,kBAv4Ce,WACf,OAAO,IACT,EAs4CE0B,SAAU,WAAqB,EAC/B0C,0BAA2B,WAAsC,EACjE5K,kBAAmB,WAA8B,EACjD0I,oBAAqB,EACrBC,sBE76Ca,SAAsCpU,GACnD,IAAIC,EAAYD,EAAKC,UACjB4U,EAAqB7U,EAAK6U,mBAC1BC,EAAkB9U,EAAK8U,gBACvBC,EAAa/U,EAAK+U,WAClBC,EAAYhV,EAAKgV,UAErB,OAfoC,IAehCF,EACK,CACLI,mBAAoB/R,KAAKC,IAAI,EAAG2R,GAChCI,kBAAmBhS,KAAKE,IAAIpD,EAAY,EAAG+U,EAAYH,IAGlD,CACLK,mBAAoB/R,KAAKC,IAAI,EAAG2R,EAAaF,GAC7CM,kBAAmBhS,KAAKE,IAAIpD,EAAY,EAAG+U,GAGjD,EF45CEX,iBAAkB,GAClBnC,KAAM,OACNwD,2BA15CiD,IA25CjD1O,kBAAmB,OACnBgH,gBAAiB,EACjBE,aAAc,EACdvG,MAAO,CAAC,EACRwK,SAAU,EACVmC,mBAAmB,KAGrB0D,EAAAA,EAAAA,UAAS/M,GACT,UI17Ce,SAASgN,EAA6BjY,GACnD,IAAIC,EAAYD,EAAKC,UACjB4U,EAAqB7U,EAAK6U,mBAC1BC,EAAkB9U,EAAK8U,gBACvBC,EAAa/U,EAAK+U,WAClBC,EAAYhV,EAAKgV,UAMrB,OAFAH,EAAqB1R,KAAKC,IAAI,EAAGyR,GAjBG,IAmBhCC,EACK,CACLI,mBAAoB/R,KAAKC,IAAI,EAAG2R,EAAa,GAC7CI,kBAAmBhS,KAAKE,IAAIpD,EAAY,EAAG+U,EAAYH,IAGlD,CACLK,mBAAoB/R,KAAKC,IAAI,EAAG2R,EAAaF,GAC7CM,kBAAmBhS,KAAKE,IAAIpD,EAAY,EAAG+U,EAAY,GAG7D,CC/BA,ICQI1M,EAAQC,EAEZ,SAAS4B,EAAQC,EAAQC,GAAkB,IAAIvJ,EAAOvC,OAAOuC,KAAKsJ,GAAS,GAAI7L,OAAOyC,sBAAuB,CAAE,IAAIsJ,EAAU/L,OAAOyC,sBAAsBoJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOjM,OAAOkM,yBAAyBL,EAAQI,GAAKpM,UAAY,KAAI0C,EAAK4J,KAAKC,MAAM7J,EAAMwJ,EAAU,CAAE,OAAOxJ,CAAM,CAUpV,IAAIoX,GAAmB3P,EAAQD,EAE/B,SAAU4C,GAGR,SAASgN,IACP,IAAIC,EAEAhN,EAEJxN,EAAgB2D,KAAM4W,GAEtB,IAAK,IAAIE,EAAO1a,UAAUD,OAAQ4a,EAAO,IAAI9a,MAAM6a,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ5a,UAAU4a,GAkFzB,OA/EAnN,EAAQpM,EAA2BuC,MAAO6W,EAAmBhZ,EAAgB+Y,IAAkBjZ,KAAK0L,MAAMwN,EAAkB,CAAC7W,MAAMS,OAAOsW,MAE1I9W,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,QAAS,CACtD6C,eAAgB,EAChBE,YAAa,EACbT,cAAe,CACbM,mBAAoB,EACpBE,gBAAiB,MAIrB1M,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,oBAAqB,IAEpE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,mBAAoB,IAEnE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,iBAAkB,IAEjE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,gBAAiB,IAEhE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,cAAc,SAAU0B,GACrE,IAAI4C,EAActE,EAAMlN,MACpB+O,EAAcyC,EAAYzC,YAC1BuL,EAAW9I,EAAY8I,SACvBC,EAAO/I,EAAY+I,KACnBnL,EAAWoC,EAAYpC,SAE3B,IAAIkL,EAAJ,CAIA,IAAIE,EAAwBtN,EAAMuN,kBAC9BC,EAAyBF,EAAsBzK,eAC/C4K,EAAsBH,EAAsBvK,YAE5C2K,EAAyB1N,EAAMuN,kBAC/B1K,EAAiB6K,EAAuB7K,eACxCE,EAAc2K,EAAuB3K,YAIzC,OAAQrB,EAAMnO,KACZ,IAAK,YACHwP,EAAuB,UAATsK,EAAmBrV,KAAKE,IAAI6K,EAAc,EAAGb,EAAW,GAAKlK,KAAKE,IAAI8H,EAAMmB,cAAgB,EAAGe,EAAW,GACxH,MAEF,IAAK,YACHW,EAA0B,UAATwK,EAAmBrV,KAAKC,IAAI4K,EAAiB,EAAG,GAAK7K,KAAKC,IAAI+H,EAAMS,kBAAoB,EAAG,GAC5G,MAEF,IAAK,aACHoC,EAA0B,UAATwK,EAAmBrV,KAAKE,IAAI2K,EAAiB,EAAGhB,EAAc,GAAK7J,KAAKE,IAAI8H,EAAMW,iBAAmB,EAAGkB,EAAc,GACvI,MAEF,IAAK,UACHkB,EAAuB,UAATsK,EAAmBrV,KAAKC,IAAI8K,EAAc,EAAG,GAAK/K,KAAKC,IAAI+H,EAAMiB,eAAiB,EAAG,GAInG4B,IAAmB2K,GAA0BzK,IAAgB0K,IAC/D/L,EAAMiM,iBAEN3N,EAAM4N,mBAAmB,CACvB/K,eAAgBA,EAChBE,YAAaA,IAnCjB,CAsCF,KAEA3M,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,sBAAsB,SAAUnL,GAC7E,IAAI+L,EAAmB/L,EAAK+L,iBACxBE,EAAkBjM,EAAKiM,gBACvBM,EAAgBvM,EAAKuM,cACrBE,EAAezM,EAAKyM,aACxBtB,EAAMS,kBAAoBG,EAC1BZ,EAAMW,iBAAmBG,EACzBd,EAAMiB,eAAiBG,EACvBpB,EAAMmB,cAAgBG,CACxB,IAEOtB,CACT,CAkFA,OA/KA1L,EAAUyY,EAAiBhN,GA+F3BvM,EAAauZ,EAAiB,CAAC,CAC7BxZ,IAAK,mBACLoB,MAAO,SAA0B6B,GAC/B,IAAIqM,EAAiBrM,EAAMqM,eACvBE,EAAcvM,EAAMuM,YACxB5M,KAAKgK,SAAS,CACZ4C,YAAaA,EACbF,eAAgBA,GAEpB,GACC,CACDtP,IAAK,SACLoB,MAAO,WACL,IAAIoQ,EAAe5O,KAAKrD,MACpB4T,EAAY3B,EAAa2B,UACzBmH,EAAW9I,EAAa8I,SAExBC,EAAyB3X,KAAKoX,kBAC9B1K,EAAiBiL,EAAuBjL,eACxCE,EAAc+K,EAAuB/K,YAEzC,OAAOqF,EAAAA,cAAoB,MAAO,CAChC1B,UAAWA,EACXqH,UAAW5X,KAAK6X,YACfH,EAAS,CACVvN,kBAAmBnK,KAAK8X,mBACxBpL,eAAgBA,EAChBE,YAAaA,IAEjB,GACC,CACDxP,IAAK,kBACLoB,MAAO,WACL,OAAOwB,KAAKrD,MAAMob,aAAe/X,KAAKrD,MAAQqD,KAAKkM,KACrD,GACC,CACD9O,IAAK,qBACLoB,MAAO,SAA4B0C,GACjC,IAAIwL,EAAiBxL,EAAMwL,eACvBE,EAAc1L,EAAM0L,YACpBmC,EAAe/O,KAAKrD,MACpBob,EAAehJ,EAAagJ,aAC5BC,EAAmBjJ,EAAaiJ,iBAEJ,oBAArBA,GACTA,EAAiB,CACftL,eAAgBA,EAChBE,YAAaA,IAIZmL,GACH/X,KAAKgK,SAAS,CACZ0C,eAAgBA,EAChBE,YAAaA,GAGnB,IACE,CAAC,CACHxP,IAAK,2BACLoB,MAAO,SAAkC6W,EAAW3F,GAClD,OAAI2F,EAAU0C,aACL,CAAC,EAGN1C,EAAU3I,iBAAmBgD,EAAUvD,cAAcM,oBAAsB4I,EAAUzI,cAAgB8C,EAAUvD,cAAcQ,gBA3KvI,SAAuBjQ,GAAU,IAAK,IAAIE,EAAI,EAAGA,EAAIR,UAAUD,OAAQS,IAAK,CAAE,IAAIyC,EAAyB,MAAhBjD,UAAUQ,GAAaR,UAAUQ,GAAK,CAAC,EAAOA,EAAI,EAAKiM,EAAQxJ,GAAQ,GAAMkK,SAAQ,SAAUnM,IAAO6C,EAAAA,EAAAA,GAAgBvD,EAAQU,EAAKiC,EAAOjC,GAAO,IAAeH,OAAOuM,0BAA6BvM,OAAOwM,iBAAiB/M,EAAQO,OAAOuM,0BAA0BnK,IAAmBwJ,EAAQxJ,GAAQkK,SAAQ,SAAUnM,GAAOH,OAAOC,eAAeR,EAAQU,EAAKH,OAAOkM,yBAAyB9J,EAAQjC,GAAO,GAAM,CAAE,OAAOV,CAAQ,CA4Ktf4M,CAAc,CAAC,EAAGoG,EAAW,CAClChD,eAAgB2I,EAAU3I,eAC1BE,YAAayI,EAAUzI,YACvBT,cAAe,CACbM,mBAAoB4I,EAAU3I,eAC9BC,gBAAiB0I,EAAUzI,eAK1B,CAAC,CACV,KAGKgK,CACT,CAjLA,CAiLE3E,EAAAA,gBAAsBhS,EAAAA,EAAAA,GAAgB+G,EAAQ,YAAqD,MAWjGC,IAEJhH,EAAAA,EAAAA,GAAgB2W,EAAiB,eAAgB,CAC/CK,UAAU,EACVc,cAAc,EACdb,KAAM,QACNxK,eAAgB,EAChBE,YAAa,KAGf8J,EAAAA,EAAAA,UAASE,GChNM,SAASqB,EAA0BC,EAAOC,GAEvD,IAAIC,EAYAC,EAA0C,qBAT5CD,EADwB,qBAAfD,EACCA,EACiB,qBAAXpV,OACNA,OACe,qBAATrF,KACNA,KAEA4a,EAAAA,GAGqBxS,UAA4BsS,EAAQtS,SAASuS,YAE9E,IAAKA,EAAa,CAChB,IAAIE,EAAe,WACjB,IAAItQ,EAAMmQ,EAAQjR,uBAAyBiR,EAAQ/Q,0BAA4B+Q,EAAQhR,6BAA+B,SAAUoR,GAC9H,OAAOJ,EAAQ5Q,WAAWgR,EAAI,GAChC,EAEA,OAAO,SAAUA,GACf,OAAOvQ,EAAIuQ,EACb,CACF,CARmB,GAUfC,EAAc,WAChB,IAAIhR,EAAS2Q,EAAQ1Q,sBAAwB0Q,EAAQxQ,yBAA2BwQ,EAAQzQ,4BAA8ByQ,EAAQpQ,aAC9H,OAAO,SAAUD,GACf,OAAON,EAAOM,EAChB,CACF,CALkB,GAOd2Q,EAAgB,SAAuBC,GACzC,IAAIC,EAAWD,EAAQE,mBACnBC,EAASF,EAASG,kBAClBC,EAAWJ,EAASK,iBACpBC,EAAcJ,EAAOC,kBACzBC,EAAShM,WAAagM,EAASpE,YAC/BoE,EAAS/L,UAAY+L,EAASrE,aAC9BuE,EAAY7S,MAAMG,MAAQsS,EAAOjS,YAAc,EAAI,KACnDqS,EAAY7S,MAAMI,OAASqS,EAAOK,aAAe,EAAI,KACrDL,EAAO9L,WAAa8L,EAAOlE,YAC3BkE,EAAO7L,UAAY6L,EAAOnE,YAC5B,EAMIyE,EAAiB,SAAwBvd,GAE3C,KAAIA,EAAEa,OAAO6T,WAAmD,oBAA/B1U,EAAEa,OAAO6T,UAAU9Q,SAA0B5D,EAAEa,OAAO6T,UAAU9Q,QAAQ,oBAAsB,GAAK5D,EAAEa,OAAO6T,UAAU9Q,QAAQ,kBAAoB,GAAnL,CAIA,IAAIkZ,EAAU3Y,KACd0Y,EAAc1Y,MAEVA,KAAKqZ,eACPZ,EAAYzY,KAAKqZ,eAGnBrZ,KAAKqZ,cAAgBd,GAAa,YAjBhB,SAAuBI,GACzC,OAAOA,EAAQ9R,aAAe8R,EAAQW,eAAe9S,OAASmS,EAAQQ,cAAgBR,EAAQW,eAAe7S,MAC/G,EAgBQ8S,CAAcZ,KAChBA,EAAQW,eAAe9S,MAAQmS,EAAQ9R,YACvC8R,EAAQW,eAAe7S,OAASkS,EAAQQ,aAExCR,EAAQa,oBAAoBjQ,SAAQ,SAAUiP,GAC5CA,EAAG7a,KAAKgb,EAAS9c,EACnB,IAEJ,GAlBA,CAmBF,EAII4d,GAAY,EACZC,EAAiB,GACjBC,EAAsB,iBACtBC,EAAc,kBAAkBC,MAAM,KACtCC,EAAc,uEAAuED,MAAM,KAGzFE,EAAM3B,EAAQtS,SAASC,cAAc,eAMzC,QAJgCjF,IAA5BiZ,EAAI1T,MAAM2T,gBACZP,GAAY,IAGI,IAAdA,EACF,IAAK,IAAI7c,EAAI,EAAGA,EAAIgd,EAAYzd,OAAQS,IACtC,QAAoDkE,IAAhDiZ,EAAI1T,MAAMuT,EAAYhd,GAAK,iBAAgC,CAE7D8c,EAAiB,IADXE,EAAYhd,GACSqd,cAAgB,IAC3CN,EAAsBG,EAAYld,GAClC6c,GAAY,EACZ,KACF,CAIN,IAAIO,EAAgB,aAChBE,EAAqB,IAAMR,EAAiB,aAAeM,EAAgB,gDAC3EG,EAAiBT,EAAiB,kBAAoBM,EAAgB,IAC5E,CAkGA,MAAO,CACLI,kBA1EsB,SAA2BzB,EAASH,GAC1D,GAAIH,EACFM,EAAQN,YAAY,WAAYG,OAC3B,CACL,IAAKG,EAAQE,mBAAoB,CAC/B,IAAIwB,EAAM1B,EAAQ2B,cAEdC,EAAenC,EAAQoC,iBAAiB7B,GAExC4B,GAAyC,UAAzBA,EAAajU,WAC/BqS,EAAQtS,MAAMC,SAAW,YAjCd,SAAsB+T,GACvC,IAAKA,EAAII,eAAe,uBAAwB,CAE9C,IAAIC,GAAOR,GAA0C,IAAM,uBAAyBC,GAAkC,IAA5G,6VACNQ,EAAON,EAAIM,MAAQN,EAAIO,qBAAqB,QAAQ,GACpDvU,EAAQgU,EAAItU,cAAc,SAC9BM,EAAM0B,GAAK,sBACX1B,EAAMwU,KAAO,WAEA,MAAT3C,GACF7R,EAAMyU,aAAa,QAAS5C,GAG1B7R,EAAM0U,WACR1U,EAAM0U,WAAWC,QAAUN,EAE3BrU,EAAMO,YAAYyT,EAAIY,eAAeP,IAGvCC,EAAK/T,YAAYP,EACnB,CACF,CAeM6U,CAAab,GACb1B,EAAQW,eAAiB,CAAC,EAC1BX,EAAQa,oBAAsB,IAC7Bb,EAAQE,mBAAqBwB,EAAItU,cAAc,QAAQwK,UAAY,kBACpE,IAAI4K,EAAqB,oFAEzB,GAAIpY,OAAOqY,aAAc,CACvB,IAAIC,EAAeD,aAAaE,aAAa,+BAAgC,CAC3EC,WAAY,WACV,OAAOJ,CACT,IAEFxC,EAAQE,mBAAmB2C,UAAYH,EAAaE,WAAW,GACjE,MACE5C,EAAQE,mBAAmB2C,UAAYL,EAGzCxC,EAAQ/R,YAAY+R,EAAQE,oBAC5BH,EAAcC,GACdA,EAAQ8C,iBAAiB,SAAUrC,GAAgB,GAG/CO,IACFhB,EAAQE,mBAAmB6C,sBAAwB,SAA2B7f,GACxEA,EAAEme,eAAiBA,GACrBtB,EAAcC,EAElB,EAEAA,EAAQE,mBAAmB4C,iBAAiB9B,EAAqBhB,EAAQE,mBAAmB6C,uBAEhG,CAEA/C,EAAQa,oBAAoBpQ,KAAKoP,EACnC,CACF,EA2BEmD,qBAzByB,SAA8BhD,EAASH,GAChE,GAAIH,EACFM,EAAQiD,YAAY,WAAYpD,QAIhC,GAFAG,EAAQa,oBAAoBqC,OAAOlD,EAAQa,oBAAoB/Z,QAAQ+Y,GAAK,IAEvEG,EAAQa,oBAAoBrd,OAAQ,CACvCwc,EAAQmD,oBAAoB,SAAU1C,GAAgB,GAElDT,EAAQE,mBAAmB6C,wBAC7B/C,EAAQE,mBAAmBiD,oBAAoBnC,EAAqBhB,EAAQE,mBAAmB6C,uBAE/F/C,EAAQE,mBAAmB6C,sBAAwB,MAGrD,IACE/C,EAAQE,oBAAsBF,EAAQ5R,YAAY4R,EAAQE,mBAC5D,CAAE,MAAOhd,GAAI,CAEf,CAEJ,EAMF,CCpNA,IAAImL,EAAQC,EAEZ,SAAS4B,EAAQC,EAAQC,GAAkB,IAAIvJ,EAAOvC,OAAOuC,KAAKsJ,GAAS,GAAI7L,OAAOyC,sBAAuB,CAAE,IAAIsJ,EAAU/L,OAAOyC,sBAAsBoJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOjM,OAAOkM,yBAAyBL,EAAQI,GAAKpM,UAAY,KAAI0C,EAAK4J,KAAKC,MAAM7J,EAAMwJ,EAAU,CAAE,OAAOxJ,CAAM,CAEpV,SAAS8J,EAAc5M,GAAU,IAAK,IAAIE,EAAI,EAAGA,EAAIR,UAAUD,OAAQS,IAAK,CAAE,IAAIyC,EAAyB,MAAhBjD,UAAUQ,GAAaR,UAAUQ,GAAK,CAAC,EAAOA,EAAI,EAAKiM,EAAQxJ,GAAQ,GAAMkK,SAAQ,SAAUnM,IAAO6C,EAAAA,EAAAA,GAAgBvD,EAAQU,EAAKiC,EAAOjC,GAAO,IAAeH,OAAOuM,0BAA6BvM,OAAOwM,iBAAiB/M,EAAQO,OAAOuM,0BAA0BnK,IAAmBwJ,EAAQxJ,GAAQkK,SAAQ,SAAUnM,GAAOH,OAAOC,eAAeR,EAAQU,EAAKH,OAAOkM,yBAAyB9J,EAAQjC,GAAO,GAAM,CAAE,OAAOV,CAAQ,CAIrgB,IAAIqf,GAAa9U,EAAQD,EAEzB,SAAUgV,GAGR,SAASD,IACP,IAAIlF,EAEAhN,EAEJxN,EAAgB2D,KAAM+b,GAEtB,IAAK,IAAIjF,EAAO1a,UAAUD,OAAQ4a,EAAO,IAAI9a,MAAM6a,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ5a,UAAU4a,GAyDzB,OAtDAnN,EAAQpM,EAA2BuC,MAAO6W,EAAmBhZ,EAAgBke,IAAYpe,KAAK0L,MAAMwN,EAAkB,CAAC7W,MAAMS,OAAOsW,MAEpI9W,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,QAAS,CACtDpD,OAAQoD,EAAMlN,MAAMsf,eAAiB,EACrCzV,MAAOqD,EAAMlN,MAAMuf,cAAgB,KAGrCjc,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,mBAAe,IAE9D5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,kBAAc,IAE7D5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,eAAW,IAE1D5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,4BAAwB,IAEvE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,aAAa,WAC1D,IAAIsE,EAActE,EAAMlN,MACpBwf,EAAgBhO,EAAYgO,cAC5BC,EAAejO,EAAYiO,aAC3BC,EAAWlO,EAAYkO,SAE3B,GAAIxS,EAAMyS,YAAa,CAIrB,IAAI7V,EAASoD,EAAMyS,YAAYnD,cAAgB,EAC3C3S,EAAQqD,EAAMyS,YAAYzV,aAAe,EAEzCR,GADMwD,EAAMuO,SAAWrV,QACXyX,iBAAiB3Q,EAAMyS,cAAgB,CAAC,EACpDC,EAAcC,SAASnW,EAAMkW,YAAa,KAAO,EACjDE,EAAeD,SAASnW,EAAMoW,aAAc,KAAO,EACnDC,EAAaF,SAASnW,EAAMqW,WAAY,KAAO,EAC/CC,EAAgBH,SAASnW,EAAMsW,cAAe,KAAO,EACrDC,EAAYnW,EAASiW,EAAaC,EAClCE,EAAWrW,EAAQ+V,EAAcE,IAEhCN,GAAiBtS,EAAMqC,MAAMzF,SAAWmW,IAAcR,GAAgBvS,EAAMqC,MAAM1F,QAAUqW,KAC/FhT,EAAMG,SAAS,CACbvD,OAAQA,EAASiW,EAAaC,EAC9BnW,MAAOA,EAAQ+V,EAAcE,IAG/BJ,EAAS,CACP5V,OAAQA,EACRD,MAAOA,IAGb,CACF,KAEAvG,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,WAAW,SAAUiT,GAClEjT,EAAMkT,WAAaD,CACrB,IAEOjT,CACT,CAgFA,OApJA1L,EAAU4d,EAAWC,GAsErB3e,EAAa0e,EAAW,CAAC,CACvB3e,IAAK,oBACLoB,MAAO,WACL,IAAI0Z,EAAQlY,KAAKrD,MAAMub,MAEnBlY,KAAK+c,YAAc/c,KAAK+c,WAAWC,YAAchd,KAAK+c,WAAWC,WAAW1C,eAAiBta,KAAK+c,WAAWC,WAAW1C,cAAc2C,aAAejd,KAAK+c,WAAWC,sBAAsBhd,KAAK+c,WAAWC,WAAW1C,cAAc2C,YAAYC,cAIlPld,KAAKsc,YAActc,KAAK+c,WAAWC,WACnChd,KAAKoY,QAAUpY,KAAK+c,WAAWC,WAAW1C,cAAc2C,YAGxDjd,KAAKmd,qBAAuBlF,EAA0BC,EAAOlY,KAAKoY,SAElEpY,KAAKmd,qBAAqB/C,kBAAkBpa,KAAKsc,YAAatc,KAAKod,WAEnEpd,KAAKod,YAET,GACC,CACDhgB,IAAK,uBACLoB,MAAO,WACDwB,KAAKmd,sBAAwBnd,KAAKsc,aACpCtc,KAAKmd,qBAAqBxB,qBAAqB3b,KAAKsc,YAAatc,KAAKod,UAE1E,GACC,CACDhgB,IAAK,SACLoB,MAAO,WACL,IAAIoQ,EAAe5O,KAAKrD,MACpB+a,EAAW9I,EAAa8I,SACxBnH,EAAY3B,EAAa2B,UACzB4L,EAAgBvN,EAAauN,cAC7BC,EAAexN,EAAawN,aAC5B/V,EAAQuI,EAAavI,MACrB8J,EAAcnQ,KAAKkM,MACnBzF,EAAS0J,EAAY1J,OACrBD,EAAQ2J,EAAY3J,MAIpB6W,EAAa,CACf3W,SAAU,WAER4W,EAAc,CAAC,EAyBnB,OAvBKnB,IACHkB,EAAW5W,OAAS,EACpB6W,EAAY7W,OAASA,GAGlB2V,IACHiB,EAAW7W,MAAQ,EACnB8W,EAAY9W,MAAQA,GAgBfyL,EAAAA,cAAoB,MAAO,CAChC1B,UAAWA,EACXlF,IAAKrL,KAAKud,QACVlX,MAAOiD,EAAc,CAAC,EAAG+T,EAAY,CAAC,EAAGhX,IACxCqR,EAAS4F,GACd,KAGKvB,CACT,CAtJA,CAsJE9J,EAAAA,YAAkBhS,EAAAA,EAAAA,GAAgB+G,EAAQ,YAAqD,MA2B7FC,IAEJhH,EAAAA,EAAAA,GAAgB8b,EAAW,eAAgB,CACzCM,SAAU,WAAqB,EAC/BF,eAAe,EACfC,cAAc,EACd/V,MAAO,CAAC,I,ICjMNW,GAAQC,G,WAURuW,IAAgBvW,GAAQD,GAE5B,SAAU4C,GAGR,SAAS4T,IACP,IAAI3G,EAEAhN,EAEJxN,EAAgB2D,KAAMwd,GAEtB,IAAK,IAAI1G,EAAO1a,UAAUD,OAAQ4a,EAAO,IAAI9a,MAAM6a,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ5a,UAAU4a,GA4CzB,OAzCAnN,EAAQpM,EAA2BuC,MAAO6W,EAAmBhZ,EAAgB2f,IAAe7f,KAAK0L,MAAMwN,EAAkB,CAAC7W,MAAMS,OAAOsW,MAEvI9W,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,cAAU,IAEzD5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,YAAY,WACzD,IAAIsE,EAActE,EAAMlN,MACpB8gB,EAAQtP,EAAYsP,MACpBC,EAAwBvP,EAAYT,YACpCA,OAAwC,IAA1BgQ,EAAmC,EAAIA,EACrDxJ,EAAS/F,EAAY+F,OACrByJ,EAAuBxP,EAAYP,SACnCA,OAAoC,IAAzB+P,EAAkC9T,EAAMlN,MAAM4D,OAAS,EAAIod,EAEtEC,EAAwB/T,EAAMgU,uBAC9BpX,EAASmX,EAAsBnX,OAC/BD,EAAQoX,EAAsBpX,MAE9BC,IAAWgX,EAAMK,UAAUlQ,EAAUF,IAAgBlH,IAAUiX,EAAMM,SAASnQ,EAAUF,KAC1F+P,EAAMO,IAAIpQ,EAAUF,EAAalH,EAAOC,GAEpCyN,GAA8C,oBAA7BA,EAAOI,mBAC1BJ,EAAOI,kBAAkB,CACvB5G,YAAaA,EACbE,SAAUA,IAIlB,KAEA3N,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,kBAAkB,SAAU8O,IACrEA,GAAaA,aAAmBsF,SAClCC,QAAQC,KAAK,mEAGftU,EAAMuU,OAASzF,EAEXA,GACF9O,EAAMwU,mBAEV,IAEOxU,CACT,CAiGA,OAxJA1L,EAAUqf,EAAc5T,GAyDxBvM,EAAamgB,EAAc,CAAC,CAC1BpgB,IAAK,oBACLoB,MAAO,WACLwB,KAAKqe,mBACP,GACC,CACDjhB,IAAK,qBACLoB,MAAO,WACLwB,KAAKqe,mBACP,GACC,CACDjhB,IAAK,SACLoB,MAAO,WACL,IAAIkZ,EAAW1X,KAAKrD,MAAM+a,SAC1B,MAA2B,oBAAbA,EAA0BA,EAAS,CAC/C4G,QAASte,KAAKue,SACdC,cAAexe,KAAKye,iBACjB/G,CACP,GACC,CACDta,IAAK,uBACLoB,MAAO,WACL,IAAIif,EAAQzd,KAAKrD,MAAM8gB,MACnBiB,EAAO1e,KAAKoe,SAAUO,EAAAA,GAAAA,aAAY3e,MAEtC,GAAI0e,GAAQA,EAAKpE,eAAiBoE,EAAKpE,cAAc2C,aAAeyB,aAAgBA,EAAKpE,cAAc2C,YAAYC,YAAa,CAC9H,IAAI0B,EAAaF,EAAKrY,MAAMG,MACxBqY,EAAcH,EAAKrY,MAAMI,OAUxBgX,EAAMzJ,kBACT0K,EAAKrY,MAAMG,MAAQ,QAGhBiX,EAAM3J,mBACT4K,EAAKrY,MAAMI,OAAS,QAGtB,IAAIA,EAAS5E,KAAKid,KAAKJ,EAAKvF,cACxB3S,EAAQ3E,KAAKid,KAAKJ,EAAK7X,aAU3B,OARI+X,IACFF,EAAKrY,MAAMG,MAAQoY,GAGjBC,IACFH,EAAKrY,MAAMI,OAASoY,GAGf,CACLpY,OAAQA,EACRD,MAAOA,EAEX,CACE,MAAO,CACLC,OAAQ,EACRD,MAAO,EAGb,GACC,CACDpJ,IAAK,oBACLoB,MAAO,WACL,IAAIoQ,EAAe5O,KAAKrD,MACpB8gB,EAAQ7O,EAAa6O,MACrBsB,EAAwBnQ,EAAalB,YACrCA,OAAwC,IAA1BqR,EAAmC,EAAIA,EACrD7K,EAAStF,EAAasF,OACtB8K,EAAwBpQ,EAAahB,SACrCA,OAAqC,IAA1BoR,EAAmChf,KAAKrD,MAAM4D,OAAS,EAAIye,EAE1E,IAAKvB,EAAM1J,IAAInG,EAAUF,GAAc,CACrC,IAAIuR,EAAyBjf,KAAK6d,uBAC9BpX,EAASwY,EAAuBxY,OAChCD,EAAQyY,EAAuBzY,MAEnCiX,EAAMO,IAAIpQ,EAAUF,EAAalH,EAAOC,GAEpCyN,GAA0D,oBAAzCA,EAAOgL,+BAC1BhL,EAAOgL,8BAA8B,CACnCxR,YAAaA,EACbE,SAAUA,GAGhB,CACF,KAGK4P,CACT,CA1JA,CA0JEvL,EAAAA,gBAAsBhS,EAAAA,EAAAA,GAAgB+G,GAAQ,YAAqD,MAYjGC,KAEJhH,EAAAA,EAAAA,GAAgBud,GAAc,8BAA8B,GCzLrD,IAOH2B,GAEJ,WACE,SAASA,IACP,IAAItV,EAAQ7J,KAERkC,EAAS9F,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAElFC,EAAgB2D,KAAMmf,IAEtBlf,EAAAA,EAAAA,GAAgBD,KAAM,mBAAoB,CAAC,IAE3CC,EAAAA,EAAAA,GAAgBD,KAAM,kBAAmB,CAAC,IAE1CC,EAAAA,EAAAA,GAAgBD,KAAM,oBAAqB,CAAC,IAE5CC,EAAAA,EAAAA,GAAgBD,KAAM,kBAAmB,CAAC,IAE1CC,EAAAA,EAAAA,GAAgBD,KAAM,sBAAkB,IAExCC,EAAAA,EAAAA,GAAgBD,KAAM,qBAAiB,IAEvCC,EAAAA,EAAAA,GAAgBD,KAAM,kBAAc,IAEpCC,EAAAA,EAAAA,GAAgBD,KAAM,iBAAa,IAEnCC,EAAAA,EAAAA,GAAgBD,KAAM,kBAAc,IAEpCC,EAAAA,EAAAA,GAAgBD,KAAM,uBAAmB,IAEzCC,EAAAA,EAAAA,GAAgBD,KAAM,sBAAkB,IAExCC,EAAAA,EAAAA,GAAgBD,KAAM,eAAgB,IAEtCC,EAAAA,EAAAA,GAAgBD,KAAM,YAAa,IAEnCC,EAAAA,EAAAA,GAAgBD,KAAM,eAAe,SAAUtB,GAC7C,IAAI6B,EAAQ7B,EAAK6B,MAEbnD,EAAMyM,EAAMuV,WAAW,EAAG7e,GAE9B,YAAwCO,IAAjC+I,EAAMwV,kBAAkBjiB,GAAqByM,EAAMwV,kBAAkBjiB,GAAOyM,EAAMyV,aAC3F,KAEArf,EAAAA,EAAAA,GAAgBD,KAAM,aAAa,SAAUK,GAC3C,IAAIE,EAAQF,EAAME,MAEdnD,EAAMyM,EAAMuV,WAAW7e,EAAO,GAElC,YAAsCO,IAA/B+I,EAAM0V,gBAAgBniB,GAAqByM,EAAM0V,gBAAgBniB,GAAOyM,EAAM2V,cACvF,IAEA,IAAIvD,EAAgB/Z,EAAO+Z,cACvBC,EAAeha,EAAOga,aACtBuD,EAAcvd,EAAOud,YACrBC,EAAaxd,EAAOwd,WACpBC,EAAYzd,EAAOyd,UACnBC,EAAY1d,EAAO0d,UACnBC,EAAW3d,EAAO2d,SACtB7f,KAAK8f,iBAAkC,IAAhBL,EACvBzf,KAAK+f,gBAAgC,IAAfL,EACtB1f,KAAKggB,WAAaJ,GAAa,EAC/B5f,KAAKigB,UAAYJ,GAAY,EAC7B7f,KAAKof,WAAaO,GAAaO,GAC/BlgB,KAAKwf,eAAiB3d,KAAKC,IAAI9B,KAAKggB,WAAqC,kBAAlB/D,EAA6BA,EAvE5D,IAwExBjc,KAAKsf,cAAgBzd,KAAKC,IAAI9B,KAAKigB,UAAmC,kBAAjB/D,EAA4BA,EAvE1D,IAsFzB,CAmIA,OAjIA7e,EAAa8hB,EAAmB,CAAC,CAC/B/hB,IAAK,QACLoB,MAAO,SAAeoP,GACpB,IAAIF,EAActR,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EAElFgB,EAAM4C,KAAKof,WAAWxR,EAAUF,UAE7B1N,KAAKmgB,iBAAiB/iB,UACtB4C,KAAKogB,gBAAgBhjB,GAE5B4C,KAAKqgB,+BAA+BzS,EAAUF,EAChD,GACC,CACDtQ,IAAK,WACLoB,MAAO,WACLwB,KAAKmgB,iBAAmB,CAAC,EACzBngB,KAAKogB,gBAAkB,CAAC,EACxBpgB,KAAKqf,kBAAoB,CAAC,EAC1Brf,KAAKuf,gBAAkB,CAAC,EACxBvf,KAAKsgB,UAAY,EACjBtgB,KAAKugB,aAAe,CACtB,GACC,CACDnjB,IAAK,iBACLoB,MAAO,WACL,OAAOwB,KAAK8f,eACd,GACC,CACD1iB,IAAK,gBACLoB,MAAO,WACL,OAAOwB,KAAK+f,cACd,GACC,CACD3iB,IAAK,YACLoB,MAAO,SAAmBoP,GACxB,IAAIF,EAActR,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EAEtF,GAAI4D,KAAK8f,gBACP,OAAO9f,KAAKwf,eAEZ,IAAIxI,EAAOhX,KAAKof,WAAWxR,EAAUF,GAErC,YAAuC5M,IAAhCd,KAAKmgB,iBAAiBnJ,GAAsBnV,KAAKC,IAAI9B,KAAKggB,WAAYhgB,KAAKmgB,iBAAiBnJ,IAAShX,KAAKwf,cAErH,GACC,CACDpiB,IAAK,WACLoB,MAAO,SAAkBoP,GACvB,IAAIF,EAActR,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EAEtF,GAAI4D,KAAK+f,eACP,OAAO/f,KAAKsf,cAEZ,IAAIkB,EAAQxgB,KAAKof,WAAWxR,EAAUF,GAEtC,YAAuC5M,IAAhCd,KAAKogB,gBAAgBI,GAAuB3e,KAAKC,IAAI9B,KAAKigB,UAAWjgB,KAAKogB,gBAAgBI,IAAUxgB,KAAKsf,aAEpH,GACC,CACDliB,IAAK,MACLoB,MAAO,SAAaoP,GAClB,IAAIF,EAActR,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EAElFgB,EAAM4C,KAAKof,WAAWxR,EAAUF,GAEpC,YAAsC5M,IAA/Bd,KAAKmgB,iBAAiB/iB,EAC/B,GACC,CACDA,IAAK,MACLoB,MAAO,SAAaoP,EAAUF,EAAalH,EAAOC,GAChD,IAAIrJ,EAAM4C,KAAKof,WAAWxR,EAAUF,GAEhCA,GAAe1N,KAAKugB,eACtBvgB,KAAKugB,aAAe7S,EAAc,GAGhCE,GAAY5N,KAAKsgB,YACnBtgB,KAAKsgB,UAAY1S,EAAW,GAI9B5N,KAAKmgB,iBAAiB/iB,GAAOqJ,EAC7BzG,KAAKogB,gBAAgBhjB,GAAOoJ,EAE5BxG,KAAKqgB,+BAA+BzS,EAAUF,EAChD,GACC,CACDtQ,IAAK,iCACLoB,MAAO,SAAwCoP,EAAUF,GAKvD,IAAK1N,KAAK+f,eAAgB,CAGxB,IAFA,IAAInU,EAAc,EAEThP,EAAI,EAAGA,EAAIoD,KAAKsgB,UAAW1jB,IAClCgP,EAAc/J,KAAKC,IAAI8J,EAAa5L,KAAK+d,SAASnhB,EAAG8Q,IAGvD,IAAI+S,EAAYzgB,KAAKof,WAAW,EAAG1R,GAEnC1N,KAAKqf,kBAAkBoB,GAAa7U,CACtC,CAEA,IAAK5L,KAAK8f,gBAAiB,CAGzB,IAFA,IAAI9T,EAAY,EAEP0U,EAAK,EAAGA,EAAK1gB,KAAKugB,aAAcG,IACvC1U,EAAYnK,KAAKC,IAAIkK,EAAWhM,KAAK8d,UAAUlQ,EAAU8S,IAG3D,IAAIC,EAAS3gB,KAAKof,WAAWxR,EAAU,GAEvC5N,KAAKuf,gBAAgBoB,GAAU3U,CACjC,CACF,GACC,CACD5O,IAAK,gBACLwjB,IAAK,WACH,OAAO5gB,KAAKwf,cACd,GACC,CACDpiB,IAAK,eACLwjB,IAAK,WACH,OAAO5gB,KAAKsf,aACd,KAGKH,CACT,CAlNA,GAsNA,SAASe,GAAiBtS,EAAUF,GAClC,MAAO,GAAGjN,OAAOmN,EAAU,KAAKnN,OAAOiN,EACzC,CC5NA,SAAS7E,GAAQC,EAAQC,GAAkB,IAAIvJ,EAAOvC,OAAOuC,KAAKsJ,GAAS,GAAI7L,OAAOyC,sBAAuB,CAAE,IAAIsJ,EAAU/L,OAAOyC,sBAAsBoJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOjM,OAAOkM,yBAAyBL,EAAQI,GAAKpM,UAAY,KAAI0C,EAAK4J,KAAKC,MAAM7J,EAAMwJ,EAAU,CAAE,OAAOxJ,CAAM,CAEpV,SAAS8J,GAAc5M,GAAU,IAAK,IAAIE,EAAI,EAAGA,EAAIR,UAAUD,OAAQS,IAAK,CAAE,IAAIyC,EAAyB,MAAhBjD,UAAUQ,GAAaR,UAAUQ,GAAK,CAAC,EAAOA,EAAI,EAAKiM,GAAQxJ,GAAQ,GAAMkK,SAAQ,SAAUnM,IAAO6C,EAAAA,EAAAA,GAAgBvD,EAAQU,EAAKiC,EAAOjC,GAAO,IAAeH,OAAOuM,0BAA6BvM,OAAOwM,iBAAiB/M,EAAQO,OAAOuM,0BAA0BnK,IAAmBwJ,GAAQxJ,GAAQkK,SAAQ,SAAUnM,GAAOH,OAAOC,eAAeR,EAAQU,EAAKH,OAAOkM,yBAAyB9J,EAAQjC,GAAO,GAAM,CAAE,OAAOV,CAAQ,CAcrgB,IAMIgN,GACQ,WADRA,GAES,YAOTmX,GAEJ,SAAUjX,GAIR,SAASiX,IACP,IAAIhK,EAEAhN,EAEJxN,EAAgB2D,KAAM6gB,GAEtB,IAAK,IAAI/J,EAAO1a,UAAUD,OAAQ4a,EAAO,IAAI9a,MAAM6a,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ5a,UAAU4a,GAkIzB,OA/HAnN,EAAQpM,EAA2BuC,MAAO6W,EAAmBhZ,EAAgBgjB,IAAiBljB,KAAK0L,MAAMwN,EAAkB,CAAC7W,MAAMS,OAAOsW,MAGzI9W,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,QAAS,CACtDI,aAAa,EACb+C,WAAY,EACZC,UAAW,KAGbhN,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,6CAA6C,IAE5F5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,6BAA8BtF,MAE7EtE,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,oBAAqBtF,GAAuB,KAE3FtE,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,kCAAkC,WAC/E,IAAIsE,EAActE,EAAMlN,MACpBmkB,EAAoB3S,EAAY2S,kBAChC3W,EAAoBgE,EAAYhE,kBAEpCN,EAAMkX,2BAA2B,CAC/Brc,SAAUyF,EACVxF,QAAS,CACPA,QAASmc,EAAkBE,2BAGjC,KAEA/gB,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,6BAA6B,SAAUwB,GACpFxB,EAAMyB,oBAAsBD,CAC9B,KAEApL,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,wCAAwC,WACrF,IAAI+E,EAAe/E,EAAMlN,MACrBmkB,EAAoBlS,EAAakS,kBACjCra,EAASmI,EAAanI,OACtBf,EAAoBkJ,EAAalJ,kBACjCub,EAAerS,EAAaqS,aAC5Bza,EAAQoI,EAAapI,MACrB2J,EAActG,EAAMqC,MACpBc,EAAamD,EAAYnD,WACzBC,EAAYkD,EAAYlD,UAE5B,GAAIgU,GAAgB,EAAG,CACrB,IAAIC,EAAiBJ,EAAkBK,yBAAyB,CAC9D/f,MAAOsE,EACP0b,UAAWH,EACXxa,OAAQA,EACRuG,WAAYA,EACZC,UAAWA,EACXzG,MAAOA,IAGL0a,EAAelU,aAAeA,GAAckU,EAAejU,YAAcA,GAC3EpD,EAAMwX,mBAAmBH,EAE7B,CACF,KAEAjhB,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,aAAa,SAAU0B,GAIpE,GAAIA,EAAM7O,SAAWmN,EAAMyB,oBAA3B,CAKAzB,EAAMyX,iCAMN,IAAIvS,EAAelF,EAAMlN,MACrBmkB,EAAoB/R,EAAa+R,kBACjCra,EAASsI,EAAatI,OACtB8a,EAAoBxS,EAAawS,kBACjC/a,EAAQuI,EAAavI,MACrBP,EAAgB4D,EAAM2X,eAEtBC,EAAwBX,EAAkB7e,eAC1Cyf,EAAcD,EAAsBhb,OACpCkb,EAAaF,EAAsBjb,MAEnCwG,EAAanL,KAAKC,IAAI,EAAGD,KAAKE,IAAI4f,EAAanb,EAAQP,EAAesF,EAAM7O,OAAOsQ,aACnFC,EAAYpL,KAAKC,IAAI,EAAGD,KAAKE,IAAI2f,EAAcjb,EAASR,EAAesF,EAAM7O,OAAOuQ,YAKxF,GAAIpD,EAAMqC,MAAMc,aAAeA,GAAcnD,EAAMqC,MAAMe,YAAcA,EAAW,CAKhF,IAAIC,EAA6B3B,EAAMqW,WAAalY,GAA0CA,GAEzFG,EAAMqC,MAAMjC,aACfsX,GAAkB,GAGpB1X,EAAMG,SAAS,CACbC,aAAa,EACb+C,WAAYA,EACZE,2BAA4BA,EAC5BD,UAAWA,GAEf,CAEApD,EAAM4E,wBAAwB,CAC5BzB,WAAYA,EACZC,UAAWA,EACX0U,WAAYA,EACZD,YAAaA,GAjDf,CAmDF,IAEA7X,EAAM2X,eAAiBhS,SAEM1O,IAAzB+I,EAAM2X,gBACR3X,EAAMgY,wBAAyB,EAC/BhY,EAAM2X,eAAiB,GAEvB3X,EAAMgY,wBAAyB,EAG1BhY,CACT,CAqSA,OAnbA1L,EAAU0iB,EAAgBjX,GAsJ1BvM,EAAawjB,EAAgB,CAAC,CAC5BzjB,IAAK,iCACLoB,MAAO,WACLwB,KAAK8hB,2CAA4C,EACjD9hB,KAAKoP,aACP,GAWC,CACDhS,IAAK,oBACLoB,MAAO,WACL,IAAI+Q,EAAevP,KAAKrD,MACpBmkB,EAAoBvR,EAAauR,kBACjC9T,EAAauC,EAAavC,WAC1BiU,EAAe1R,EAAa0R,aAC5BhU,EAAYsC,EAAatC,UAGxBjN,KAAK6hB,yBACR7hB,KAAKwhB,eAAiBhS,IACtBxP,KAAK6hB,wBAAyB,EAC9B7hB,KAAKgK,SAAS,CAAC,IAGbiX,GAAgB,EAClBjhB,KAAK+hB,wCACI/U,GAAc,GAAKC,GAAa,IACzCjN,KAAKqhB,mBAAmB,CACtBrU,WAAYA,EACZC,UAAWA,IAKfjN,KAAKgiB,iCAEL,IAAIC,EAAyBnB,EAAkB7e,eAC3Cyf,EAAcO,EAAuBxb,OACrCkb,EAAaM,EAAuBzb,MAGxCxG,KAAKyO,wBAAwB,CAC3BzB,WAAYA,GAAc,EAC1BC,UAAWA,GAAa,EACxByU,YAAaA,EACbC,WAAYA,GAEhB,GACC,CACDvkB,IAAK,qBACLoB,MAAO,SAA4BwR,EAAWN,GAC5C,IAAIQ,EAAelQ,KAAKrD,MACpB8J,EAASyJ,EAAazJ,OACtBf,EAAoBwK,EAAaxK,kBACjCub,EAAe/Q,EAAa+Q,aAC5Bza,EAAQ0J,EAAa1J,MACrBsK,EAAe9Q,KAAKkM,MACpBc,EAAa8D,EAAa9D,WAC1BE,EAA6B4D,EAAa5D,2BAC1CD,EAAY6D,EAAa7D,UAMzBC,IAA+BxD,KAC7BsD,GAAc,GAAKA,IAAe0C,EAAU1C,YAAcA,IAAehN,KAAKsL,oBAAoB0B,aACpGhN,KAAKsL,oBAAoB0B,WAAaA,GAGpCC,GAAa,GAAKA,IAAcyC,EAAUzC,WAAaA,IAAcjN,KAAKsL,oBAAoB2B,YAChGjN,KAAKsL,oBAAoB2B,UAAYA,IAKrCxG,IAAWuJ,EAAUvJ,QAAUf,IAAsBsK,EAAUtK,mBAAqBub,IAAiBjR,EAAUiR,cAAgBza,IAAUwJ,EAAUxJ,OACrJxG,KAAK+hB,uCAIP/hB,KAAKgiB,gCACP,GACC,CACD5kB,IAAK,uBACLoB,MAAO,WACDwB,KAAK+J,gCACP/B,aAAahI,KAAK+J,+BAEtB,GACC,CACD3M,IAAK,SACLoB,MAAO,WACL,IAAI6R,EAAerQ,KAAKrD,MACpByR,EAAaiC,EAAajC,WAC1BzP,EAAY0R,EAAa1R,UACzBmiB,EAAoBzQ,EAAayQ,kBACjCvQ,EAAYF,EAAaE,UACzB9J,EAAS4J,EAAa5J,OACtByb,EAAyB7R,EAAa6R,uBACtCna,EAAKsI,EAAatI,GAClB4I,EAAoBN,EAAaM,kBACjCtK,EAAQgK,EAAahK,MACrB8b,EAAuB9R,EAAa8R,qBACpC3b,EAAQ6J,EAAa7J,MACrB4b,EAAepiB,KAAKkM,MACpBjC,EAAcmY,EAAanY,YAC3B+C,EAAaoV,EAAapV,WAC1BC,EAAYmV,EAAanV,WAEzBjN,KAAKqiB,yBAA2B1jB,GAAaqB,KAAKsiB,iCAAmCxB,GAAqB9gB,KAAK8hB,6CACjH9hB,KAAKqiB,uBAAyB1jB,EAC9BqB,KAAKsiB,+BAAiCxB,EACtC9gB,KAAK8hB,2CAA4C,EACjDhB,EAAkByB,gCAGpB,IAAIC,EAAyB1B,EAAkB7e,eAC3Cyf,EAAcc,EAAuB/b,OACrCkb,EAAaa,EAAuBhc,MAGpC+P,EAAO1U,KAAKC,IAAI,EAAGkL,EAAakV,GAChC3b,EAAM1E,KAAKC,IAAI,EAAGmL,EAAYkV,GAC9BM,EAAQ5gB,KAAKE,IAAI4f,EAAY3U,EAAaxG,EAAQ0b,GAClDQ,EAAS7gB,KAAKE,IAAI2f,EAAazU,EAAYxG,EAAS0b,GACpDrQ,EAAoBrL,EAAS,GAAKD,EAAQ,EAAIsa,EAAkB6B,cAAc,CAChFlc,OAAQic,EAASnc,EACjB0D,YAAaA,EACbzD,MAAOic,EAAQlM,EACfqM,EAAGrM,EACHsM,EAAGtc,IACA,GACDuc,EAAkB,CACpB7R,UAAW,aACXC,UAAW,MACXzK,OAAQ2H,EAAa,OAAS3H,EAC9BH,SAAU,WACV6K,wBAAyB,QACzB3K,MAAOA,EACP4K,WAAY,aAKVG,EAAwBmQ,EAAcjb,EAASzG,KAAKwhB,eAAiB,EACrEhQ,EAA0BmQ,EAAanb,EAAQxG,KAAKwhB,eAAiB,EAQzE,OAFAsB,EAAgBlR,UAAY+P,EAAapQ,GAAyB/K,EAAQ,SAAW,OACrFsc,EAAgBjR,UAAY6P,EAAclQ,GAA2B/K,EAAS,SAAW,OAClFwL,EAAAA,cAAoB,MAAO,CAChC5G,IAAKrL,KAAKmS,0BACV,aAAcnS,KAAKrD,MAAM,cACzB4T,WAAW6B,EAAAA,EAAAA,GAAK,+BAAgC7B,GAChDxI,GAAIA,EACJsK,SAAUrS,KAAKsS,UACf1B,KAAM,OACNvK,MAAOiD,GAAc,CAAC,EAAGwZ,EAAiB,CAAC,EAAGzc,GAC9CwK,SAAU,GACTlS,EAAY,GAAKsT,EAAAA,cAAoB,MAAO,CAC7C1B,UAAW,qDACXlK,MAAO,CACLI,OAAQib,EACRlP,UAAWkP,EACXnP,SAAUoP,EACVjb,SAAU,SACV+L,cAAexI,EAAc,OAAS,GACtCzD,MAAOmb,IAER7P,GAAkC,IAAdnT,GAAmBgS,IAC5C,GASC,CACDvT,IAAK,iCACLoB,MAAO,WACL,IAAIyR,EAASjQ,KAETA,KAAK+J,gCACP/B,aAAahI,KAAK+J,gCAGpB/J,KAAK+J,+BAAiCvC,YAAW,YAE/C+Z,EADwBtR,EAAOtT,MAAM4kB,oBACnB,GAClBtR,EAAOlG,+BAAiC,KAExCkG,EAAOjG,SAAS,CACdC,aAAa,GAEjB,GAxXqB,IAyXvB,GACC,CACD7M,IAAK,0BACLoB,MAAO,SAAiCE,GACtC,IAAI6V,EAASvU,KAETgN,EAAatO,EAAKsO,WAClBC,EAAYvO,EAAKuO,UACjByU,EAAchjB,EAAKgjB,YACnBC,EAAajjB,EAAKijB,WAEtB3hB,KAAKwU,kBAAkB,CACrB9P,SAAU,SAAkBrE,GAC1B,IAAI2M,EAAa3M,EAAM2M,WACnBC,EAAY5M,EAAM4M,UAClBwH,EAAeF,EAAO5X,MACtB8J,EAASgO,EAAahO,QAG1B4L,EAFeoC,EAAapC,UAEnB,CACPqC,aAAcjO,EACdK,YAHU2N,EAAajO,MAIvBmO,aAAc+M,EACd1U,WAAYA,EACZC,UAAWA,EACX2H,YAAa+M,GAEjB,EACAhd,QAAS,CACPqI,WAAYA,EACZC,UAAWA,IAGjB,GACC,CACD7P,IAAK,qBACLoB,MAAO,SAA4B0C,GACjC,IAAI8L,EAAa9L,EAAM8L,WACnBC,EAAY/L,EAAM+L,UAClBuB,EAAW,CACbtB,2BAA4BxD,IAG1BsD,GAAc,IAChBwB,EAASxB,WAAaA,GAGpBC,GAAa,IACfuB,EAASvB,UAAYA,IAGnBD,GAAc,GAAKA,IAAehN,KAAKkM,MAAMc,YAAcC,GAAa,GAAKA,IAAcjN,KAAKkM,MAAMe,YACxGjN,KAAKgK,SAASwE,EAElB,IACE,CAAC,CACHpR,IAAK,2BACLoB,MAAO,SAAkC6W,EAAW3F,GAClD,OAA4B,IAAxB2F,EAAU1W,WAA6C,IAAzB+Q,EAAU1C,YAA4C,IAAxB0C,EAAUzC,UAM/DoI,EAAUrI,aAAe0C,EAAU1C,YAAcqI,EAAUpI,YAAcyC,EAAUzC,UACrF,CACLD,WAAoC,MAAxBqI,EAAUrI,WAAqBqI,EAAUrI,WAAa0C,EAAU1C,WAC5EC,UAAkC,MAAvBoI,EAAUpI,UAAoBoI,EAAUpI,UAAYyC,EAAUzC,UACzEC,2BAA4BxD,IAIzB,KAbE,CACLsD,WAAY,EACZC,UAAW,EACXC,2BAA4BxD,GAWlC,KAGKmX,CACT,CArbA,CAqbE5O,EAAAA,gBAEFhS,EAAAA,EAAAA,GAAgB4gB,GAAgB,eAAgB,CAC9C,aAAc,OACdqB,uBAAwB,EACxBvR,kBAAmB,WACjB,OAAO,IACT,EACA0B,SAAU,WACR,OAAO,IACT,EACAlI,kBAAmB,WACjB,OAAO,IACT,EACAzE,kBAAmB,OACnBub,cAAe,EACf5a,MAAO,CAAC,EACR8b,qBAAsB,IAGxBtB,GAAekC,UAgGX,CAAC,GACLrM,EAAAA,EAAAA,UAASmK,IACT,YCplBA,ICSImC,GAEJ,WACE,SAASA,EAAQtkB,GACf,IAAI+H,EAAS/H,EAAK+H,OACdD,EAAQ9H,EAAK8H,MACboc,EAAIlkB,EAAKkkB,EACTC,EAAInkB,EAAKmkB,EAEbxmB,EAAgB2D,KAAMgjB,GAEtBhjB,KAAKyG,OAASA,EACdzG,KAAKwG,MAAQA,EACbxG,KAAK4iB,EAAIA,EACT5iB,KAAK6iB,EAAIA,EACT7iB,KAAKijB,UAAY,CAAC,EAClBjjB,KAAKkjB,SAAW,EAClB,CA+BA,OA3BA7lB,EAAa2lB,EAAS,CAAC,CACrB5lB,IAAK,eACLoB,MAAO,SAAsB6B,GAC3B,IAAIE,EAAQF,EAAME,MAEbP,KAAKijB,UAAU1iB,KAClBP,KAAKijB,UAAU1iB,IAAS,EAExBP,KAAKkjB,SAAS9Z,KAAK7I,GAEvB,GAGC,CACDnD,IAAK,iBACLoB,MAAO,WACL,OAAOwB,KAAKkjB,QACd,GAGC,CACD9lB,IAAK,WACLoB,MAAO,WACL,MAAO,GAAGiC,OAAOT,KAAK4iB,EAAG,KAAKniB,OAAOT,KAAK6iB,EAAG,KAAKpiB,OAAOT,KAAKwG,MAAO,KAAK/F,OAAOT,KAAKyG,OACxF,KAGKuc,CACT,CA/CA,GCKIG,GAEJ,WACE,SAASA,IACP,IAAIC,EAAchnB,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAXlE,IAafC,EAAgB2D,KAAMmjB,GAEtBnjB,KAAKqjB,aAAeD,EACpBpjB,KAAKsjB,cAAgB,GACrBtjB,KAAKujB,UAAY,CAAC,CACpB,CA0GA,OAnGAlmB,EAAa8lB,EAAgB,CAAC,CAC5B/lB,IAAK,iBACLoB,MAAO,SAAwBE,GAC7B,IAAI+H,EAAS/H,EAAK+H,OACdD,EAAQ9H,EAAK8H,MACboc,EAAIlkB,EAAKkkB,EACTC,EAAInkB,EAAKmkB,EACTle,EAAU,CAAC,EAYf,OAXA3E,KAAKwjB,YAAY,CACf/c,OAAQA,EACRD,MAAOA,EACPoc,EAAGA,EACHC,EAAGA,IACFtZ,SAAQ,SAAUka,GACnB,OAAOA,EAAQC,iBAAiBna,SAAQ,SAAUhJ,GAChDoE,EAAQpE,GAASA,CACnB,GACF,IAEOtD,OAAOuC,KAAKmF,GAASgf,KAAI,SAAUpjB,GACxC,OAAOoE,EAAQpE,EACjB,GACF,GAGC,CACDnD,IAAK,kBACLoB,MAAO,SAAyB6B,GAC9B,IAAIE,EAAQF,EAAME,MAClB,OAAOP,KAAKsjB,cAAc/iB,EAC5B,GAGC,CACDnD,IAAK,cACLoB,MAAO,SAAqB0C,GAW1B,IAVA,IAAIuF,EAASvF,EAAMuF,OACfD,EAAQtF,EAAMsF,MACdoc,EAAI1hB,EAAM0hB,EACVC,EAAI3hB,EAAM2hB,EACVe,EAAgB/hB,KAAKY,MAAMmgB,EAAI5iB,KAAKqjB,cACpCQ,EAAehiB,KAAKY,OAAOmgB,EAAIpc,EAAQ,GAAKxG,KAAKqjB,cACjDS,EAAgBjiB,KAAKY,MAAMogB,EAAI7iB,KAAKqjB,cACpCU,EAAeliB,KAAKY,OAAOogB,EAAIpc,EAAS,GAAKzG,KAAKqjB,cAClDW,EAAW,GAENC,EAAWL,EAAeK,GAAYJ,EAAcI,IAC3D,IAAK,IAAIC,EAAWJ,EAAeI,GAAYH,EAAcG,IAAY,CACvE,IAAI9mB,EAAM,GAAGqD,OAAOwjB,EAAU,KAAKxjB,OAAOyjB,GAErClkB,KAAKujB,UAAUnmB,KAClB4C,KAAKujB,UAAUnmB,GAAO,IAAI4lB,GAAQ,CAChCvc,OAAQzG,KAAKqjB,aACb7c,MAAOxG,KAAKqjB,aACZT,EAAGqB,EAAWjkB,KAAKqjB,aACnBR,EAAGqB,EAAWlkB,KAAKqjB,gBAIvBW,EAAS5a,KAAKpJ,KAAKujB,UAAUnmB,GAC/B,CAGF,OAAO4mB,CACT,GAGC,CACD5mB,IAAK,uBACLoB,MAAO,WACL,OAAOvB,OAAOuC,KAAKQ,KAAKujB,WAAWpnB,MACrC,GAGC,CACDiB,IAAK,WACLoB,MAAO,WACL,IAAIqL,EAAQ7J,KAEZ,OAAO/C,OAAOuC,KAAKQ,KAAKujB,WAAWI,KAAI,SAAUpjB,GAC/C,OAAOsJ,EAAM0Z,UAAUhjB,GAAO4jB,UAChC,GACF,GAGC,CACD/mB,IAAK,eACLoB,MAAO,SAAsByF,GAC3B,IAAImgB,EAAgBngB,EAAMmgB,cACtB7jB,EAAQ0D,EAAM1D,MAClBP,KAAKsjB,cAAc/iB,GAAS6jB,EAC5BpkB,KAAKwjB,YAAYY,GAAe7a,SAAQ,SAAUka,GAChD,OAAOA,EAAQY,aAAa,CAC1B9jB,MAAOA,GAEX,GACF,KAGK4iB,CACT,CApHA,GCNe,SAASpf,GAAyBrF,GAC/C,IAAI4lB,EAAa5lB,EAAK0C,MAClBA,OAAuB,IAAfkjB,EAAwB,OAASA,EACzCC,EAAa7lB,EAAK6lB,WAClB3lB,EAAWF,EAAKE,SAChByC,EAAgB3C,EAAK2C,cACrBC,EAAgB5C,EAAK4C,cACrBK,EAAY4iB,EACZ3iB,EAAYD,EAAYN,EAAgBzC,EAE5C,OAAQwC,GACN,IAAK,QACH,OAAOO,EAET,IAAK,MACH,OAAOC,EAET,IAAK,SACH,OAAOD,GAAaN,EAAgBzC,GAAY,EAElD,QACE,OAAOiD,KAAKC,IAAIF,EAAWC,KAAKE,IAAIJ,EAAWL,IAErD,CCjBA,IAAIkjB,GAEJ,SAAU5a,GAGR,SAAS4a,EAAW7nB,EAAO8nB,GACzB,IAAI5a,EAWJ,OATAxN,EAAgB2D,KAAMwkB,IAEtB3a,EAAQpM,EAA2BuC,KAAMnC,EAAgB2mB,GAAY7mB,KAAKqC,KAAMrD,EAAO8nB,KACjFnB,cAAgB,GACtBzZ,EAAM6a,yBAA2B,GAEjC7a,EAAMsF,WAAa,GACnBtF,EAAM8a,mBAAqB9a,EAAM8a,mBAAmB1mB,MAAK6L,EAAAA,EAAAA,GAAuBD,IAChFA,EAAM+a,sBAAwB/a,EAAM+a,sBAAsB3mB,MAAK6L,EAAAA,EAAAA,GAAuBD,IAC/EA,CACT,CA4JA,OA3KA1L,EAAUqmB,EAAY5a,GAiBtBvM,EAAamnB,EAAY,CAAC,CACxBpnB,IAAK,cACLoB,MAAO,gBACwBsC,IAAzBd,KAAK6kB,iBACP7kB,KAAK6kB,gBAAgBzV,aAEzB,GAGC,CACDhS,IAAK,iCACLoB,MAAO,WACLwB,KAAKmP,WAAa,GAElBnP,KAAK6kB,gBAAgBC,gCACvB,GAGC,CACD1nB,IAAK,SACLoB,MAAO,WACL,IAAI7B,GAAQuV,EAAAA,EAAAA,GAAS,CAAC,EAAGlS,KAAKrD,OAE9B,OAAOsV,EAAAA,cAAoB4O,IAAgB3O,EAAAA,EAAAA,GAAS,CAClD4O,kBAAmB9gB,KACnBuhB,kBAAmBvhB,KAAK2kB,mBACxBtZ,IAAKrL,KAAK4kB,uBACTjoB,GACL,GAGC,CACDS,IAAK,+BACLoB,MAAO,WACL,IAAI2P,EAAcnO,KAAKrD,MAKnBooB,EC5EK,SAAsCrmB,GASnD,IARA,IAAIC,EAAYD,EAAKC,UACjBqmB,EAA4BtmB,EAAKsmB,0BACjC5B,EAAc1kB,EAAK0kB,YACnB6B,EAAe,GACfC,EAAiB,IAAI/B,GAAeC,GACpC3c,EAAS,EACTD,EAAQ,EAEHjG,EAAQ,EAAGA,EAAQ5B,EAAW4B,IAAS,CAC9C,IAAI6jB,EAAgBY,EAA0B,CAC5CzkB,MAAOA,IAGT,GAA4B,MAAxB6jB,EAAc3d,QAAkB1F,MAAMqjB,EAAc3d,SAAkC,MAAvB2d,EAAc5d,OAAiBzF,MAAMqjB,EAAc5d,QAA6B,MAAnB4d,EAAcxB,GAAa7hB,MAAMqjB,EAAcxB,IAAyB,MAAnBwB,EAAcvB,GAAa9hB,MAAMqjB,EAAcvB,GAClO,MAAMriB,MAAM,sCAAsCC,OAAOF,EAAO,iBAAiBE,OAAO2jB,EAAcxB,EAAG,QAAQniB,OAAO2jB,EAAcvB,EAAG,YAAYpiB,OAAO2jB,EAAc5d,MAAO,aAAa/F,OAAO2jB,EAAc3d,SAGrNA,EAAS5E,KAAKC,IAAI2E,EAAQ2d,EAAcvB,EAAIuB,EAAc3d,QAC1DD,EAAQ3E,KAAKC,IAAI0E,EAAO4d,EAAcxB,EAAIwB,EAAc5d,OACxDye,EAAa1kB,GAAS6jB,EACtBc,EAAeC,aAAa,CAC1Bf,cAAeA,EACf7jB,MAAOA,GAEX,CAEA,MAAO,CACL0kB,aAAcA,EACdxe,OAAQA,EACRye,eAAgBA,EAChB1e,MAAOA,EAEX,CD2CiB4e,CAA8B,CACvCzmB,UALcwP,EAAYxP,UAM1BqmB,0BAL8B7W,EAAY6W,0BAM1C5B,YALgBjV,EAAYiV,cAQ9BpjB,KAAKsjB,cAAgByB,EAAKE,aAC1BjlB,KAAKqlB,gBAAkBN,EAAKG,eAC5BllB,KAAKslB,QAAUP,EAAKte,OACpBzG,KAAKulB,OAASR,EAAKve,KACrB,GAKC,CACDpJ,IAAK,yBACLoB,MAAO,WACL,OAAOwB,KAAK0kB,wBACd,GAKC,CACDtnB,IAAK,2BACLoB,MAAO,SAAkCE,GACvC,IAAI0C,EAAQ1C,EAAK0C,MACbggB,EAAY1iB,EAAK0iB,UACjB3a,EAAS/H,EAAK+H,OACduG,EAAatO,EAAKsO,WAClBC,EAAYvO,EAAKuO,UACjBzG,EAAQ9H,EAAK8H,MACb7H,EAAYqB,KAAKrD,MAAMgC,UAE3B,GAAIyiB,GAAa,GAAKA,EAAYziB,EAAW,CAC3C,IAAIsmB,EAAejlB,KAAKsjB,cAAclC,GACtCpU,EAAajJ,GAAyB,CACpC3C,MAAOA,EACPmjB,WAAYU,EAAarC,EACzBhkB,SAAUqmB,EAAaze,MACvBnF,cAAemF,EACflF,cAAe0L,EACfzL,YAAa6f,IAEfnU,EAAYlJ,GAAyB,CACnC3C,MAAOA,EACPmjB,WAAYU,EAAapC,EACzBjkB,SAAUqmB,EAAaxe,OACvBpF,cAAeoF,EACfnF,cAAe2L,EACf1L,YAAa6f,GAEjB,CAEA,MAAO,CACLpU,WAAYA,EACZC,UAAWA,EAEf,GACC,CACD7P,IAAK,eACLoB,MAAO,WACL,MAAO,CACLiI,OAAQzG,KAAKslB,QACb9e,MAAOxG,KAAKulB,OAEhB,GACC,CACDnoB,IAAK,gBACLoB,MAAO,SAAuB6B,GAC5B,IAAI4P,EAASjQ,KAETyG,EAASpG,EAAMoG,OACfwD,EAAc5J,EAAM4J,YACpBzD,EAAQnG,EAAMmG,MACdoc,EAAIviB,EAAMuiB,EACVC,EAAIxiB,EAAMwiB,EACVjU,EAAe5O,KAAKrD,MACpB6oB,EAAoB5W,EAAa4W,kBACjC9S,EAAe9D,EAAa8D,aAQhC,OANA1S,KAAK0kB,yBAA2B1kB,KAAKqlB,gBAAgB3B,eAAe,CAClEjd,OAAQA,EACRD,MAAOA,EACPoc,EAAGA,EACHC,EAAGA,IAEE2C,EAAkB,CACvBvR,UAAWjU,KAAKmP,WAChBuD,aAAcA,EACdsS,0BAA2B,SAAmC9jB,GAC5D,IAAIX,EAAQW,EAAMX,MAClB,OAAO0P,EAAOoV,gBAAgBI,gBAAgB,CAC5CllB,MAAOA,GAEX,EACAoE,QAAS3E,KAAK0kB,yBACdza,YAAaA,GAEjB,GACC,CACD7M,IAAK,qBACLoB,MAAO,SAA4ByL,GAC5BA,IACHjK,KAAKmP,WAAa,GAEtB,GACC,CACD/R,IAAK,wBACLoB,MAAO,SAA+B6M,GACpCrL,KAAK6kB,gBAAkBxZ,CACzB,KAGKmZ,CACT,CA7KA,CA6KEvS,EAAAA,gBAEFhS,EAAAA,EAAAA,GAAgBukB,GAAY,eAAgB,CAC1C,aAAc,OACdgB,kBAwCF,SAAkCvhB,GAChC,IAAIgQ,EAAYhQ,EAAMgQ,UAClBvB,EAAezO,EAAMyO,aACrBsS,EAA4B/gB,EAAM+gB,0BAClCrgB,EAAUV,EAAMU,QAChBsF,EAAchG,EAAMgG,YACxB,OAAOtF,EAAQgf,KAAI,SAAUpjB,GAC3B,IAAI0kB,EAAeD,EAA0B,CAC3CzkB,MAAOA,IAELmlB,EAAoB,CACtBnlB,MAAOA,EACP0J,YAAaA,EACb7M,IAAKmD,EACL8F,MAAO,CACLI,OAAQwe,EAAaxe,OACrB8P,KAAM0O,EAAarC,EACnBtc,SAAU,WACVC,IAAK0e,EAAapC,EAClBrc,MAAOye,EAAaze,QAOxB,OAAIyD,GACI1J,KAAS0T,IACbA,EAAU1T,GAASmS,EAAagT,IAG3BzR,EAAU1T,IAEVmS,EAAagT,EAExB,IAAGzc,QAAO,SAAUwN,GAClB,QAASA,CACX,GACF,IA1EA+N,GAAWzB,UAkCP,CAAC,GE7NL,SAAUnZ,GAGR,SAAS+b,EAAYhpB,EAAO8nB,GAC1B,IAAI5a,EAMJ,OAJAxN,EAAgB2D,KAAM2lB,IAEtB9b,EAAQpM,EAA2BuC,KAAMnC,EAAgB8nB,GAAahoB,KAAKqC,KAAMrD,EAAO8nB,KAClFhG,eAAiB5U,EAAM4U,eAAexgB,MAAK6L,EAAAA,EAAAA,GAAuBD,IACjEA,CACT,CAyDA,OAnEA1L,EAAUwnB,EAAa/b,GAYvBvM,EAAasoB,EAAa,CAAC,CACzBvoB,IAAK,qBACLoB,MAAO,SAA4BwR,GACjC,IAAI7B,EAAcnO,KAAKrD,MACnBipB,EAAiBzX,EAAYyX,eAC7BC,EAAiB1X,EAAY0X,eAC7Bna,EAAcyC,EAAYzC,YAC1BlF,EAAQ2H,EAAY3H,MAEpBof,IAAmB5V,EAAU4V,gBAAkBC,IAAmB7V,EAAU6V,gBAAkBna,IAAgBsE,EAAUtE,aAAelF,IAAUwJ,EAAUxJ,OACzJxG,KAAK8lB,kBACP9lB,KAAK8lB,iBAAiBxR,mBAG5B,GACC,CACDlX,IAAK,SACLoB,MAAO,WACL,IAAIoQ,EAAe5O,KAAKrD,MACpB+a,EAAW9I,EAAa8I,SACxBkO,EAAiBhX,EAAagX,eAC9BC,EAAiBjX,EAAaiX,eAC9Bna,EAAckD,EAAalD,YAC3BlF,EAAQoI,EAAapI,MACrBuf,EAAqBF,GAAkB,EACvCG,EAAqBJ,EAAiB/jB,KAAKE,IAAI6jB,EAAgBpf,GAASA,EACxEoF,EAAcpF,EAAQkF,EAK1B,OAJAE,EAAc/J,KAAKC,IAAIikB,EAAoBna,GAC3CA,EAAc/J,KAAKE,IAAIikB,EAAoBpa,GAC3CA,EAAc/J,KAAKY,MAAMmJ,GAElB8L,EAAS,CACduO,cAFkBpkB,KAAKE,IAAIyE,EAAOoF,EAAcF,GAGhDE,YAAaA,EACbsa,eAAgB,WACd,OAAOta,CACT,EACA4S,cAAexe,KAAKye,gBAExB,GACC,CACDrhB,IAAK,iBACLoB,MAAO,SAAwB2nB,GAC7B,GAAIA,GAA4C,oBAA5BA,EAAM7R,kBACxB,MAAM9T,MAAM,iFAGdR,KAAK8lB,iBAAmBK,EAEpBnmB,KAAK8lB,kBACP9lB,KAAK8lB,iBAAiBxR,mBAE1B,KAGKqR,CACT,CArEA,CAqEE1T,EAAAA,gBAGU8Q,UAuBR,CAAC,EC7GU,SAASqD,GAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIlqB,UAAQmqB,EAAMD,EAAIlqB,QAC/C,IAAK,IAAIS,EAAI,EAAG2pB,EAAO,IAAItqB,MAAMqqB,GAAM1pB,EAAI0pB,EAAK1pB,IAAK2pB,EAAK3pB,GAAKypB,EAAIzpB,GACnE,OAAO2pB,CACT,CCHe,SAASC,GAA4B1oB,EAAG2oB,GACrD,GAAK3oB,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,GAAiBA,EAAG2oB,GACtD,IAAIzqB,EAAIiB,OAAOO,UAAU2mB,SAASxmB,KAAKG,GAAG4oB,MAAM,GAAI,GAEpD,MADU,WAAN1qB,GAAkB8B,EAAES,cAAavC,EAAI8B,EAAES,YAAYooB,MAC7C,QAAN3qB,GAAqB,QAANA,EAAoBC,MAAM2qB,KAAK9oB,GACxC,cAAN9B,GAAqB,2CAA2C6qB,KAAK7qB,GAAW,GAAiB8B,EAAG2oB,QAAxG,CALc,CAMhB,CCJe,SAASK,GAAmBT,GACzC,OCJa,SAA4BA,GACzC,GAAIpqB,MAAMC,QAAQmqB,GAAM,OAAO,GAAiBA,EAClD,CDES,CAAkBA,IELZ,SAA0BU,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAO9qB,MAAM2qB,KAAKG,EACtH,CFGmC,CAAgBV,IAAQ,GAA2BA,IGLvE,WACb,MAAM,IAAI7pB,UAAU,uIACtB,CHG8F,EAC9F,CIWA,IAAI0qB,GAEJ,SAAUtd,GAGR,SAASsd,EAAevqB,EAAO8nB,GAC7B,IAAI5a,EAQJ,OANAxN,EAAgB2D,KAAMknB,IAEtBrd,EAAQpM,EAA2BuC,KAAMnC,EAAgBqpB,GAAgBvpB,KAAKqC,KAAMrD,EAAO8nB,KACrF0C,sBAAwB5iB,IAC9BsF,EAAMud,gBAAkBvd,EAAMud,gBAAgBnpB,MAAK6L,EAAAA,EAAAA,GAAuBD,IAC1EA,EAAM4U,eAAiB5U,EAAM4U,eAAexgB,MAAK6L,EAAAA,EAAAA,GAAuBD,IACjEA,CACT,CAkGA,OA9GA1L,EAAU+oB,EAAgBtd,GAc1BvM,EAAa6pB,EAAgB,CAAC,CAC5B9pB,IAAK,yBACLoB,MAAO,SAAgC6oB,GACrCrnB,KAAKmnB,sBAAwB5iB,IAEzB8iB,GACFrnB,KAAKsnB,SAAStnB,KAAKunB,wBAAyBvnB,KAAKwnB,uBAErD,GACC,CACDpqB,IAAK,SACLoB,MAAO,WAEL,OAAOkZ,EADQ1X,KAAKrD,MAAM+a,UACV,CACd+P,eAAgBznB,KAAKonB,gBACrB5I,cAAexe,KAAKye,gBAExB,GACC,CACDrhB,IAAK,sBACLoB,MAAO,SAA6BkpB,GAClC,IAAIzX,EAASjQ,KAET2nB,EAAe3nB,KAAKrD,MAAMgrB,aAC9BD,EAAene,SAAQ,SAAUqe,GAC/B,IAAIC,EAAUF,EAAaC,GAEvBC,GACFA,EAAQpf,MAAK,YA8HhB,SAAwBxE,GAC7B,IAAI6jB,EAAyB7jB,EAAM6jB,uBAC/BC,EAAwB9jB,EAAM8jB,sBAC9BtU,EAAaxP,EAAMwP,WACnBC,EAAYzP,EAAMyP,UACtB,QAASD,EAAasU,GAAyBrU,EAAYoU,EAC7D,EAjIgBE,CAAe,CACjBF,uBAAwB7X,EAAOsX,wBAC/BQ,sBAAuB9X,EAAOuX,uBAC9B/T,WAAYmU,EAAcnU,WAC1BC,UAAWkU,EAAclU,aAErBzD,EAAO6V,kBAmNlB,SAA8CmC,GACnD,IAAIC,EAAe9rB,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EACnF+rB,EAAuD,oBAAhCF,EAAU3T,kBAAmC2T,EAAU3T,kBAAoB2T,EAAUG,oBAE5GD,EACFA,EAAcxqB,KAAKsqB,EAAWC,GAE9BD,EAAU7Y,aAEd,CA3NgBiZ,CAAqCpY,EAAO6V,iBAAkB7V,EAAOsX,wBAG3E,GAEJ,GACF,GACC,CACDnqB,IAAK,kBACLoB,MAAO,SAAyBE,GAC9B,IAAI+U,EAAa/U,EAAK+U,WAClBC,EAAYhV,EAAKgV,UACrB1T,KAAKunB,wBAA0B9T,EAC/BzT,KAAKwnB,uBAAyB9T,EAE9B1T,KAAKsnB,SAAS7T,EAAYC,EAC5B,GACC,CACDtW,IAAK,WACLoB,MAAO,SAAkBiV,EAAYC,GACnC,IAAIrT,EACAkU,EAASvU,KAETmO,EAAcnO,KAAKrD,MACnB2rB,EAAcna,EAAYma,YAC1BC,EAAmBpa,EAAYoa,iBAC/Bxc,EAAWoC,EAAYpC,SACvByc,EAAYra,EAAYqa,UACxBd,EAmGH,SAA+BtjB,GAUpC,IATA,IAAIkkB,EAAclkB,EAAMkkB,YACpBC,EAAmBnkB,EAAMmkB,iBACzBxc,EAAW3H,EAAM2H,SACjB0H,EAAarP,EAAMqP,WACnBC,EAAYtP,EAAMsP,UAClBgU,EAAiB,GACjBe,EAAkB,KAClBC,EAAiB,KAEZnoB,EAAQkT,EAAYlT,GAASmT,EAAWnT,IAAS,CAC3C+nB,EAAY,CACvB/nB,MAAOA,IASqB,OAAnBmoB,IACThB,EAAete,KAAK,CAClBqK,WAAYgV,EACZ/U,UAAWgV,IAEbD,EAAkBC,EAAiB,OAVnCA,EAAiBnoB,EAEO,OAApBkoB,IACFA,EAAkBloB,GASxB,CAIA,GAAuB,OAAnBmoB,EAAyB,CAG3B,IAFA,IAAIC,EAAqB9mB,KAAKE,IAAIF,KAAKC,IAAI4mB,EAAgBD,EAAkBF,EAAmB,GAAIxc,EAAW,GAEtG6c,EAASF,EAAiB,EAAGE,GAAUD,IACzCL,EAAY,CACf/nB,MAAOqoB,IAFyDA,IAIhEF,EAAiBE,EAMrBlB,EAAete,KAAK,CAClBqK,WAAYgV,EACZ/U,UAAWgV,GAEf,CAIA,GAAIhB,EAAevrB,OAGjB,IAFA,IAAI0sB,EAAqBnB,EAAe,GAEjCmB,EAAmBnV,UAAYmV,EAAmBpV,WAAa,EAAI8U,GAAoBM,EAAmBpV,WAAa,GAAG,CAC/H,IAAIqV,EAAUD,EAAmBpV,WAAa,EAE9C,GAAK6U,EAAY,CACf/nB,MAAOuoB,IAIP,MAFAD,EAAmBpV,WAAaqV,CAIpC,CAGF,OAAOpB,CACT,CAzK2BqB,CAAsB,CACzCT,YAAaA,EACbC,iBAAkBA,EAClBxc,SAAUA,EACV0H,WAAY5R,KAAKC,IAAI,EAAG2R,EAAa+U,GACrC9U,UAAW7R,KAAKE,IAAIgK,EAAW,EAAG2H,EAAY8U,KAG5CQ,GAA0B3oB,EAAQ,IAAII,OAAO4I,MAAMhJ,EAAOymB,GAAmBY,EAAe/D,KAAI,SAAUziB,GAG5G,MAAO,CAFUA,EAAMuS,WACPvS,EAAMwS,UAExB,MAEA1T,KAAKmnB,sBAAsB,CACzBziB,SAAU,WACR6P,EAAO0U,oBAAoBvB,EAC7B,EACA/iB,QAAS,CACPqkB,uBAAwBA,IAG9B,GACC,CACD5rB,IAAK,iBACLoB,MAAO,SAAwB0qB,GAC7BlpB,KAAK8lB,iBAAmBoD,CAC1B,KAGKhC,CACT,CAhHA,CAgHEjV,EAAAA,gBAMFhS,EAAAA,EAAAA,GAAgBinB,GAAgB,eAAgB,CAC9CqB,iBAAkB,GAClBxc,SAAU,EACVyc,UAAW,KAIbtB,GAAenE,UA2CX,CAAC,EC1LL,ICQI/b,GAAQC,GAcRkiB,IAAQliB,GAAQD,GAEpB,SAAU4C,GAGR,SAASuf,IACP,IAAItS,EAEAhN,EAEJxN,EAAgB2D,KAAMmpB,GAEtB,IAAK,IAAIrS,EAAO1a,UAAUD,OAAQ4a,EAAO,IAAI9a,MAAM6a,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ5a,UAAU4a,GAoEzB,OAjEAnN,EAAQpM,EAA2BuC,MAAO6W,EAAmBhZ,EAAgBsrB,IAAOxrB,KAAK0L,MAAMwN,EAAkB,CAAC7W,MAAMS,OAAOsW,MAE/H9W,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,YAAQ,IAEvD5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,iBAAiB,SAAUnL,GACxE,IAAIwV,EAASxV,EAAKwV,OACdtG,EAAWlP,EAAKkP,SAChBvH,EAAQ3H,EAAK2H,MACb4D,EAAcvL,EAAKuL,YACnBqM,EAAY5X,EAAK4X,UACjBlZ,EAAMsB,EAAKtB,IACXgsB,EAAcvf,EAAMlN,MAAMysB,YAM1BC,EAAkBpsB,OAAOkM,yBAAyB9C,EAAO,SAQ7D,OANIgjB,GAAmBA,EAAgBrsB,WAGrCqJ,EAAMG,MAAQ,QAGT4iB,EAAY,CACjB7oB,MAAOqN,EACPvH,MAAOA,EACP4D,YAAaA,EACbqM,UAAWA,EACXlZ,IAAKA,EACL8W,OAAQA,GAEZ,KAEAjU,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,WAAW,SAAUwB,GAClExB,EAAMF,KAAO0B,CACf,KAEApL,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,aAAa,SAAUxJ,GACpE,IAAIqU,EAAerU,EAAMqU,aACrBC,EAAetU,EAAMsU,aACrB1H,EAAY5M,EAAM4M,WAEtBoF,EADexI,EAAMlN,MAAM0V,UAClB,CACPqC,aAAcA,EACdC,aAAcA,EACd1H,UAAWA,GAEf,KAEAhN,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,sBAAsB,SAAU3I,GAC7E,IAAI2J,EAAwB3J,EAAM2J,sBAC9BE,EAAuB7J,EAAM6J,qBAC7BE,EAAgB/J,EAAM+J,cACtBE,EAAejK,EAAMiK,cAEzBsc,EADqB5d,EAAMlN,MAAM8qB,gBAClB,CACb7T,mBAAoB/I,EACpBgJ,kBAAmB9I,EACnB0I,WAAYxI,EACZyI,UAAWvI,GAEf,IAEOtB,CACT,CAyIA,OAxNA1L,EAAUgrB,EAAMvf,GAiFhBvM,EAAa8rB,EAAM,CAAC,CAClB/rB,IAAK,kBACLoB,MAAO,WACDwB,KAAK2J,MACP3J,KAAK2J,KAAKyF,aAEd,GAGC,CACDhS,IAAK,kBACLoB,MAAO,SAAyByF,GAC9B,IAAIuJ,EAAYvJ,EAAMuJ,UAClBjN,EAAQ0D,EAAM1D,MAElB,OAAIP,KAAK2J,KACqB3J,KAAK2J,KAAK2f,iBAAiB,CACrD9b,UAAWA,EACXI,SAAUrN,EACVmN,YAAa,IAEuBT,UAKjC,CACT,GAGC,CACD7P,IAAK,gCACLoB,MAAO,SAAuC4F,GAC5C,IAAIsJ,EAActJ,EAAMsJ,YACpBE,EAAWxJ,EAAMwJ,SAEjB5N,KAAK2J,MACP3J,KAAK2J,KAAKuV,8BAA8B,CACtCtR,SAAUA,EACVF,YAAaA,GAGnB,GAGC,CACDtQ,IAAK,iBACLoB,MAAO,WACDwB,KAAK2J,MACP3J,KAAK2J,KAAK4f,iBAEd,GAGC,CACDnsB,IAAK,oBACLoB,MAAO,WACL,IAAI6F,EAAQjI,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC7EotB,EAAoBnlB,EAAMqJ,YAC1BA,OAAoC,IAAtB8b,EAA+B,EAAIA,EACjDC,EAAiBplB,EAAMuJ,SACvBA,OAA8B,IAAnB6b,EAA4B,EAAIA,EAE3CzpB,KAAK2J,MACP3J,KAAK2J,KAAK2K,kBAAkB,CAC1B1G,SAAUA,EACVF,YAAaA,GAGnB,GAGC,CACDtQ,IAAK,sBACLoB,MAAO,WACL,IAAI+B,EAAQnE,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EAE5E4D,KAAK2J,MACP3J,KAAK2J,KAAK2K,kBAAkB,CAC1B1G,SAAUrN,EACVmN,YAAa,GAGnB,GAGC,CACDtQ,IAAK,mBACLoB,MAAO,WACL,IAAIyO,EAAY7Q,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EAEhF4D,KAAK2J,MACP3J,KAAK2J,KAAK+f,iBAAiB,CACzBzc,UAAWA,GAGjB,GAGC,CACD7P,IAAK,cACLoB,MAAO,WACL,IAAI+B,EAAQnE,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EAE5E4D,KAAK2J,MACP3J,KAAK2J,KAAKsX,aAAa,CACrBvT,YAAa,EACbE,SAAUrN,GAGhB,GACC,CACDnD,IAAK,SACLoB,MAAO,WACL,IAAI2P,EAAcnO,KAAKrD,MACnB4T,EAAYpC,EAAYoC,UACxBoZ,EAAiBxb,EAAYwb,eAC7BzqB,EAAgBiP,EAAYjP,cAC5BsH,EAAQ2H,EAAY3H,MACpBojB,GAAaxX,EAAAA,EAAAA,GAAK,yBAA0B7B,GAChD,OAAO0B,EAAAA,cAAoBtI,GAAMuI,EAAAA,EAAAA,GAAS,CAAC,EAAGlS,KAAKrD,MAAO,CACxD2T,oBAAoB,EACpBoC,aAAc1S,KAAK6pB,cACnBtZ,UAAWqZ,EACXhe,YAAapF,EACbkF,YAAa,EACbiF,kBAAmBgZ,EACnBtX,SAAUrS,KAAKsS,UACfnI,kBAAmBnK,KAAK8X,mBACxBzM,IAAKrL,KAAKud,QACV3Q,YAAa1N,IAEjB,KAGKiqB,CACT,CA1NA,CA0NElX,EAAAA,gBAAsBhS,EAAAA,EAAAA,GAAgB+G,GAAQ,YAAqD,MA8EjGC,IC7TW,SAAS6iB,GAAezD,EAAKzpB,GAC1C,OCLa,SAAyBypB,GACtC,GAAIpqB,MAAMC,QAAQmqB,GAAM,OAAOA,CACjC,CDGS,CAAeA,IELT,SAA+BzqB,EAAGmuB,GAC/C,IAAIjuB,EAAI,MAAQF,EAAI,KAAO,oBAAsBorB,QAAUprB,EAAEorB,OAAOC,WAAarrB,EAAE,cACnF,GAAI,MAAQE,EAAG,CACb,IAAID,EACFG,EACAY,EACAotB,EACAC,EAAI,GACJluB,GAAI,EACJ+B,GAAI,EACN,IACE,GAAIlB,GAAKd,EAAIA,EAAE6B,KAAK/B,IAAIsuB,KAAM,IAAMH,EAAG,CACrC,GAAI9sB,OAAOnB,KAAOA,EAAG,OACrBC,GAAI,CACN,MAAO,OAASA,GAAKF,EAAIe,EAAEe,KAAK7B,IAAIquB,QAAUF,EAAE7gB,KAAKvN,EAAE2C,OAAQyrB,EAAE9tB,SAAW4tB,GAAIhuB,GAAI,GACtF,CAAE,MAAOH,GACPkC,GAAI,EAAI9B,EAAIJ,CACd,CAAE,QACA,IACE,IAAKG,GAAK,MAAQD,EAAU,SAAMkuB,EAAIluB,EAAU,SAAKmB,OAAO+sB,KAAOA,GAAI,MACzE,CAAE,QACA,GAAIlsB,EAAG,MAAM9B,CACf,CACF,CACA,OAAOiuB,CACT,CACF,CFrBgC,CAAqB5D,EAAKzpB,IAAM,GAA2BypB,EAAKzpB,IGLjF,WACb,MAAM,IAAIJ,UAAU,4IACtB,CHGsG,EACtG,ED6TAyD,EAAAA,EAAAA,GAAgBkpB,GAAM,eAAgB,CACpC/a,YAAY,EACZsH,iBAAkB,GAClBrD,SAAU,WAAqB,EAC/BsX,eAAgB,WACd,OAAO,IACT,EACAlC,eAAgB,WAA2B,EAC3C3U,sBAAuBsX,EACvBrX,iBAAkB,GAClBrN,kBAAmB,OACnBxG,eAAgB,EAChBmH,MAAO,CAAC,IKxGV,UACEgkB,GA5LF,SAA2BJ,EAAGpH,EAAGyH,EAAGP,EAAGQ,GACrC,MAAiB,oBAAND,EAnBb,SAAcL,EAAGF,EAAGQ,EAAG1H,EAAGyH,GAGxB,IAFA,IAAI1tB,EAAI2tB,EAAI,EAELR,GAAKQ,GAAG,CACb,IAAIC,EAAIT,EAAIQ,IAAM,EAGdD,EAFIL,EAAEO,GAED3H,IAAM,GACbjmB,EAAI4tB,EACJD,EAAIC,EAAI,GAERT,EAAIS,EAAI,CAEZ,CAEA,OAAO5tB,CACT,CAIW6tB,CAAKR,OAAS,IAANF,EAAe,EAAQ,EAAJA,OAAa,IAANQ,EAAeN,EAAE9tB,OAAS,EAAQ,EAAJouB,EAAO1H,EAAGyH,GAtCrF,SAAcL,EAAGF,EAAGQ,EAAG1H,GAGrB,IAFA,IAAIjmB,EAAI2tB,EAAI,EAELR,GAAKQ,GAAG,CACb,IAAIC,EAAIT,EAAIQ,IAAM,EACVN,EAAEO,IAED3H,GACPjmB,EAAI4tB,EACJD,EAAIC,EAAI,GAERT,EAAIS,EAAI,CAEZ,CAEA,OAAO5tB,CACT,CAwBW8tB,CAAKT,OAAS,IAANK,EAAe,EAAQ,EAAJA,OAAa,IAANP,EAAeE,EAAE9tB,OAAS,EAAQ,EAAJ4tB,EAAOlH,EAElF,EAuLE8H,GAjJF,SAA2BV,EAAGpH,EAAGyH,EAAGP,EAAGQ,GACrC,MAAiB,oBAAND,EAnBb,SAAcL,EAAGF,EAAGQ,EAAG1H,EAAGyH,GAGxB,IAFA,IAAI1tB,EAAI2tB,EAAI,EAELR,GAAKQ,GAAG,CACb,IAAIC,EAAIT,EAAIQ,IAAM,EAGdD,EAFIL,EAAEO,GAED3H,GAAK,GACZjmB,EAAI4tB,EACJD,EAAIC,EAAI,GAERT,EAAIS,EAAI,CAEZ,CAEA,OAAO5tB,CACT,CAIWguB,CAAKX,OAAS,IAANF,EAAe,EAAQ,EAAJA,OAAa,IAANQ,EAAeN,EAAE9tB,OAAS,EAAQ,EAAJouB,EAAO1H,EAAGyH,GAtCrF,SAAcL,EAAGF,EAAGQ,EAAG1H,GAGrB,IAFA,IAAIjmB,EAAI2tB,EAAI,EAELR,GAAKQ,GAAG,CACb,IAAIC,EAAIT,EAAIQ,IAAM,EACVN,EAAEO,GAEF3H,GACNjmB,EAAI4tB,EACJD,EAAIC,EAAI,GAERT,EAAIS,EAAI,CAEZ,CAEA,OAAO5tB,CACT,CAwBWiuB,CAAKZ,OAAS,IAANK,EAAe,EAAQ,EAAJA,OAAa,IAANP,EAAeE,EAAE9tB,OAAS,EAAQ,EAAJ4tB,EAAOlH,EAElF,EA4IEiI,GAtGF,SAA2Bb,EAAGpH,EAAGyH,EAAGP,EAAGQ,GACrC,MAAiB,oBAAND,EAnBb,SAAcL,EAAGF,EAAGQ,EAAG1H,EAAGyH,GAGxB,IAFA,IAAI1tB,EAAImtB,EAAI,EAELA,GAAKQ,GAAG,CACb,IAAIC,EAAIT,EAAIQ,IAAM,EAGdD,EAFIL,EAAEO,GAED3H,GAAK,GACZjmB,EAAI4tB,EACJT,EAAIS,EAAI,GAERD,EAAIC,EAAI,CAEZ,CAEA,OAAO5tB,CACT,CAIWmuB,CAAKd,OAAS,IAANF,EAAe,EAAQ,EAAJA,OAAa,IAANQ,EAAeN,EAAE9tB,OAAS,EAAQ,EAAJouB,EAAO1H,EAAGyH,GAtCrF,SAAcL,EAAGF,EAAGQ,EAAG1H,GAGrB,IAFA,IAAIjmB,EAAImtB,EAAI,EAELA,GAAKQ,GAAG,CACb,IAAIC,EAAIT,EAAIQ,IAAM,EACVN,EAAEO,GAEF3H,GACNjmB,EAAI4tB,EACJT,EAAIS,EAAI,GAERD,EAAIC,EAAI,CAEZ,CAEA,OAAO5tB,CACT,CAwBWouB,CAAKf,OAAS,IAANK,EAAe,EAAQ,EAAJA,OAAa,IAANP,EAAeE,EAAE9tB,OAAS,EAAQ,EAAJ4tB,EAAOlH,EAElF,EAiGEoI,GA3DF,SAA2BhB,EAAGpH,EAAGyH,EAAGP,EAAGQ,GACrC,MAAiB,oBAAND,EAnBb,SAAcL,EAAGF,EAAGQ,EAAG1H,EAAGyH,GAGxB,IAFA,IAAI1tB,EAAImtB,EAAI,EAELA,GAAKQ,GAAG,CACb,IAAIC,EAAIT,EAAIQ,IAAM,EAGdD,EAFIL,EAAEO,GAED3H,IAAM,GACbjmB,EAAI4tB,EACJT,EAAIS,EAAI,GAERD,EAAIC,EAAI,CAEZ,CAEA,OAAO5tB,CACT,CAIWsuB,CAAKjB,OAAS,IAANF,EAAe,EAAQ,EAAJA,OAAa,IAANQ,EAAeN,EAAE9tB,OAAS,EAAQ,EAAJouB,EAAO1H,EAAGyH,GAtCrF,SAAcL,EAAGF,EAAGQ,EAAG1H,GAGrB,IAFA,IAAIjmB,EAAImtB,EAAI,EAELA,GAAKQ,GAAG,CACb,IAAIC,EAAIT,EAAIQ,IAAM,EACVN,EAAEO,IAED3H,GACPjmB,EAAI4tB,EACJT,EAAIS,EAAI,GAERD,EAAIC,EAAI,CAEZ,CAEA,OAAO5tB,CACT,CAwBWuuB,CAAKlB,OAAS,IAANK,EAAe,EAAQ,EAAJA,OAAa,IAANP,EAAeE,EAAE9tB,OAAS,EAAQ,EAAJ4tB,EAAOlH,EAElF,EAsDEuI,GAbF,SAA2BnB,EAAGpH,EAAGyH,EAAGP,EAAGQ,GACrC,MAAiB,oBAAND,EArBb,SAAcL,EAAGF,EAAGQ,EAAG1H,EAAGyH,GAGxB,KAAOP,GAAKQ,GAAG,CACb,IAAIC,EAAIT,EAAIQ,IAAM,EAEdc,EAAIf,EADAL,EAAEO,GACG3H,GAEb,GAAU,IAANwI,EACF,OAAOb,EACEa,GAAK,EACdtB,EAAIS,EAAI,EAERD,EAAIC,EAAI,CAEZ,CAEA,OAAQ,CACV,CAIWc,CAAKrB,OAAS,IAANF,EAAe,EAAQ,EAAJA,OAAa,IAANQ,EAAeN,EAAE9tB,OAAS,EAAQ,EAAJouB,EAAO1H,EAAGyH,GAzCrF,SAAcL,EAAGF,EAAGQ,EAAG1H,GAGrB,KAAOkH,GAAKQ,GAAG,CACb,IAAIC,EAAIT,EAAIQ,IAAM,EACd3H,EAAIqH,EAAEO,GAEV,GAAI5H,IAAMC,EACR,OAAO2H,EACE5H,GAAKC,EACdkH,EAAIS,EAAI,EAERD,EAAIC,EAAI,CAEZ,CAEA,OAAQ,CACV,CA0BWe,CAAKtB,OAAS,IAANK,EAAe,EAAQ,EAAJA,OAAa,IAANP,EAAeE,EAAE9tB,OAAS,EAAQ,EAAJ4tB,EAAOlH,EAElF,GCxNA,SAAS2I,GAAiBC,EAAKlV,EAAMkM,EAAOiJ,EAAYC,GACtD3rB,KAAKyrB,IAAMA,EACXzrB,KAAKuW,KAAOA,EACZvW,KAAKyiB,MAAQA,EACbziB,KAAK0rB,WAAaA,EAClB1rB,KAAK2rB,YAAcA,EACnB3rB,KAAK4rB,OAASrV,EAAOA,EAAKqV,MAAQ,IAAMnJ,EAAQA,EAAMmJ,MAAQ,GAAKF,EAAWvvB,MAChF,CAEA,IAAI0vB,GAAQL,GAAiBhuB,UAE7B,SAASsuB,GAAK7B,EAAG8B,GACf9B,EAAEwB,IAAMM,EAAEN,IACVxB,EAAE1T,KAAOwV,EAAExV,KACX0T,EAAExH,MAAQsJ,EAAEtJ,MACZwH,EAAEyB,WAAaK,EAAEL,WACjBzB,EAAE0B,YAAcI,EAAEJ,YAClB1B,EAAE2B,MAAQG,EAAEH,KACd,CAEA,SAASI,GAAQtN,EAAMuN,GACrB,IAAIC,EAAQC,GAAmBF,GAC/BvN,EAAK+M,IAAMS,EAAMT,IACjB/M,EAAKnI,KAAO2V,EAAM3V,KAClBmI,EAAK+D,MAAQyJ,EAAMzJ,MACnB/D,EAAKgN,WAAaQ,EAAMR,WACxBhN,EAAKiN,YAAcO,EAAMP,YACzBjN,EAAKkN,MAAQM,EAAMN,KACrB,CAEA,SAASQ,GAAoB1N,EAAMhc,GACjC,IAAIupB,EAAYvN,EAAKuN,UAAU,IAC/BA,EAAU7iB,KAAK1G,GACfspB,GAAQtN,EAAMuN,EAChB,CAEA,SAASI,GAAuB3N,EAAMhc,GACpC,IAAIupB,EAAYvN,EAAKuN,UAAU,IAC3BK,EAAML,EAAUxsB,QAAQiD,GAE5B,OAAI4pB,EAAM,EA5CI,GAgDdL,EAAUpQ,OAAOyQ,EAAK,GACtBN,GAAQtN,EAAMuN,GAhDF,EAkDd,CAgKA,SAASM,GAAgBlG,EAAKmG,EAAIC,GAChC,IAAK,IAAI7vB,EAAI,EAAGA,EAAIypB,EAAIlqB,QAAUkqB,EAAIzpB,GAAG,IAAM4vB,IAAM5vB,EAAG,CACtD,IAAIhB,EAAI6wB,EAAGpG,EAAIzpB,IAEf,GAAIhB,EACF,OAAOA,CAEX,CACF,CAEA,SAAS8wB,GAAiBrG,EAAKsG,EAAIF,GACjC,IAAK,IAAI7vB,EAAIypB,EAAIlqB,OAAS,EAAGS,GAAK,GAAKypB,EAAIzpB,GAAG,IAAM+vB,IAAM/vB,EAAG,CAC3D,IAAIhB,EAAI6wB,EAAGpG,EAAIzpB,IAEf,GAAIhB,EACF,OAAOA,CAEX,CACF,CAEA,SAASgxB,GAAYvG,EAAKoG,GACxB,IAAK,IAAI7vB,EAAI,EAAGA,EAAIypB,EAAIlqB,SAAUS,EAAG,CACnC,IAAIhB,EAAI6wB,EAAGpG,EAAIzpB,IAEf,GAAIhB,EACF,OAAOA,CAEX,CACF,CAsDA,SAASixB,GAAe5C,EAAG8B,GACzB,OAAO9B,EAAI8B,CACb,CAEA,SAASe,GAAa7C,EAAG8B,GACvB,IAAIgB,EAAI9C,EAAE,GAAK8B,EAAE,GAEjB,OAAIgB,GAIG9C,EAAE,GAAK8B,EAAE,EAClB,CAEA,SAASiB,GAAW/C,EAAG8B,GACrB,IAAIgB,EAAI9C,EAAE,GAAK8B,EAAE,GAEjB,OAAIgB,GAIG9C,EAAE,GAAK8B,EAAE,EAClB,CAEA,SAASI,GAAmBF,GAC1B,GAAyB,IAArBA,EAAU9vB,OACZ,OAAO,KAKT,IAFA,IAAI8wB,EAAM,GAEDrwB,EAAI,EAAGA,EAAIqvB,EAAU9vB,SAAUS,EACtCqwB,EAAI7jB,KAAK6iB,EAAUrvB,GAAG,GAAIqvB,EAAUrvB,GAAG,IAGzCqwB,EAAIC,KAAKL,IACT,IAAIpB,EAAMwB,EAAIA,EAAI9wB,QAAU,GACxBgxB,EAAgB,GAChBC,EAAiB,GACjBC,EAAkB,GAEtB,IAASzwB,EAAI,EAAGA,EAAIqvB,EAAU9vB,SAAUS,EAAG,CACzC,IAAI0wB,EAAIrB,EAAUrvB,GAEd0wB,EAAE,GAAK7B,EACT0B,EAAc/jB,KAAKkkB,GACV7B,EAAM6B,EAAE,GACjBF,EAAehkB,KAAKkkB,GAEpBD,EAAgBjkB,KAAKkkB,EAEzB,CAGA,IAAI5B,EAAa2B,EACb1B,EAAc0B,EAAgB3G,QAGlC,OAFAgF,EAAWwB,KAAKJ,IAChBnB,EAAYuB,KAAKF,IACV,IAAIxB,GAAiBC,EAAKU,GAAmBgB,GAAgBhB,GAAmBiB,GAAiB1B,EAAYC,EACtH,CAGA,SAAS4B,GAAaC,GACpBxtB,KAAKwtB,KAAOA,CACd,CAhTA3B,GAAMI,UAAY,SAAUwB,GAW1B,OAVAA,EAAOrkB,KAAKC,MAAMokB,EAAQztB,KAAK0rB,YAE3B1rB,KAAKuW,MACPvW,KAAKuW,KAAK0V,UAAUwB,GAGlBztB,KAAKyiB,OACPziB,KAAKyiB,MAAMwJ,UAAUwB,GAGhBA,CACT,EAEA5B,GAAM6B,OAAS,SAAUhrB,GACvB,IAAIirB,EAAS3tB,KAAK4rB,MAAQ5rB,KAAK0rB,WAAWvvB,OAG1C,GAFA6D,KAAK4rB,OAAS,EAEVlpB,EAAS,GAAK1C,KAAKyrB,IACjBzrB,KAAKuW,KACH,GAAKvW,KAAKuW,KAAKqV,MAAQ,GAAK,GAAK+B,EAAS,GAC5CvB,GAAoBpsB,KAAM0C,GAE1B1C,KAAKuW,KAAKmX,OAAOhrB,GAGnB1C,KAAKuW,KAAO4V,GAAmB,CAACzpB,SAE7B,GAAIA,EAAS,GAAK1C,KAAKyrB,IACxBzrB,KAAKyiB,MACH,GAAKziB,KAAKyiB,MAAMmJ,MAAQ,GAAK,GAAK+B,EAAS,GAC7CvB,GAAoBpsB,KAAM0C,GAE1B1C,KAAKyiB,MAAMiL,OAAOhrB,GAGpB1C,KAAKyiB,MAAQ0J,GAAmB,CAACzpB,QAE9B,CACL,IAAIqnB,EAAI6D,GAAOvD,GAAGrqB,KAAK0rB,WAAYhpB,EAAUoqB,IACzClxB,EAAIgyB,GAAOvD,GAAGrqB,KAAK2rB,YAAajpB,EAAUsqB,IAC9ChtB,KAAK0rB,WAAW7P,OAAOkO,EAAG,EAAGrnB,GAC7B1C,KAAK2rB,YAAY9P,OAAOjgB,EAAG,EAAG8G,EAChC,CACF,EAEAmpB,GAAMgC,OAAS,SAAUnrB,GACvB,IAAIirB,EAAS3tB,KAAK4rB,MAAQ5rB,KAAK0rB,WAE/B,GAAIhpB,EAAS,GAAK1C,KAAKyrB,IACrB,OAAKzrB,KAAKuW,KAMN,GAFKvW,KAAKyiB,MAAQziB,KAAKyiB,MAAMmJ,MAAQ,GAE5B,GAAK+B,EAAS,GAClBtB,GAAuBrsB,KAAM0C,GA5G9B,KA+GJ9G,EAAIoE,KAAKuW,KAAKsX,OAAOnrB,KAGvB1C,KAAKuW,KAAO,KACZvW,KAAK4rB,OAAS,EApHN,QAsHChwB,IACToE,KAAK4rB,OAAS,GAGThwB,GA3HK,EA4HP,GAAI8G,EAAS,GAAK1C,KAAKyrB,IAC5B,OAAKzrB,KAAKyiB,MAMN,GAFKziB,KAAKuW,KAAOvW,KAAKuW,KAAKqV,MAAQ,GAE1B,GAAK+B,EAAS,GAClBtB,GAAuBrsB,KAAM0C,GAlI9B,KAqIJ9G,EAAIoE,KAAKyiB,MAAMoL,OAAOnrB,KAGxB1C,KAAKyiB,MAAQ,KACbziB,KAAK4rB,OAAS,EA1IN,QA4IChwB,IACToE,KAAK4rB,OAAS,GAGThwB,GAjJK,EAmJZ,GAAmB,IAAfoE,KAAK4rB,MACP,OAAI5rB,KAAK0rB,WAAW,KAAOhpB,EAlJrB,EAFI,EA2JZ,GAA+B,IAA3B1C,KAAK0rB,WAAWvvB,QAAgB6D,KAAK0rB,WAAW,KAAOhpB,EAAU,CACnE,GAAI1C,KAAKuW,MAAQvW,KAAKyiB,MAAO,CAI3B,IAHA,IAAI4I,EAAIrrB,KACJhE,EAAIgE,KAAKuW,KAENva,EAAEymB,OACP4I,EAAIrvB,EACJA,EAAIA,EAAEymB,MAGR,GAAI4I,IAAMrrB,KACRhE,EAAEymB,MAAQziB,KAAKyiB,UACV,CACL,IAAIsH,EAAI/pB,KAAKuW,KACT3a,EAAIoE,KAAKyiB,MACb4I,EAAEO,OAAS5vB,EAAE4vB,MACbP,EAAE5I,MAAQzmB,EAAEua,KACZva,EAAEua,KAAOwT,EACT/tB,EAAEymB,MAAQ7mB,CACZ,CAEAkwB,GAAK9rB,KAAMhE,GACXgE,KAAK4rB,OAAS5rB,KAAKuW,KAAOvW,KAAKuW,KAAKqV,MAAQ,IAAM5rB,KAAKyiB,MAAQziB,KAAKyiB,MAAMmJ,MAAQ,GAAK5rB,KAAK0rB,WAAWvvB,MACzG,MAAW6D,KAAKuW,KACduV,GAAK9rB,KAAMA,KAAKuW,MAEhBuV,GAAK9rB,KAAMA,KAAKyiB,OAGlB,OAvLQ,CAwLV,CAEA,IAASsH,EAAI6D,GAAOvD,GAAGrqB,KAAK0rB,WAAYhpB,EAAUoqB,IAAe/C,EAAI/pB,KAAK0rB,WAAWvvB,QAC/E6D,KAAK0rB,WAAW3B,GAAG,KAAOrnB,EAAS,KADsDqnB,EAK7F,GAAI/pB,KAAK0rB,WAAW3B,KAAOrnB,EAAU,CACnC1C,KAAK4rB,OAAS,EACd5rB,KAAK0rB,WAAW7P,OAAOkO,EAAG,GAE1B,IAASnuB,EAAIgyB,GAAOvD,GAAGrqB,KAAK2rB,YAAajpB,EAAUsqB,IAAapxB,EAAIoE,KAAK2rB,YAAYxvB,QAC/E6D,KAAK2rB,YAAY/vB,GAAG,KAAO8G,EAAS,KADqD9G,EAGtF,GAAIoE,KAAK2rB,YAAY/vB,KAAO8G,EAEjC,OADA1C,KAAK2rB,YAAY9P,OAAOjgB,EAAG,GAvMzB,CA2MR,CAGF,OA/MY,CAiNhB,EAgCAiwB,GAAMiC,WAAa,SAAUlL,EAAG6J,GAC9B,GAAI7J,EAAI5iB,KAAKyrB,IAAK,CAChB,GAAIzrB,KAAKuW,KAGP,GAFI3a,EAAIoE,KAAKuW,KAAKuX,WAAWlL,EAAG6J,GAG9B,OAAO7wB,EAIX,OAAO2wB,GAAgBvsB,KAAK0rB,WAAY9I,EAAG6J,EAC7C,CAAO,GAAI7J,EAAI5iB,KAAKyrB,IAAK,CAErB,IAAI7vB,EADN,GAAIoE,KAAKyiB,MAGP,GAFI7mB,EAAIoE,KAAKyiB,MAAMqL,WAAWlL,EAAG6J,GAG/B,OAAO7wB,EAIX,OAAO8wB,GAAiB1sB,KAAK2rB,YAAa/I,EAAG6J,EAC/C,CACE,OAAOG,GAAY5sB,KAAK0rB,WAAYe,EAExC,EAEAZ,GAAMkC,cAAgB,SAAUpB,EAAIH,EAAIC,GAEpC,IAQI7wB,EATN,GAAI+wB,EAAK3sB,KAAKyrB,KAAOzrB,KAAKuW,OACpB3a,EAAIoE,KAAKuW,KAAKwX,cAAcpB,EAAIH,EAAIC,IAGtC,OAAO7wB,EAIX,GAAI4wB,EAAKxsB,KAAKyrB,KAAOzrB,KAAKyiB,QACpB7mB,EAAIoE,KAAKyiB,MAAMsL,cAAcpB,EAAIH,EAAIC,IAGvC,OAAO7wB,EAIX,OAAI4wB,EAAKxsB,KAAKyrB,IACLc,GAAgBvsB,KAAK0rB,WAAYc,EAAIC,GACnCE,EAAK3sB,KAAKyrB,IACZiB,GAAiB1sB,KAAK2rB,YAAagB,EAAIF,GAEvCG,GAAY5sB,KAAK0rB,WAAYe,EAExC,EAoEA,IAAIuB,GAAST,GAAa/vB,UAE1BwwB,GAAON,OAAS,SAAUhrB,GACpB1C,KAAKwtB,KACPxtB,KAAKwtB,KAAKE,OAAOhrB,GAEjB1C,KAAKwtB,KAAO,IAAIhC,GAAiB9oB,EAAS,GAAI,KAAM,KAAM,CAACA,GAAW,CAACA,GAE3E,EAEAsrB,GAAOH,OAAS,SAAUnrB,GACxB,GAAI1C,KAAKwtB,KAAM,CACb,IAAI5xB,EAAIoE,KAAKwtB,KAAKK,OAAOnrB,GAMzB,OAvXQ,IAmXJ9G,IACFoE,KAAKwtB,KAAO,MAtXF,IAyXL5xB,CACT,CAEA,OAAO,CACT,EAEAoyB,GAAOF,WAAa,SAAUzC,EAAGoB,GAC/B,GAAIzsB,KAAKwtB,KACP,OAAOxtB,KAAKwtB,KAAKM,WAAWzC,EAAGoB,EAEnC,EAEAuB,GAAOD,cAAgB,SAAUpB,EAAIH,EAAIC,GACvC,GAAIE,GAAMH,GAAMxsB,KAAKwtB,KACnB,OAAOxtB,KAAKwtB,KAAKO,cAAcpB,EAAIH,EAAIC,EAE3C,EAEAxvB,OAAOC,eAAe8wB,GAAQ,QAAS,CACrCpN,IAAK,WACH,OAAI5gB,KAAKwtB,KACAxtB,KAAKwtB,KAAK5B,MAGZ,CACT,IAEF3uB,OAAOC,eAAe8wB,GAAQ,YAAa,CACzCpN,IAAK,WACH,OAAI5gB,KAAKwtB,KACAxtB,KAAKwtB,KAAKvB,UAAU,IAGtB,EACT,IC3ZF,ICDIjlB,GAAQC,GDCRgnB,GAEJ,WACE,SAASA,ID0ZI,IAAuBhC,ECzZlC5vB,EAAgB2D,KAAMiuB,IAEtBhuB,EAAAA,EAAAA,GAAgBD,KAAM,iBAAkB,CAAC,IAEzCC,EAAAA,EAAAA,GAAgBD,KAAM,gBDsZnBisB,GAAkC,IAArBA,EAAU9vB,OAIrB,IAAIoxB,GAAapB,GAAmBF,IAHlC,IAAIsB,GAAa,QCrZxBttB,EAAAA,EAAAA,GAAgBD,KAAM,WAAY,CAAC,EACrC,CAuEA,OArEA3C,EAAa4wB,EAAe,CAAC,CAC3B7wB,IAAK,sBACLoB,MAAO,SAA6BG,EAAW+M,EAAawiB,GAC1D,IAAIC,EAAsBxvB,EAAYqB,KAAK4rB,MAC3C,OAAO5rB,KAAKouB,kBAAoBvsB,KAAKid,KAAKqP,EAAsBziB,GAAewiB,CACjF,GAEC,CACD9wB,IAAK,QACLoB,MAAO,SAAeyO,EAAWyH,EAAc2Z,GAC7C,IAAIxkB,EAAQ7J,KAEZA,KAAKsuB,cAAcP,cAAc9gB,EAAWA,EAAYyH,GAAc,SAAUhW,GAC9E,IAAI2B,EAAQypB,GAAeprB,EAAM,GAC7B6H,EAAMlG,EAAM,GAEZE,GADIF,EAAM,GACFA,EAAM,IAElB,OAAOguB,EAAe9tB,EAAOsJ,EAAM0kB,SAAShuB,GAAQgG,EACtD,GACF,GACC,CACDnJ,IAAK,cACLoB,MAAO,SAAqB+B,EAAOgW,EAAMhQ,EAAKE,GAC5CzG,KAAKsuB,cAAcZ,OAAO,CAACnnB,EAAKA,EAAME,EAAQlG,IAE9CP,KAAKuuB,SAAShuB,GAASgW,EACvB,IAAIiY,EAAgBxuB,KAAKyuB,eACrBC,EAAeF,EAAcjY,GAG/BiY,EAAcjY,QADKzV,IAAjB4tB,EACoBnoB,EAAME,EAEN5E,KAAKC,IAAI4sB,EAAcnoB,EAAME,EAEvD,GACC,CACDrJ,IAAK,QACLwjB,IAAK,WACH,OAAO5gB,KAAKsuB,cAAc1C,KAC5B,GACC,CACDxuB,IAAK,qBACLwjB,IAAK,WACH,IAAI4N,EAAgBxuB,KAAKyuB,eACrB5tB,EAAO,EAEX,IAAK,IAAIjE,KAAK4xB,EAAe,CAC3B,IAAI/nB,EAAS+nB,EAAc5xB,GAC3BiE,EAAgB,IAATA,EAAa4F,EAAS5E,KAAKE,IAAIlB,EAAM4F,EAC9C,CAEA,OAAO5F,CACT,GACC,CACDzD,IAAK,oBACLwjB,IAAK,WACH,IAAI4N,EAAgBxuB,KAAKyuB,eACrB5tB,EAAO,EAEX,IAAK,IAAIjE,KAAK4xB,EAAe,CAC3B,IAAI/nB,EAAS+nB,EAAc5xB,GAC3BiE,EAAOgB,KAAKC,IAAIjB,EAAM4F,EACxB,CAEA,OAAO5F,CACT,KAGKotB,CACT,CAjFA,GCDA,SAASplB,GAAQC,EAAQC,GAAkB,IAAIvJ,EAAOvC,OAAOuC,KAAKsJ,GAAS,GAAI7L,OAAOyC,sBAAuB,CAAE,IAAIsJ,EAAU/L,OAAOyC,sBAAsBoJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOjM,OAAOkM,yBAAyBL,EAAQI,GAAKpM,UAAY,KAAI0C,EAAK4J,KAAKC,MAAM7J,EAAMwJ,EAAU,CAAE,OAAOxJ,CAAM,CAEpV,SAAS8J,GAAc5M,GAAU,IAAK,IAAIE,EAAI,EAAGA,EAAIR,UAAUD,OAAQS,IAAK,CAAE,IAAIyC,EAAyB,MAAhBjD,UAAUQ,GAAaR,UAAUQ,GAAK,CAAC,EAAOA,EAAI,EAAKiM,GAAQxJ,GAAQ,GAAMkK,SAAQ,SAAUnM,IAAO6C,EAAAA,EAAAA,GAAgBvD,EAAQU,EAAKiC,EAAOjC,GAAO,IAAeH,OAAOuM,0BAA6BvM,OAAOwM,iBAAiB/M,EAAQO,OAAOuM,0BAA0BnK,IAAmBwJ,GAAQxJ,GAAQkK,SAAQ,SAAUnM,GAAOH,OAAOC,eAAeR,EAAQU,EAAKH,OAAOkM,yBAAyB9J,EAAQjC,GAAO,GAAM,CAAE,OAAOV,CAAQ,CAOrgB,IAoCIiyB,IAAW1nB,GAAQD,GAEvB,SAAU4C,GAGR,SAAS+kB,IACP,IAAI9X,EAEAhN,EAEJxN,EAAgB2D,KAAM2uB,GAEtB,IAAK,IAAI7X,EAAO1a,UAAUD,OAAQ4a,EAAO,IAAI9a,MAAM6a,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ5a,UAAU4a,GAiEzB,OA9DAnN,EAAQpM,EAA2BuC,MAAO6W,EAAmBhZ,EAAgB8wB,IAAUhxB,KAAK0L,MAAMwN,EAAkB,CAAC7W,MAAMS,OAAOsW,MAElI9W,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,QAAS,CACtDI,aAAa,EACbgD,UAAW,KAGbhN,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,mCAA+B,IAE9E5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,gCAAiC,OAEhF5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,+BAAgC,OAE/E5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,iBAAkB,IAAIokB,KAErEhuB,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,cAAe,OAE9D5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,sBAAuB,OAEtE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,aAAc,OAE7D5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,qBAAsB,OAErE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,qCAAqC,WAClFA,EAAMG,SAAS,CACbC,aAAa,GAEjB,KAEAhK,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,6BAA6B,SAAUwB,GACpFxB,EAAMyB,oBAAsBD,CAC9B,KAEApL,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,aAAa,SAAU0B,GACpE,IAAI9E,EAASoD,EAAMlN,MAAM8J,OACrBmoB,EAAiBrjB,EAAMsjB,cAAc5hB,UAKrCA,EAAYpL,KAAKE,IAAIF,KAAKC,IAAI,EAAG+H,EAAMilB,2BAA6BroB,GAASmoB,GAG7EA,IAAmB3hB,IAKvBpD,EAAMklB,4BAMFllB,EAAMqC,MAAMe,YAAcA,GAC5BpD,EAAMG,SAAS,CACbC,aAAa,EACbgD,UAAWA,IAGjB,IAEOpD,CACT,CAqQA,OAjVA1L,EAAUwwB,EAAS/kB,GA8EnBvM,EAAasxB,EAAS,CAAC,CACrBvxB,IAAK,qBACLoB,MAAO,WACLwB,KAAKgvB,eAAiB,IAAIf,GAC1BjuB,KAAKoP,aACP,GAEC,CACDhS,IAAK,gCACLoB,MAAO,SAAuCE,GAC5C,IAAI6B,EAAQ7B,EAAKkP,SAE0B,OAAvC5N,KAAKivB,+BACPjvB,KAAKivB,8BAAgC1uB,EACrCP,KAAKkvB,6BAA+B3uB,IAEpCP,KAAKivB,8BAAgCptB,KAAKE,IAAI/B,KAAKivB,8BAA+B1uB,GAClFP,KAAKkvB,6BAA+BrtB,KAAKC,IAAI9B,KAAKkvB,6BAA8B3uB,GAEpF,GACC,CACDnD,IAAK,yBACLoB,MAAO,WACL,IAAIkV,EAAY1T,KAAKgvB,eAAepD,MAAQ,EAC5C5rB,KAAKgvB,eAAiB,IAAIf,GAE1BjuB,KAAKmvB,uBAAuB,EAAGzb,GAE/B1T,KAAKoP,aACP,GACC,CACDhS,IAAK,oBACLoB,MAAO,WACLwB,KAAKovB,2BAELpvB,KAAKqvB,0BAELrvB,KAAKsvB,gCACP,GACC,CACDlyB,IAAK,qBACLoB,MAAO,SAA4BwR,EAAWN,GAC5C1P,KAAKovB,2BAELpvB,KAAKqvB,0BAELrvB,KAAKsvB,iCAEDtvB,KAAKrD,MAAMsQ,YAAc+C,EAAU/C,WACrCjN,KAAK+uB,2BAET,GACC,CACD3xB,IAAK,uBACLoB,MAAO,WACDwB,KAAKuvB,6BACPpnB,EAAuBnI,KAAKuvB,4BAEhC,GACC,CACDnyB,IAAK,SACLoB,MAAO,WACL,IA2BIkV,EA3BAzD,EAASjQ,KAETmO,EAAcnO,KAAKrD,MACnByR,EAAaD,EAAYC,WACzBzP,EAAYwP,EAAYxP,UACxB6wB,EAAoBrhB,EAAYqhB,kBAChC9c,EAAevE,EAAYuE,aAC3BnC,EAAYpC,EAAYoC,UACxB9J,EAAS0H,EAAY1H,OACrBsB,EAAKoG,EAAYpG,GACjB4X,EAAYxR,EAAYwR,UACxB8P,EAAmBthB,EAAYshB,iBAC/B7e,EAAOzC,EAAYyC,KACnBvK,EAAQ8H,EAAY9H,MACpBwK,EAAW1C,EAAY0C,SACvBrK,EAAQ2H,EAAY3H,MACpBkpB,EAAevhB,EAAYuhB,aAC3Bvf,EAAcnQ,KAAKkM,MACnBjC,EAAckG,EAAYlG,YAC1BgD,EAAYkD,EAAYlD,UACxByK,EAAW,GAEXiY,EAAsB3vB,KAAK8uB,2BAE3Bc,EAAqB5vB,KAAKgvB,eAAeY,mBACzCC,EAAoB7vB,KAAKgvB,eAAepD,MACxCnY,EAAa,EA0BjB,GAvBAzT,KAAKgvB,eAAec,MAAMjuB,KAAKC,IAAI,EAAGmL,EAAYwiB,GAAmBhpB,EAA4B,EAAnBgpB,GAAsB,SAAUlvB,EAAOgW,EAAMhQ,GACzH,IAAIwpB,EAEqB,qBAAdrc,GACTD,EAAalT,EACbmT,EAAYnT,IAEZkT,EAAa5R,KAAKE,IAAI0R,EAAYlT,GAClCmT,EAAY7R,KAAKC,IAAI4R,EAAWnT,IAGlCmX,EAAStO,KAAKsJ,EAAa,CACzBnS,MAAOA,EACP0J,YAAaA,EACb7M,IAAKuiB,EAAUpf,GACf2T,OAAQjE,EACR5J,OAAQ0pB,EAAS,CACftpB,OAAQ+oB,EAAkB1R,UAAUvd,KACnCN,EAAAA,EAAAA,GAAgB8vB,EAAyB,QAAjBL,EAAyB,OAAS,QAASnZ,IAAOtW,EAAAA,EAAAA,GAAgB8vB,EAAQ,WAAY,aAAa9vB,EAAAA,EAAAA,GAAgB8vB,EAAQ,MAAOxpB,IAAMtG,EAAAA,EAAAA,GAAgB8vB,EAAQ,QAASP,EAAkBzR,SAASxd,IAASwvB,KAE5O,IAGIH,EAAqB3iB,EAAYxG,EAASgpB,GAAoBI,EAAoBlxB,EAGpF,IAFA,IAAIqxB,EAAYnuB,KAAKE,IAAIpD,EAAYkxB,EAAmBhuB,KAAKid,MAAM7R,EAAYxG,EAASgpB,EAAmBG,GAAsBJ,EAAkBvT,cAAgBzV,EAAQgpB,EAAkBtT,eAEpL0M,EAASiH,EAAmBjH,EAASiH,EAAoBG,EAAWpH,IAC3ElV,EAAYkV,EACZlR,EAAStO,KAAKsJ,EAAa,CACzBnS,MAAOqoB,EACP3e,YAAaA,EACb7M,IAAKuiB,EAAUiJ,GACf1U,OAAQlU,KACRqG,MAAO,CACLG,MAAOgpB,EAAkBzR,SAAS6K,OAQ1C,OAFA5oB,KAAKiwB,YAAcxc,EACnBzT,KAAKkwB,WAAaxc,EACXzB,EAAAA,cAAoB,MAAO,CAChC5G,IAAKrL,KAAKmS,0BACV,aAAcnS,KAAKrD,MAAM,cACzB4T,WAAW6B,EAAAA,EAAAA,GAAK,4BAA6B7B,GAC7CxI,GAAIA,EACJsK,SAAUrS,KAAKsS,UACf1B,KAAMA,EACNvK,MAAOiD,GAAc,CACnB2H,UAAW,aACXC,UAAW,MACXzK,OAAQ2H,EAAa,OAAS3H,EAC9BmL,UAAW,SACXC,UAAW8d,EAAsBlpB,EAAS,SAAW,OACrDH,SAAU,WACVE,MAAOA,EACP2K,wBAAyB,QACzBC,WAAY,aACX/K,GACHwK,SAAUA,GACToB,EAAAA,cAAoB,MAAO,CAC5B1B,UAAW,kDACXlK,MAAO,CACLG,MAAO,OACPC,OAAQkpB,EACRpd,SAAU,OACVC,UAAWmd,EACXjpB,SAAU,SACV+L,cAAexI,EAAc,OAAS,GACtC3D,SAAU,aAEXoR,GACL,GACC,CACDta,IAAK,2BACLoB,MAAO,WACL,GAAkD,kBAAvCwB,KAAKivB,8BAA4C,CAC1D,IAAIxb,EAAazT,KAAKivB,8BAClBvb,EAAY1T,KAAKkvB,6BACrBlvB,KAAKivB,8BAAgC,KACrCjvB,KAAKkvB,6BAA+B,KAEpClvB,KAAKmvB,uBAAuB1b,EAAYC,GAExC1T,KAAKoP,aACP,CACF,GACC,CACDhS,IAAK,4BACLoB,MAAO,WACL,IAAI4V,EAA6BpU,KAAKrD,MAAMyX,2BAExCpU,KAAKuvB,6BACPpnB,EAAuBnI,KAAKuvB,6BAG9BvvB,KAAKuvB,4BAA8BlnB,EAAwBrI,KAAKmwB,kCAAmC/b,EACrG,GACC,CACDhX,IAAK,2BACLoB,MAAO,WACL,IAAIoQ,EAAe5O,KAAKrD,MACpBgC,EAAYiQ,EAAajQ,UACzB6wB,EAAoB5gB,EAAa4gB,kBACjChpB,EAAQoI,EAAapI,MACrB4pB,EAAuBvuB,KAAKC,IAAI,EAAGD,KAAKY,MAAM+D,EAAQgpB,EAAkBtT,eAC5E,OAAOlc,KAAKgvB,eAAeW,oBAAoBhxB,EAAWyxB,EAAsBZ,EAAkBvT,cACpG,GACC,CACD7e,IAAK,0BACLoB,MAAO,WACL,IAAIuQ,EAAe/O,KAAKrD,MACpB8J,EAASsI,EAAatI,OACtB4L,EAAWtD,EAAasD,SACxBpF,EAAYjN,KAAKkM,MAAMe,UAEvBjN,KAAKqwB,oBAAsBpjB,IAC7BoF,EAAS,CACPqC,aAAcjO,EACdkO,aAAc3U,KAAK8uB,2BACnB7hB,UAAWA,IAEbjN,KAAKqwB,kBAAoBpjB,EAE7B,GACC,CACD7P,IAAK,iCACLoB,MAAO,WACDwB,KAAKswB,sBAAwBtwB,KAAKiwB,aAAejwB,KAAKuwB,qBAAuBvwB,KAAKkwB,cAEpFM,EADsBxwB,KAAKrD,MAAM6zB,iBACjB,CACd/c,WAAYzT,KAAKiwB,YACjBvc,UAAW1T,KAAKkwB,aAElBlwB,KAAKswB,oBAAsBtwB,KAAKiwB,YAChCjwB,KAAKuwB,mBAAqBvwB,KAAKkwB,WAEnC,GACC,CACD9yB,IAAK,yBACLoB,MAAO,SAAgCiV,EAAYC,GAKjD,IAJA,IAAInE,EAAevP,KAAKrD,MACpB6yB,EAAoBjgB,EAAaigB,kBACjCiB,EAAiBlhB,EAAakhB,eAEzB3H,EAAUrV,EAAYqV,GAAWpV,EAAWoV,IAAW,CAC9D,IAAI4H,EAAkBD,EAAe3H,GACjCvS,EAAOma,EAAgBna,KACvBhQ,EAAMmqB,EAAgBnqB,IAE1BvG,KAAKgvB,eAAe2B,YAAY7H,EAASvS,EAAMhQ,EAAKipB,EAAkB1R,UAAUgL,GAClF,CACF,IACE,CAAC,CACH1rB,IAAK,2BACLoB,MAAO,SAAkC6W,EAAW3F,GAClD,YAA4B5O,IAAxBuU,EAAUpI,WAA2ByC,EAAUzC,YAAcoI,EAAUpI,UAClE,CACLhD,aAAa,EACbgD,UAAWoI,EAAUpI,WAIlB,IACT,KAGK0hB,CACT,CAnVA,CAmVE1c,EAAAA,gBAAsBhS,EAAAA,EAAAA,GAAgB+G,GAAQ,YAAqD,MAoCjGC,IAmBJ,SAAS2pB,KAAQ,EAjBjB3wB,EAAAA,EAAAA,GAAgB0uB,GAAS,eAAgB,CACvCvgB,YAAY,EACZuR,UAWF,SAAkBnhB,GAChB,OAAOA,CACT,EAZEgyB,gBAAiBI,GACjBve,SAAUue,GACVnB,iBAAkB,GAClB7e,KAAM,OACNwD,2BAhaiD,IAiajD/N,MAvagB,CAAC,EAwajBwK,SAAU,EACV6e,aAAc,SAehBhZ,EAAAA,EAAAA,UAASiY,ICncT,IAAIkC,GAEJ,WACE,SAASA,IACP,IAAIhnB,EAAQ7J,KAERkC,EAAS9F,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAElFC,EAAgB2D,KAAM6wB,IAEtB5wB,EAAAA,EAAAA,GAAgBD,KAAM,0BAAsB,IAE5CC,EAAAA,EAAAA,GAAgBD,KAAM,0BAAsB,IAE5CC,EAAAA,EAAAA,GAAgBD,KAAM,uBAAmB,IAEzCC,EAAAA,EAAAA,GAAgBD,KAAM,eAAe,SAAUtB,GAC7C,IAAI6B,EAAQ7B,EAAK6B,MAEjBsJ,EAAMinB,mBAAmBllB,YAAY,CACnCrL,MAAOA,EAAQsJ,EAAMknB,oBAEzB,KAEA9wB,EAAAA,EAAAA,GAAgBD,KAAM,aAAa,SAAUK,GAC3C,IAAIE,EAAQF,EAAME,MAElBsJ,EAAMinB,mBAAmB9kB,UAAU,CACjCzL,MAAOA,EAAQsJ,EAAMmnB,iBAEzB,IAEA,IAAIxB,EAAoBttB,EAAOstB,kBAC3ByB,EAAwB/uB,EAAOgvB,kBAC/BA,OAA8C,IAA1BD,EAAmC,EAAIA,EAC3DE,EAAwBjvB,EAAOkvB,eAC/BA,OAA2C,IAA1BD,EAAmC,EAAIA,EAC5DnxB,KAAK8wB,mBAAqBtB,EAC1BxvB,KAAK+wB,mBAAqBG,EAC1BlxB,KAAKgxB,gBAAkBI,CACzB,CAyDA,OAvDA/zB,EAAawzB,EAA4B,CAAC,CACxCzzB,IAAK,QACLoB,MAAO,SAAeoP,EAAUF,GAC9B1N,KAAK8wB,mBAAmBO,MAAMzjB,EAAW5N,KAAKgxB,gBAAiBtjB,EAAc1N,KAAK+wB,mBACpF,GACC,CACD3zB,IAAK,WACLoB,MAAO,WACLwB,KAAK8wB,mBAAmBQ,UAC1B,GACC,CACDl0B,IAAK,iBACLoB,MAAO,WACL,OAAOwB,KAAK8wB,mBAAmBhd,gBACjC,GACC,CACD1W,IAAK,gBACLoB,MAAO,WACL,OAAOwB,KAAK8wB,mBAAmB9c,eACjC,GACC,CACD5W,IAAK,YACLoB,MAAO,SAAmBoP,GACxB,IAAIF,EAActR,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAO4D,KAAK8wB,mBAAmBhT,UAAUlQ,EAAW5N,KAAKgxB,gBAAiBtjB,EAAc1N,KAAK+wB,mBAC/F,GACC,CACD3zB,IAAK,WACLoB,MAAO,SAAkBoP,GACvB,IAAIF,EAActR,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAO4D,KAAK8wB,mBAAmB/S,SAASnQ,EAAW5N,KAAKgxB,gBAAiBtjB,EAAc1N,KAAK+wB,mBAC9F,GACC,CACD3zB,IAAK,MACLoB,MAAO,SAAaoP,GAClB,IAAIF,EAActR,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAO4D,KAAK8wB,mBAAmB/c,IAAInG,EAAW5N,KAAKgxB,gBAAiBtjB,EAAc1N,KAAK+wB,mBACzF,GACC,CACD3zB,IAAK,MACLoB,MAAO,SAAaoP,EAAUF,EAAalH,EAAOC,GAChDzG,KAAK8wB,mBAAmB9S,IAAIpQ,EAAW5N,KAAKgxB,gBAAiBtjB,EAAc1N,KAAK+wB,mBAAoBvqB,EAAOC,EAC7G,GACC,CACDrJ,IAAK,gBACLwjB,IAAK,WACH,OAAO5gB,KAAK8wB,mBAAmB7U,aACjC,GACC,CACD7e,IAAK,eACLwjB,IAAK,WACH,OAAO5gB,KAAK8wB,mBAAmB5U,YACjC,KAGK2U,CACT,CAhGA,GCAA,SAAShoB,GAAQC,EAAQC,GAAkB,IAAIvJ,EAAOvC,OAAOuC,KAAKsJ,GAAS,GAAI7L,OAAOyC,sBAAuB,CAAE,IAAIsJ,EAAU/L,OAAOyC,sBAAsBoJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOjM,OAAOkM,yBAAyBL,EAAQI,GAAKpM,UAAY,KAAI0C,EAAK4J,KAAKC,MAAM7J,EAAMwJ,EAAU,CAAE,OAAOxJ,CAAM,CAEpV,SAAS8J,GAAc5M,GAAU,IAAK,IAAIE,EAAI,EAAGA,EAAIR,UAAUD,OAAQS,IAAK,CAAE,IAAIyC,EAAyB,MAAhBjD,UAAUQ,GAAaR,UAAUQ,GAAK,CAAC,EAAOA,EAAI,EAAKiM,GAAQxJ,GAAQ,GAAMkK,SAAQ,SAAUnM,IAAO6C,EAAAA,EAAAA,GAAgBvD,EAAQU,EAAKiC,EAAOjC,GAAO,IAAeH,OAAOuM,0BAA6BvM,OAAOwM,iBAAiB/M,EAAQO,OAAOuM,0BAA0BnK,IAAmBwJ,GAAQxJ,GAAQkK,SAAQ,SAAUnM,GAAOH,OAAOC,eAAeR,EAAQU,EAAKH,OAAOkM,yBAAyB9J,EAAQjC,GAAO,GAAM,CAAE,OAAOV,CAAQ,CAOrgB,IASI60B,GAEJ,SAAU3nB,GAGR,SAAS2nB,EAAU50B,EAAO8nB,GACxB,IAAI5a,EAEJxN,EAAgB2D,KAAMuxB,GAEtB1nB,EAAQpM,EAA2BuC,KAAMnC,EAAgB0zB,GAAW5zB,KAAKqC,KAAMrD,EAAO8nB,KAEtFxkB,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,QAAS,CACtDmD,WAAY,EACZC,UAAW,EACXhH,cAAe,EACfurB,yBAAyB,EACzBC,uBAAuB,KAGzBxxB,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,iCAAkC,OAEjF5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,8BAA+B,OAE9E5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,sBAAsB,SAAUwB,GAC7ExB,EAAM6nB,gBAAkBrmB,CAC1B,KAEApL,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,uBAAuB,SAAUwB,GAC9ExB,EAAM8nB,iBAAmBtmB,CAC3B,KAEApL,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,+BAA+B,SAAUnL,GACtF,IAAIkP,EAAWlP,EAAKkP,SAChBgkB,EAAOxyB,EAAyBV,EAAM,CAAC,aAEvCyP,EAActE,EAAMlN,MACpB+V,EAAevE,EAAYuE,aAC3Bmf,EAAgB1jB,EAAY0jB,cAGhC,OAAIjkB,IAFWO,EAAYpC,SAEC8lB,EACnB5f,EAAAA,cAAoB,MAAO,CAChC7U,IAAKw0B,EAAKx0B,IACViJ,MAAOiD,GAAc,CAAC,EAAGsoB,EAAKvrB,MAAO,CACnCI,OAtDgB,OA0DbiM,EAAapJ,GAAc,CAAC,EAAGsoB,EAAM,CAC1C1d,QAAQpK,EAAAA,EAAAA,GAAuBD,GAC/B+D,SAAUA,EAAWikB,IAG3B,KAEA5xB,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,gCAAgC,SAAUxJ,GACvF,IAAIqN,EAAcrN,EAAMqN,YACpBE,EAAWvN,EAAMuN,SACjBgkB,EAAOxyB,EAAyBiB,EAAO,CAAC,cAAe,aAEvDuO,EAAe/E,EAAMlN,MACrB+V,EAAe9D,EAAa8D,aAC5Bof,EAAmBljB,EAAakjB,iBAChCD,EAAgBjjB,EAAaijB,cACjC,OAAOnf,EAAapJ,GAAc,CAAC,EAAGsoB,EAAM,CAC1ClkB,YAAaA,EAAcokB,EAC3B5d,QAAQpK,EAAAA,EAAAA,GAAuBD,GAC/B+D,SAAUA,EAAWikB,IAEzB,KAEA5xB,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,6BAA6B,SAAU3I,GACpF,IAAIwM,EAAcxM,EAAMwM,YACpBkkB,EAAOxyB,EAAyB8B,EAAO,CAAC,gBAExC6N,EAAelF,EAAMlN,MACrB+V,EAAe3D,EAAa2D,aAC5BhH,EAAcqD,EAAarD,YAC3BomB,EAAmB/iB,EAAa+iB,iBAEpC,OAAIpkB,IAAgBhC,EAAcomB,EACzB7f,EAAAA,cAAoB,MAAO,CAChC7U,IAAKw0B,EAAKx0B,IACViJ,MAAOiD,GAAc,CAAC,EAAGsoB,EAAKvrB,MAAO,CACnCG,MA9FgB,OAkGbkM,EAAapJ,GAAc,CAAC,EAAGsoB,EAAM,CAC1ClkB,YAAaA,EAAcokB,EAC3B5d,QAAQpK,EAAAA,EAAAA,GAAuBD,KAGrC,KAEA5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,yBAAyB,SAAU5F,GAChF,IAAI1D,EAAQ0D,EAAM1D,MACdgP,EAAe1F,EAAMlN,MACrB+O,EAAc6D,EAAa7D,YAC3BomB,EAAmBviB,EAAauiB,iBAChClmB,EAAc2D,EAAa3D,YAC3BuE,EAActG,EAAMqC,MACpBjG,EAAgBkK,EAAYlK,cAMhC,OAL8BkK,EAAYqhB,yBAKXjxB,IAAUmL,EAAcomB,EAC9C7rB,EAGqB,oBAAhB2F,EAA6BA,EAAY,CACrDrL,MAAOA,EAAQuxB,IACZlmB,CACP,KAEA3L,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,aAAa,SAAUkoB,GACpE,IAAI/kB,EAAa+kB,EAAW/kB,WACxBC,EAAY8kB,EAAW9kB,UAE3BpD,EAAMG,SAAS,CACbgD,WAAYA,EACZC,UAAWA,IAGb,IAAIoF,EAAWxI,EAAMlN,MAAM0V,SAEvBA,GACFA,EAAS0f,EAEb,KAEA9xB,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,8BAA8B,SAAUzF,GACrF,IAAI4Q,EAAa5Q,EAAM4Q,WACnBnU,EAAOuD,EAAMvD,KACboU,EAAW7Q,EAAM6Q,SACjBnE,EAAejH,EAAMqC,MACrBslB,EAA0B1gB,EAAa0gB,wBACvCC,EAAwB3gB,EAAa2gB,sBAEzC,GAAIzc,IAAewc,GAA2Bvc,IAAawc,EAAuB,CAChF5nB,EAAMG,SAAS,CACb/D,cAAepF,EACf2wB,wBAAyBxc,EACzByc,sBAAuBxc,IAGzB,IAAIF,EAA4BlL,EAAMlN,MAAMoY,0BAEH,oBAA9BA,GACTA,EAA0B,CACxBC,WAAYA,EACZnU,KAAMA,EACNoU,SAAUA,GAGhB,CACF,KAEAhV,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,iBAAiB,SAAUkoB,GACxE,IAAI/kB,EAAa+kB,EAAW/kB,WAE5BnD,EAAMyI,UAAU,CACdtF,WAAYA,EACZC,UAAWpD,EAAMqC,MAAMe,WAE3B,KAEAhN,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,gBAAgB,SAAUkoB,GACvE,IAAI9kB,EAAY8kB,EAAW9kB,UAE3BpD,EAAMyI,UAAU,CACdrF,UAAWA,EACXD,WAAYnD,EAAMqC,MAAMc,YAE5B,KAEA/M,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,wBAAwB,SAAUxF,GAC/E,IAAI9D,EAAQ8D,EAAM9D,MACd2P,EAAerG,EAAMlN,MACrBk1B,EAAgB3hB,EAAa2hB,cAC7B9lB,EAAWmE,EAAanE,SACxBC,EAAYkE,EAAalE,UACzBoW,EAAevY,EAAMqC,MACrBjG,EAAgBmc,EAAanc,cAMjC,OAL4Bmc,EAAaqP,uBAKZlxB,IAAUwL,EAAW8lB,EACzC5rB,EAGmB,oBAAd+F,EAA2BA,EAAU,CACjDzL,MAAOA,EAAQsxB,IACZ7lB,CACP,KAEA/L,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,mBAAmB,SAAUwB,GAC1ExB,EAAMmoB,aAAe3mB,CACvB,KAEApL,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,oBAAoB,SAAUwB,GAC3ExB,EAAMooB,cAAgB5mB,CACxB,IAEA,IAAIuH,EAA2BjW,EAAMiW,yBACjCsf,EAAoBv1B,EAAMm1B,iBAC1BK,EAAiBx1B,EAAMk1B,cAsB3B,OApBAhoB,EAAMuoB,6BAA4B,GAE9Bxf,IACF/I,EAAMwoB,wCAA0CF,EAAiB,EAAI,IAAItB,GAA2B,CAClGrB,kBAAmB5c,EACnBse,kBAAmB,EACnBE,eAAgBe,IACbvf,EACL/I,EAAMyoB,yCAA2CJ,EAAoB,GAAKC,EAAiB,EAAI,IAAItB,GAA2B,CAC5HrB,kBAAmB5c,EACnBse,kBAAmBgB,EACnBd,eAAgBe,IACbvf,EACL/I,EAAM0oB,sCAAwCL,EAAoB,EAAI,IAAIrB,GAA2B,CACnGrB,kBAAmB5c,EACnBse,kBAAmBgB,EACnBd,eAAgB,IACbxe,GAGA/I,CACT,CAkgBA,OAzuBA1L,EAAUozB,EAAW3nB,GAyOrBvM,EAAak0B,EAAW,CAAC,CACvBn0B,IAAK,mBACLoB,MAAO,WACLwB,KAAK0xB,iBAAmB1xB,KAAK0xB,gBAAgBtiB,cAC7CpP,KAAK2xB,kBAAoB3xB,KAAK2xB,iBAAiBviB,cAC/CpP,KAAKgyB,cAAgBhyB,KAAKgyB,aAAa5iB,cACvCpP,KAAKiyB,eAAiBjyB,KAAKiyB,cAAc7iB,aAC3C,GAGC,CACDhS,IAAK,gCACLoB,MAAO,WACL,IAAI8F,EAAQlI,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC7Eo2B,EAAoBluB,EAAMoJ,YAC1BA,OAAoC,IAAtB8kB,EAA+B,EAAIA,EACjDC,EAAiBnuB,EAAMsJ,SACvBA,OAA8B,IAAnB6kB,EAA4B,EAAIA,EAE/CzyB,KAAK0O,+BAAgF,kBAAxC1O,KAAK0O,+BAA8C7M,KAAKE,IAAI/B,KAAK0O,+BAAgChB,GAAeA,EAC7J1N,KAAK2O,4BAA0E,kBAArC3O,KAAK2O,4BAA2C9M,KAAKE,IAAI/B,KAAK2O,4BAA6Bf,GAAYA,CACnJ,GAGC,CACDxQ,IAAK,kBACLoB,MAAO,WACLwB,KAAK0xB,iBAAmB1xB,KAAK0xB,gBAAgBnI,kBAC7CvpB,KAAK2xB,kBAAoB3xB,KAAK2xB,iBAAiBpI,kBAC/CvpB,KAAKgyB,cAAgBhyB,KAAKgyB,aAAazI,kBACvCvpB,KAAKiyB,eAAiBjyB,KAAKiyB,cAAc1I,iBAC3C,GAGC,CACDnsB,IAAK,oBACLoB,MAAO,WACL,IAAI0W,EAAQ9Y,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC7Es2B,EAAoBxd,EAAMxH,YAC1BA,OAAoC,IAAtBglB,EAA+B,EAAIA,EACjDC,EAAiBzd,EAAMtH,SACvBA,OAA8B,IAAnB+kB,EAA4B,EAAIA,EAE3CtiB,EAAerQ,KAAKrD,MACpBm1B,EAAmBzhB,EAAayhB,iBAChCD,EAAgBxhB,EAAawhB,cAC7Be,EAAsB/wB,KAAKC,IAAI,EAAG4L,EAAcokB,GAChDe,EAAmBhxB,KAAKC,IAAI,EAAG8L,EAAWikB,GAC9C7xB,KAAK0xB,iBAAmB1xB,KAAK0xB,gBAAgBpd,kBAAkB,CAC7D5G,YAAaA,EACbE,SAAUilB,IAEZ7yB,KAAK2xB,kBAAoB3xB,KAAK2xB,iBAAiBrd,kBAAkB,CAC/D5G,YAAaklB,EACbhlB,SAAUilB,IAEZ7yB,KAAKgyB,cAAgBhyB,KAAKgyB,aAAa1d,kBAAkB,CACvD5G,YAAaA,EACbE,SAAUA,IAEZ5N,KAAKiyB,eAAiBjyB,KAAKiyB,cAAc3d,kBAAkB,CACzD5G,YAAaklB,EACbhlB,SAAUA,IAEZ5N,KAAK8yB,eAAiB,KACtB9yB,KAAK+yB,eAAiB,KAEtB/yB,KAAKoyB,6BAA4B,EACnC,GACC,CACDh1B,IAAK,oBACLoB,MAAO,WACL,IAAIw0B,EAAehzB,KAAKrD,MACpBqQ,EAAagmB,EAAahmB,WAC1BC,EAAY+lB,EAAa/lB,UAE7B,GAAID,EAAa,GAAKC,EAAY,EAAG,CACnC,IAAIuB,EAAW,CAAC,EAEZxB,EAAa,IACfwB,EAASxB,WAAaA,GAGpBC,EAAY,IACduB,EAASvB,UAAYA,GAGvBjN,KAAKgK,SAASwE,EAChB,CAEAxO,KAAKyP,4BACP,GACC,CACDrS,IAAK,qBACLoB,MAAO,WACLwB,KAAKyP,4BACP,GACC,CACDrS,IAAK,SACLoB,MAAO,WACL,IAAIy0B,EAAejzB,KAAKrD,MACpB0V,EAAW4gB,EAAa5gB,SACxBlI,EAAoB8oB,EAAa9oB,kBAGjCuC,GAF4BumB,EAAale,0BACxBke,EAAajmB,WACbimB,EAAavmB,gBAE9BE,GADgBqmB,EAAahmB,UACfgmB,EAAarmB,aAC3BglB,EAAOxyB,EAAyB6zB,EAAc,CAAC,WAAY,oBAAqB,4BAA6B,aAAc,iBAAkB,YAAa,gBAO9J,GALAjzB,KAAKkzB,oBAKoB,IAArBlzB,KAAKrD,MAAM6J,OAAqC,IAAtBxG,KAAKrD,MAAM8J,OACvC,OAAO,KAIT,IAAI0sB,EAAenzB,KAAKkM,MACpBc,EAAammB,EAAanmB,WAC1BC,EAAYkmB,EAAalmB,UAC7B,OAAOgF,EAAAA,cAAoB,MAAO,CAChC5L,MAAOrG,KAAKozB,sBACXnhB,EAAAA,cAAoB,MAAO,CAC5B5L,MAAOrG,KAAKqzB,oBACXrzB,KAAKszB,mBAAmB1B,GAAO5xB,KAAKuzB,oBAAoBjqB,GAAc,CAAC,EAAGsoB,EAAM,CACjFvf,SAAUA,EACVrF,WAAYA,MACRiF,EAAAA,cAAoB,MAAO,CAC/B5L,MAAOrG,KAAKwzB,uBACXxzB,KAAKyzB,sBAAsBnqB,GAAc,CAAC,EAAGsoB,EAAM,CACpDvf,SAAUA,EACVpF,UAAWA,KACRjN,KAAK0zB,uBAAuBpqB,GAAc,CAAC,EAAGsoB,EAAM,CACvDvf,SAAUA,EACVlI,kBAAmBA,EACnB6C,WAAYA,EACZN,eAAgBA,EAChBE,YAAaA,EACbK,UAAWA,MAEf,GACC,CACD7P,IAAK,uBACLoB,MAAO,SAA8B7B,GAKnC,OAJaA,EAAM8J,OAECzG,KAAK2zB,kBAAkBh3B,EAG7C,GACC,CACDS,IAAK,oBACLoB,MAAO,SAA2B7B,GAChC,IAAIm1B,EAAmBn1B,EAAMm1B,iBACzBlmB,EAAcjP,EAAMiP,YAExB,GAA2B,MAAvB5L,KAAK8yB,eACP,GAA2B,oBAAhBlnB,EAA4B,CAGrC,IAFA,IAAIgoB,EAAgB,EAEXrzB,EAAQ,EAAGA,EAAQuxB,EAAkBvxB,IAC5CqzB,GAAiBhoB,EAAY,CAC3BrL,MAAOA,IAIXP,KAAK8yB,eAAiBc,CACxB,MACE5zB,KAAK8yB,eAAiBlnB,EAAckmB,EAIxC,OAAO9xB,KAAK8yB,cACd,GACC,CACD11B,IAAK,qBACLoB,MAAO,SAA4B7B,GAKjC,OAJYA,EAAM6J,MAEExG,KAAK6zB,kBAAkBl3B,EAG7C,GACC,CACDS,IAAK,oBACLoB,MAAO,SAA2B7B,GAChC,IAAIk1B,EAAgBl1B,EAAMk1B,cACtB7lB,EAAYrP,EAAMqP,UAEtB,GAA2B,MAAvBhM,KAAK+yB,eACP,GAAyB,oBAAd/mB,EAA0B,CAGnC,IAFA,IAAI8nB,EAAgB,EAEXvzB,EAAQ,EAAGA,EAAQsxB,EAAetxB,IACzCuzB,GAAiB9nB,EAAU,CACzBzL,MAAOA,IAIXP,KAAK+yB,eAAiBe,CACxB,MACE9zB,KAAK+yB,eAAiB/mB,EAAY6lB,EAItC,OAAO7xB,KAAK+yB,cACd,GACC,CACD31B,IAAK,6BACLoB,MAAO,WACL,GAAmD,kBAAxCwB,KAAK0O,+BAA6C,CAC3D,IAAIhB,EAAc1N,KAAK0O,+BACnBd,EAAW5N,KAAK2O,4BACpB3O,KAAK0O,+BAAiC,KACtC1O,KAAK2O,4BAA8B,KACnC3O,KAAKsU,kBAAkB,CACrB5G,YAAaA,EACbE,SAAUA,IAEZ5N,KAAKoP,aACP,CACF,GAMC,CACDhS,IAAK,8BACLoB,MAAO,SAAqCu1B,GAC1C,IAAIC,EAAeh0B,KAAKrD,MACpBiP,EAAcooB,EAAapoB,YAC3BqoB,EAA0BD,EAAaC,wBACvCC,EAAuBF,EAAaE,qBACpCztB,EAASutB,EAAavtB,OACtBqrB,EAAmBkC,EAAalC,iBAChCD,EAAgBmC,EAAanC,cAC7B7lB,EAAYgoB,EAAahoB,UACzB3F,EAAQ2tB,EAAa3tB,MACrB8tB,EAAsBH,EAAaG,oBACnCC,EAAuBJ,EAAaI,qBACpCC,EAAmBL,EAAaK,iBAChCC,EAAoBN,EAAaM,kBACjC9tB,EAAQwtB,EAAaxtB,MACrB+tB,EAAaR,GAAYttB,IAAWzG,KAAKw0B,qBAAuBhuB,IAAUxG,KAAKy0B,mBAC/EC,EAAiBX,GAAYnoB,IAAgB5L,KAAK20B,0BAA4B7C,IAAqB9xB,KAAK40B,8BACxGC,EAAgBd,GAAYlC,IAAkB7xB,KAAK80B,4BAA8B9oB,IAAchM,KAAK+0B,wBAEpGhB,GAAYQ,GAAcluB,IAAUrG,KAAKg1B,sBAC3Ch1B,KAAKozB,qBAAuB9pB,GAAc,CACxC7C,OAAQA,EACRC,SAAU,UAEVF,MAAOA,GACNH,KAGD0tB,GAAYQ,GAAcM,KAC5B70B,KAAKqzB,mBAAqB,CACxB5sB,OAAQzG,KAAK2zB,kBAAkB3zB,KAAKrD,OACpC2J,SAAU,WACVE,MAAOA,GAETxG,KAAKwzB,sBAAwB,CAC3B/sB,OAAQA,EAASzG,KAAK2zB,kBAAkB3zB,KAAKrD,OAC7C+J,SAAU,UAEVJ,SAAU,WACVE,MAAOA,KAIPutB,GAAYI,IAAwBn0B,KAAKi1B,oCAC3Cj1B,KAAKk1B,qBAAuB5rB,GAAc,CACxCiN,KAAM,EACN3E,UAAW,SACXC,UAAWoiB,EAA0B,OAAS,SAC9C3tB,SAAU,YACT6tB,KAGDJ,GAAYW,GAAkBN,IAAyBp0B,KAAKm1B,qCAC9Dn1B,KAAKo1B,sBAAwB9rB,GAAc,CACzCiN,KAAMvW,KAAK6zB,kBAAkB7zB,KAAKrD,OAClC2J,SAAU,YACT8tB,KAGDL,GAAYM,IAAqBr0B,KAAKq1B,iCACxCr1B,KAAKs1B,kBAAoBhsB,GAAc,CACrCiN,KAAM,EACN3E,UAAW,SACXC,UAAW,SACXvL,SAAU,WACVC,IAAK,GACJ8tB,KAGDN,GAAYW,GAAkBJ,IAAsBt0B,KAAKu1B,kCAC3Dv1B,KAAKw1B,mBAAqBlsB,GAAc,CACtCiN,KAAMvW,KAAK6zB,kBAAkB7zB,KAAKrD,OAClCiV,UAAWsiB,EAAuB,OAAS,SAC3CriB,UAAW,SACXvL,SAAU,WACVC,IAAK,GACJ+tB,IAGLt0B,KAAK20B,yBAA2B/oB,EAChC5L,KAAK40B,8BAAgC9C,EACrC9xB,KAAK80B,2BAA6BjD,EAClC7xB,KAAKw0B,oBAAsB/tB,EAC3BzG,KAAK+0B,uBAAyB/oB,EAC9BhM,KAAKg1B,mBAAqB3uB,EAC1BrG,KAAKi1B,iCAAmCd,EACxCn0B,KAAKm1B,kCAAoCf,EACzCp0B,KAAKq1B,8BAAgChB,EACrCr0B,KAAKu1B,+BAAiCjB,EACtCt0B,KAAKy0B,mBAAqBjuB,CAC5B,GACC,CACDpJ,IAAK,oBACLoB,MAAO,WACDwB,KAAK20B,2BAA6B30B,KAAKrD,MAAMiP,aAAe5L,KAAK40B,gCAAkC50B,KAAKrD,MAAMm1B,mBAChH9xB,KAAK8yB,eAAiB,MAGpB9yB,KAAK80B,6BAA+B90B,KAAKrD,MAAMk1B,eAAiB7xB,KAAK+0B,yBAA2B/0B,KAAKrD,MAAMqP,YAC7GhM,KAAK+yB,eAAiB,MAGxB/yB,KAAKoyB,8BAELpyB,KAAK20B,yBAA2B30B,KAAKrD,MAAMiP,YAC3C5L,KAAK40B,8BAAgC50B,KAAKrD,MAAMm1B,iBAChD9xB,KAAK80B,2BAA6B90B,KAAKrD,MAAMk1B,cAC7C7xB,KAAK+0B,uBAAyB/0B,KAAKrD,MAAMqP,SAC3C,GACC,CACD5O,IAAK,wBACLoB,MAAO,SAA+B7B,GACpC,IAAIs3B,EAA0Bt3B,EAAMs3B,wBAChCnC,EAAmBn1B,EAAMm1B,iBACzBD,EAAgBl1B,EAAMk1B,cACtB9lB,EAAWpP,EAAMoP,SACjB0pB,EAA8B94B,EAAM84B,4BACpChE,EAAwBzxB,KAAKkM,MAAMulB,sBAEvC,IAAKK,EACH,OAAO,KAGT,IAAI4D,EAAqBjE,EAAwB,EAAI,EACjDhrB,EAASzG,KAAK21B,qBAAqBh5B,GACnC6J,EAAQxG,KAAK6zB,kBAAkBl3B,GAC/BsJ,EAAgBjG,KAAKkM,MAAMulB,sBAAwBzxB,KAAKkM,MAAMjG,cAAgB,EAC9E2vB,EAAYH,EAA8BjvB,EAAQP,EAAgBO,EAElEqvB,EAAiB5jB,EAAAA,cAAoBtI,GAAMuI,EAAAA,EAAAA,GAAS,CAAC,EAAGvV,EAAO,CACjE+V,aAAc1S,KAAK81B,4BACnBvlB,UAAWvQ,KAAKrD,MAAMo5B,wBACtBrqB,YAAaomB,EACblf,yBAA0B5S,KAAKqyB,wCAC/B5rB,OAAQA,EACR4L,SAAU4hB,EAA0Bj0B,KAAKg2B,kBAAel1B,EACxDuK,IAAKrL,KAAKi2B,mBACVlqB,SAAUlK,KAAKC,IAAI,EAAGiK,EAAW8lB,GAAiB6D,EAClD1pB,UAAWhM,KAAKk2B,qBAChB7vB,MAAOrG,KAAKk1B,qBACZrkB,SAAU,KACVrK,MAAOovB,KAGT,OAAIH,EACKxjB,EAAAA,cAAoB,MAAO,CAChC1B,UAAW,+BACXlK,MAAOiD,GAAc,CAAC,EAAGtJ,KAAKk1B,qBAAsB,CAClDzuB,OAAQA,EACRD,MAAOA,EACPqL,UAAW,YAEZgkB,GAGEA,CACT,GACC,CACDz4B,IAAK,yBACLoB,MAAO,SAAgC7B,GACrC,IAAI+O,EAAc/O,EAAM+O,YACpBomB,EAAmBn1B,EAAMm1B,iBACzBD,EAAgBl1B,EAAMk1B,cACtB9lB,EAAWpP,EAAMoP,SACjBW,EAAiB/P,EAAM+P,eACvBE,EAAcjQ,EAAMiQ,YACxB,OAAOqF,EAAAA,cAAoBtI,GAAMuI,EAAAA,EAAAA,GAAS,CAAC,EAAGvV,EAAO,CACnD+V,aAAc1S,KAAKm2B,6BACnB5lB,UAAWvQ,KAAKrD,MAAMy5B,yBACtB1qB,YAAa7J,KAAKC,IAAI,EAAG4J,EAAcomB,GACvClmB,YAAa5L,KAAKq2B,sBAClBzjB,yBAA0B5S,KAAKsyB,yCAC/B7rB,OAAQzG,KAAK21B,qBAAqBh5B,GAClC0V,SAAUrS,KAAKsS,UACfyC,0BAA2B/U,KAAKs2B,2BAChCjrB,IAAKrL,KAAKu2B,oBACVxqB,SAAUlK,KAAKC,IAAI,EAAGiK,EAAW8lB,GACjC7lB,UAAWhM,KAAKk2B,qBAChBxpB,eAAgBA,EAAiBolB,EACjCllB,YAAaA,EAAcilB,EAC3BxrB,MAAOrG,KAAKo1B,sBACZ5uB,MAAOxG,KAAKw2B,mBAAmB75B,KAEnC,GACC,CACDS,IAAK,qBACLoB,MAAO,SAA4B7B,GACjC,IAAIm1B,EAAmBn1B,EAAMm1B,iBACzBD,EAAgBl1B,EAAMk1B,cAE1B,OAAKC,GAAqBD,EAInB5f,EAAAA,cAAoBtI,GAAMuI,EAAAA,EAAAA,GAAS,CAAC,EAAGvV,EAAO,CACnD4T,UAAWvQ,KAAKrD,MAAM85B,qBACtB/qB,YAAaomB,EACbrrB,OAAQzG,KAAK2zB,kBAAkBh3B,GAC/B0O,IAAKrL,KAAK02B,gBACV3qB,SAAU8lB,EACVxrB,MAAOrG,KAAKs1B,kBACZzkB,SAAU,KACVrK,MAAOxG,KAAK6zB,kBAAkBl3B,MAXvB,IAaX,GACC,CACDS,IAAK,sBACLoB,MAAO,SAA6B7B,GAClC,IAAI+O,EAAc/O,EAAM+O,YACpBwoB,EAAuBv3B,EAAMu3B,qBAC7BpC,EAAmBn1B,EAAMm1B,iBACzBD,EAAgBl1B,EAAMk1B,cACtB7kB,EAAarQ,EAAMqQ,WACnB2pB,EAA4Bh6B,EAAMg6B,0BAClCC,EAAe52B,KAAKkM,MACpBslB,EAA0BoF,EAAapF,wBACvCvrB,EAAgB2wB,EAAa3wB,cAEjC,IAAK4rB,EACH,OAAO,KAGT,IAAIgF,EAAwBrF,EAA0B,EAAI,EACtD/qB,EAASzG,KAAK2zB,kBAAkBh3B,GAChC6J,EAAQxG,KAAKw2B,mBAAmB75B,GAChCm6B,EAAmBtF,EAA0BvrB,EAAgB,EAE7D8wB,EAAatwB,EACbJ,EAAQrG,KAAKw1B,mBAEbmB,IACFI,EAAatwB,EAASqwB,EACtBzwB,EAAQiD,GAAc,CAAC,EAAGtJ,KAAKw1B,mBAAoB,CACjDjf,KAAM,KAIV,IAAIygB,EAAe/kB,EAAAA,cAAoBtI,GAAMuI,EAAAA,EAAAA,GAAS,CAAC,EAAGvV,EAAO,CAC/D+V,aAAc1S,KAAKi3B,0BACnB1mB,UAAWvQ,KAAKrD,MAAMu6B,sBACtBxrB,YAAa7J,KAAKC,IAAI,EAAG4J,EAAcomB,GAAoB+E,EAC3DjrB,YAAa5L,KAAKq2B,sBAClBzjB,yBAA0B5S,KAAKuyB,sCAC/B9rB,OAAQswB,EACR1kB,SAAU6hB,EAAuBl0B,KAAKm3B,mBAAgBr2B,EACtDuK,IAAKrL,KAAKo3B,iBACVrrB,SAAU8lB,EACV7kB,WAAYA,EACZ3G,MAAOA,EACPwK,SAAU,KACVrK,MAAOA,KAGT,OAAImwB,EACK1kB,EAAAA,cAAoB,MAAO,CAChC1B,UAAW,6BACXlK,MAAOiD,GAAc,CAAC,EAAGtJ,KAAKw1B,mBAAoB,CAChD/uB,OAAQA,EACRD,MAAOA,EACPoL,UAAW,YAEZolB,GAGEA,CACT,IACE,CAAC,CACH55B,IAAK,2BACLoB,MAAO,SAAkC6W,EAAW3F,GAClD,OAAI2F,EAAUrI,aAAe0C,EAAU1C,YAAcqI,EAAUpI,YAAcyC,EAAUzC,UAC9E,CACLD,WAAoC,MAAxBqI,EAAUrI,YAAsBqI,EAAUrI,YAAc,EAAIqI,EAAUrI,WAAa0C,EAAU1C,WACzGC,UAAkC,MAAvBoI,EAAUpI,WAAqBoI,EAAUpI,WAAa,EAAIoI,EAAUpI,UAAYyC,EAAUzC,WAIlG,IACT,KAGKskB,CACT,CA3uBA,CA2uBEtf,EAAAA,gBAEFhS,EAAAA,EAAAA,GAAgBsxB,GAAW,eAAgB,CACzCwE,wBAAyB,GACzBK,yBAA0B,GAC1BK,qBAAsB,GACtBS,sBAAuB,GACvBjD,yBAAyB,EACzBC,sBAAsB,EACtBpC,iBAAkB,EAClBD,cAAe,EACfnlB,gBAAiB,EACjBE,aAAc,EACdvG,MAAO,CAAC,EACR8tB,oBAAqB,CAAC,EACtBC,qBAAsB,CAAC,EACvBC,iBAAkB,CAAC,EACnBC,kBAAmB,CAAC,EACpBqC,2BAA2B,EAC3BlB,6BAA6B,IAG/BlE,GAAUxO,UAiBN,CAAC,GACLrM,EAAAA,EAAAA,UAAS6a,KCnyBT,SAAU3nB,GAGR,SAASytB,EAAW16B,EAAO8nB,GACzB,IAAI5a,EAcJ,OAZAxN,EAAgB2D,KAAMq3B,IAEtBxtB,EAAQpM,EAA2BuC,KAAMnC,EAAgBw5B,GAAY15B,KAAKqC,KAAMrD,EAAO8nB,KACjFvY,MAAQ,CACZwI,aAAc,EACd5N,YAAa,EACb6N,aAAc,EACd3H,WAAY,EACZC,UAAW,EACX2H,YAAa,GAEf/K,EAAMyI,UAAYzI,EAAMyI,UAAUrU,MAAK6L,EAAAA,EAAAA,GAAuBD,IACvDA,CACT,CA2CA,OA7DA1L,EAAUk5B,EAAYztB,GAoBtBvM,EAAag6B,EAAY,CAAC,CACxBj6B,IAAK,SACLoB,MAAO,WACL,IAAIkZ,EAAW1X,KAAKrD,MAAM+a,SACtBvH,EAAcnQ,KAAKkM,MACnBwI,EAAevE,EAAYuE,aAC3B5N,EAAcqJ,EAAYrJ,YAC1B6N,EAAexE,EAAYwE,aAC3B3H,EAAamD,EAAYnD,WACzBC,EAAYkD,EAAYlD,UACxB2H,EAAczE,EAAYyE,YAC9B,OAAO8C,EAAS,CACdhD,aAAcA,EACd5N,YAAaA,EACbuL,SAAUrS,KAAKsS,UACfqC,aAAcA,EACd3H,WAAYA,EACZC,UAAWA,EACX2H,YAAaA,GAEjB,GACC,CACDxX,IAAK,YACLoB,MAAO,SAAmBE,GACxB,IAAIgW,EAAehW,EAAKgW,aACpB5N,EAAcpI,EAAKoI,YACnB6N,EAAejW,EAAKiW,aACpB3H,EAAatO,EAAKsO,WAClBC,EAAYvO,EAAKuO,UACjB2H,EAAclW,EAAKkW,YACvB5U,KAAKgK,SAAS,CACZ0K,aAAcA,EACd5N,YAAaA,EACb6N,aAAcA,EACd3H,WAAYA,EACZC,UAAWA,EACX2H,YAAaA,GAEjB,KAGKyiB,CACT,CA/DA,CA+DEplB,EAAAA,gBAGS8Q,UAOP,CAAC,ECtFU,SAASuU,GAAyB54B,GAC/C,IAAI6R,EAAY7R,EAAK6R,UACjBgnB,EAAU74B,EAAK64B,QACflxB,EAAQ3H,EAAK2H,MACjB,OAAO4L,EAAAA,cAAoB,MAAO,CAChC1B,UAAWA,EACXK,KAAM,MACNvK,MAAOA,GACNkxB,EACL,CACAD,GAAyBvU,UAAoD,KCE7E,SAboB,CAKlByU,IAAK,MAMLC,KAAM,QCHO,SAASC,GAAch5B,GACpC,IAAIi5B,EAAgBj5B,EAAKi5B,cACrB/N,GAAaxX,EAAAA,EAAAA,GAAK,8CAA+C,CACnE,mDAAoDulB,IAAkBC,GAAcJ,IACpF,oDAAqDG,IAAkBC,GAAcH,OAEvF,OAAOxlB,EAAAA,cAAoB,MAAO,CAChC1B,UAAWqZ,EACXpjB,MAAO,GACPC,OAAQ,GACRoxB,QAAS,aACRF,IAAkBC,GAAcJ,IAAMvlB,EAAAA,cAAoB,OAAQ,CACnE8a,EAAG,mBACA9a,EAAAA,cAAoB,OAAQ,CAC/B8a,EAAG,mBACD9a,EAAAA,cAAoB,OAAQ,CAC9B8a,EAAG,gBACH+K,KAAM,SAEV,CCrBe,SAASC,GAAsBr5B,GAC5C,IAAIs5B,EAAUt5B,EAAKs5B,QACfC,EAAQv5B,EAAKu5B,MACbC,EAASx5B,EAAKw5B,OACdP,EAAgBj5B,EAAKi5B,cACrBQ,EAAoBD,IAAWF,EAC/BtgB,EAAW,CAACzF,EAAAA,cAAoB,OAAQ,CAC1C1B,UAAW,+CACXnT,IAAK,QACLg7B,MAAwB,kBAAVH,EAAqBA,EAAQ,MAC1CA,IASH,OAPIE,GACFzgB,EAAStO,KAAK6I,EAAAA,cAAoBylB,GAAe,CAC/Ct6B,IAAK,gBACLu6B,cAAeA,KAIZjgB,CACT,CCpBe,SAAS2gB,GAAmB35B,GACzC,IAAI6R,EAAY7R,EAAK6R,UACjBgnB,EAAU74B,EAAK64B,QACfh3B,EAAQ7B,EAAK6B,MACbnD,EAAMsB,EAAKtB,IACXk7B,EAAa55B,EAAK45B,WAClBC,EAAmB75B,EAAK65B,iBACxBC,EAAgB95B,EAAK85B,cACrBC,EAAiB/5B,EAAK+5B,eACtBC,EAAkBh6B,EAAKg6B,gBACvBC,EAAUj6B,EAAKi6B,QACftyB,EAAQ3H,EAAK2H,MACbuyB,EAAY,CACd,gBAAiBr4B,EAAQ,GA0D3B,OAvDI+3B,GAAcC,GAAoBC,GAAiBC,GAAkBC,KACvEE,EAAU,cAAgB,MAC1BA,EAAU/nB,SAAW,EAEjBynB,IACFM,EAAUC,QAAU,SAAUttB,GAC5B,OAAO+sB,EAAW,CAChB/sB,MAAOA,EACPhL,MAAOA,EACPo4B,QAASA,GAEb,GAGEJ,IACFK,EAAUE,cAAgB,SAAUvtB,GAClC,OAAOgtB,EAAiB,CACtBhtB,MAAOA,EACPhL,MAAOA,EACPo4B,QAASA,GAEb,GAGEH,IACFI,EAAUG,WAAa,SAAUxtB,GAC/B,OAAOitB,EAAc,CACnBjtB,MAAOA,EACPhL,MAAOA,EACPo4B,QAASA,GAEb,GAGEF,IACFG,EAAUI,YAAc,SAAUztB,GAChC,OAAOktB,EAAe,CACpBltB,MAAOA,EACPhL,MAAOA,EACPo4B,QAASA,GAEb,GAGED,IACFE,EAAUK,cAAgB,SAAU1tB,GAClC,OAAOmtB,EAAgB,CACrBntB,MAAOA,EACPhL,MAAOA,EACPo4B,QAASA,GAEb,IAIG1mB,EAAAA,cAAoB,OAAOC,EAAAA,EAAAA,GAAS,CAAC,EAAG0mB,EAAW,CACxDroB,UAAWA,EACXnT,IAAKA,EACLwT,KAAM,MACNvK,MAAOA,IACLkxB,EACN,CFvDAG,GAAc3U,UAEV,CAAC,ECHLgV,GAAsBhV,UAAoD,KCyD1EsV,GAAmBtV,UAAoD,KCrEvE,IAAImW,GAEJ,SAAUld,GAGR,SAASkd,IAGP,OAFA78B,EAAgB2D,KAAMk5B,GAEfz7B,EAA2BuC,KAAMnC,EAAgBq7B,GAAQ7vB,MAAMrJ,KAAM5D,WAC9E,CAEA,OARA+B,EAAU+6B,EAAQld,GAQXkd,CACT,CAVA,CAUEjnB,EAAAA,WClBF,SAASpJ,GAAQC,EAAQC,GAAkB,IAAIvJ,EAAOvC,OAAOuC,KAAKsJ,GAAS,GAAI7L,OAAOyC,sBAAuB,CAAE,IAAIsJ,EAAU/L,OAAOyC,sBAAsBoJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOjM,OAAOkM,yBAAyBL,EAAQI,GAAKpM,UAAY,KAAI0C,EAAK4J,KAAKC,MAAM7J,EAAMwJ,EAAU,CAAE,OAAOxJ,CAAM,CAEpV,SAAS8J,GAAc5M,GAAU,IAAK,IAAIE,EAAI,EAAGA,EAAIR,UAAUD,OAAQS,IAAK,CAAE,IAAIyC,EAAyB,MAAhBjD,UAAUQ,GAAaR,UAAUQ,GAAK,CAAC,EAAOA,EAAI,EAAKiM,GAAQxJ,GAAQ,GAAMkK,SAAQ,SAAUnM,IAAO6C,EAAAA,EAAAA,GAAgBvD,EAAQU,EAAKiC,EAAOjC,GAAO,IAAeH,OAAOuM,0BAA6BvM,OAAOwM,iBAAiB/M,EAAQO,OAAOuM,0BAA0BnK,IAAmBwJ,GAAQxJ,GAAQkK,SAAQ,SAAUnM,GAAOH,OAAOC,eAAeR,EAAQU,EAAKH,OAAOkM,yBAAyB9J,EAAQjC,GAAO,GAAM,CAAE,OAAOV,CAAQ,EDkBrgBuD,EAAAA,EAAAA,GAAgBi5B,GAAQ,eAAgB,CACtCC,eEzBa,SAA+Bz6B,GAC5C,IAAIs5B,EAAUt5B,EAAKs5B,QACfW,EAAUj6B,EAAKi6B,QAEnB,MAA2B,oBAAhBA,EAAQ/X,IACV+X,EAAQ/X,IAAIoX,GAEZW,EAAQX,EAEnB,EFiBEtlB,aG3Ba,SAA6BhU,GAC1C,IAAI06B,EAAW16B,EAAK06B,SAEpB,OAAgB,MAAZA,EACK,GAEAC,OAAOD,EAElB,EHoBEE,qBAAsB1B,GAAcJ,IACpC+B,SAAU,EACVC,WAAY,EACZC,eAAgB1B,GAChB1xB,MAAO,CAAC,IAIV6yB,GAAOnW,UAkEH,CAAC,EC/EL,IAAI2W,GAEJ,SAAU9vB,GAGR,SAAS8vB,EAAM/8B,GACb,IAAIkN,EAaJ,OAXAxN,EAAgB2D,KAAM05B,IAEtB7vB,EAAQpM,EAA2BuC,KAAMnC,EAAgB67B,GAAO/7B,KAAKqC,KAAMrD,KACrEuP,MAAQ,CACZytB,eAAgB,GAElB9vB,EAAM+vB,cAAgB/vB,EAAM+vB,cAAc37B,MAAK6L,EAAAA,EAAAA,GAAuBD,IACtEA,EAAMgwB,WAAahwB,EAAMgwB,WAAW57B,MAAK6L,EAAAA,EAAAA,GAAuBD,IAChEA,EAAMyI,UAAYzI,EAAMyI,UAAUrU,MAAK6L,EAAAA,EAAAA,GAAuBD,IAC9DA,EAAMiO,mBAAqBjO,EAAMiO,mBAAmB7Z,MAAK6L,EAAAA,EAAAA,GAAuBD,IAChFA,EAAM0T,QAAU1T,EAAM0T,QAAQtf,MAAK6L,EAAAA,EAAAA,GAAuBD,IACnDA,CACT,CAwgBA,OAzhBA1L,EAAUu7B,EAAO9vB,GAmBjBvM,EAAaq8B,EAAO,CAAC,CACnBt8B,IAAK,kBACLoB,MAAO,WACDwB,KAAK2J,MACP3J,KAAK2J,KAAKyF,aAEd,GAGC,CACDhS,IAAK,kBACLoB,MAAO,SAAyBE,GAC9B,IAAI8O,EAAY9O,EAAK8O,UACjBjN,EAAQ7B,EAAK6B,MAEjB,OAAIP,KAAK2J,KACqB3J,KAAK2J,KAAK2f,iBAAiB,CACrD9b,UAAWA,EACXI,SAAUrN,IAE0B0M,UAKjC,CACT,GAGC,CACD7P,IAAK,gCACLoB,MAAO,SAAuC6B,GAC5C,IAAIqN,EAAcrN,EAAMqN,YACpBE,EAAWvN,EAAMuN,SAEjB5N,KAAK2J,MACP3J,KAAK2J,KAAKuV,8BAA8B,CACtCtR,SAAUA,EACVF,YAAaA,GAGnB,GAGC,CACDtQ,IAAK,iBACLoB,MAAO,WACDwB,KAAK2J,MACP3J,KAAK2J,KAAK4f,iBAEd,GAGC,CACDnsB,IAAK,oBACLoB,MAAO,WACL,IAAI0C,EAAQ9E,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC7E09B,EAAoB54B,EAAMwM,YAC1BA,OAAoC,IAAtBosB,EAA+B,EAAIA,EACjDC,EAAiB74B,EAAM0M,SACvBA,OAA8B,IAAnBmsB,EAA4B,EAAIA,EAE3C/5B,KAAK2J,MACP3J,KAAK2J,KAAK2K,kBAAkB,CAC1B1G,SAAUA,EACVF,YAAaA,GAGnB,GAGC,CACDtQ,IAAK,sBACLoB,MAAO,WACL,IAAI+B,EAAQnE,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EAE5E4D,KAAK2J,MACP3J,KAAK2J,KAAK2K,kBAAkB,CAC1B1G,SAAUrN,GAGhB,GAGC,CACDnD,IAAK,mBACLoB,MAAO,WACL,IAAIyO,EAAY7Q,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EAEhF4D,KAAK2J,MACP3J,KAAK2J,KAAK+f,iBAAiB,CACzBzc,UAAWA,GAGjB,GAGC,CACD7P,IAAK,cACLoB,MAAO,WACL,IAAI+B,EAAQnE,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,EAE5E4D,KAAK2J,MACP3J,KAAK2J,KAAKsX,aAAa,CACrBvT,YAAa,EACbE,SAAUrN,GAGhB,GACC,CACDnD,IAAK,oBACLoB,MAAO,WACL,GAAIwB,KAAK2J,KAAM,CACb,IAAIqwB,GAAQrb,EAAAA,GAAAA,aAAY3e,KAAK2J,MAEzB7C,EAAckzB,EAAMlzB,aAAe,EAEvC,OADkBkzB,EAAMnzB,aAAe,GAClBC,CACvB,CAEA,OAAO,CACT,GACC,CACD1J,IAAK,oBACLoB,MAAO,WACLwB,KAAKi6B,oBACP,GACC,CACD78B,IAAK,qBACLoB,MAAO,WACLwB,KAAKi6B,oBACP,GACC,CACD78B,IAAK,SACLoB,MAAO,WACL,IAAIyR,EAASjQ,KAETmO,EAAcnO,KAAKrD,MACnB+a,EAAWvJ,EAAYuJ,SACvBnH,EAAYpC,EAAYoC,UACxB2pB,EAAgB/rB,EAAY+rB,cAC5BC,EAAgBhsB,EAAYgsB,cAC5BnpB,EAAY7C,EAAY6C,UACxBopB,EAAejsB,EAAYisB,aAC3BC,EAAoBlsB,EAAYksB,kBAChC5zB,EAAS0H,EAAY1H,OACrBsB,EAAKoG,EAAYpG,GACjB4hB,EAAiBxb,EAAYwb,eAC7B2Q,EAAensB,EAAYmsB,aAC3BC,EAAWpsB,EAAYosB,SACvBr7B,EAAgBiP,EAAYjP,cAC5BmH,EAAQ8H,EAAY9H,MACpBG,EAAQ2H,EAAY3H,MACpBmzB,EAAiB35B,KAAKkM,MAAMytB,eAC5Ba,EAAsBN,EAAgBzzB,EAASA,EAAS2zB,EACxDK,EAAmC,oBAAjBH,EAA8BA,EAAa,CAC/D/5B,OAAQ,IACL+5B,EACDI,EAAqC,oBAAbH,EAA0BA,EAAS,CAC7Dh6B,OAAQ,IACLg6B,EAaL,OAXAv6B,KAAK26B,oBAAsB,GAC3B1oB,EAAAA,SAAe2oB,QAAQljB,GAAUnO,SAAQ,SAAUsxB,EAAQt6B,GACzD,IAAIu6B,EAAa7qB,EAAO8qB,uBAAuBF,EAAQA,EAAOl+B,MAAM0J,OAEpE4J,EAAO0qB,oBAAoBp6B,GAAS+I,GAAc,CAChD5C,SAAU,UACTo0B,EACL,IAIO7oB,EAAAA,cAAoB,MAAO,CAChC,aAAcjS,KAAKrD,MAAM,cACzB,kBAAmBqD,KAAKrD,MAAM,mBAC9B,gBAAiBsV,EAAAA,SAAe2oB,QAAQljB,GAAUvb,OAClD,gBAAiB6D,KAAKrD,MAAMoP,SAC5BwE,WAAW6B,EAAAA,EAAAA,GAAK,0BAA2B7B,GAC3CxI,GAAIA,EACJ6I,KAAM,OACNvK,MAAOA,IACL6zB,GAAiBG,EAAkB,CACrC9pB,WAAW6B,EAAAA,EAAAA,GAAK,qCAAsCqoB,GACtDlD,QAASv3B,KAAKg7B,oBACd30B,MAAOiD,GAAc,CACnB7C,OAAQ2zB,EACR1zB,SAAU,SACV+V,aAAckd,EACdnzB,MAAOA,GACNk0B,KACDzoB,EAAAA,cAAoBtI,GAAMuI,EAAAA,EAAAA,GAAS,CAAC,EAAGlS,KAAKrD,MAAO,CACrD,gBAAiB,KACjB2T,oBAAoB,EACpBC,WAAW6B,EAAAA,EAAAA,GAAK,gCAAiC+nB,GACjDznB,aAAc1S,KAAK65B,WACnBjuB,YAAapF,EACbkF,YAAa,EACbjF,OAAQ+zB,EACRzyB,QAAIjH,EACJ6P,kBAAmBgZ,EACnBtX,SAAUrS,KAAKsS,UACfnI,kBAAmBnK,KAAK8X,mBACxBzM,IAAKrL,KAAKud,QACV3M,KAAM,WACN+oB,eAAgBA,EAChB/sB,YAAa1N,EACbmH,MAAOiD,GAAc,CAAC,EAAG0H,EAAW,CAClCY,UAAW,cAGjB,GACC,CACDxU,IAAK,gBACLoB,MAAO,SAAuByF,GAC5B,IAAI42B,EAAS52B,EAAM42B,OACfntB,EAAczJ,EAAMyJ,YACpBzD,EAAchG,EAAMgG,YACpBiK,EAASjQ,EAAMiQ,OACfykB,EAAU10B,EAAM00B,QAChB/qB,EAAW3J,EAAM2J,SACjBqtB,EAAgBj7B,KAAKrD,MAAMs+B,cAC3BC,EAAgBL,EAAOl+B,MACvBw8B,EAAiB+B,EAAc/B,eAC/BzmB,EAAewoB,EAAcxoB,aAC7BnC,EAAY2qB,EAAc3qB,UAC1B4qB,EAAaD,EAAcC,WAC3BnD,EAAUkD,EAAclD,QACxBjwB,EAAKmzB,EAAcnzB,GAMnB0O,EAAe/D,EAAa,CAC9B0mB,SANaD,EAAe,CAC5BgC,WAAYA,EACZnD,QAASA,EACTW,QAASA,IAITwC,WAAYA,EACZztB,YAAaA,EACbsqB,QAASA,EACT/tB,YAAaA,EACbiK,OAAQA,EACRykB,QAASA,EACT/qB,SAAUA,IAWRvH,EAAQrG,KAAK26B,oBAAoBjtB,GACjC0qB,EAAgC,kBAAjB3hB,EAA4BA,EAAe,KAI9D,OAAOxE,EAAAA,cAAoB,MAAO,CAChC,gBAAiBvE,EAAc,EAC/B,mBAAoB3F,EACpBwI,WAAW6B,EAAAA,EAAAA,GAAK,qCAAsC7B,GACtDnT,IAAK,MAAQwQ,EAAR,OAAiCF,EACtCmrB,QAlBY,SAAiBttB,GAC7B0vB,GAAiBA,EAAc,CAC7BE,WAAYA,EACZnD,QAASA,EACTzsB,MAAOA,GAEX,EAaEqF,KAAM,WACNvK,MAAOA,EACP+xB,MAAOA,GACN3hB,EACL,GACC,CACDrZ,IAAK,gBACLoB,MAAO,SAAuB4F,GAC5B,IAgCIg3B,EAAeC,EAAiBC,EAAgBC,EAAgBC,EAhChEX,EAASz2B,EAAMy2B,OACft6B,EAAQ6D,EAAM7D,MACdqO,EAAe5O,KAAKrD,MACpB8+B,EAAkB7sB,EAAa6sB,gBAC/BC,EAAc9sB,EAAa8sB,YAC3BC,EAAgB/sB,EAAa+sB,cAC7BzO,EAAOte,EAAase,KACpBgL,EAAStpB,EAAaspB,OACtBP,EAAgB/oB,EAAa+oB,cAC7BiE,EAAiBf,EAAOl+B,MACxBw+B,EAAaS,EAAeT,WAC5BnD,EAAU4D,EAAe5D,QACzBsB,EAAuBsC,EAAetC,qBACtCuC,EAAcD,EAAeC,YAC7BpC,EAAiBmC,EAAenC,eAChC1xB,EAAK6zB,EAAe7zB,GACpBkwB,EAAQ2D,EAAe3D,MACvB6D,GAAeD,GAAe3O,EAC9BtD,GAAaxX,EAAAA,EAAAA,GAAK,wCAAyCqpB,EAAiBZ,EAAOl+B,MAAM8+B,gBAAiB,CAC5GM,8CAA+CD,IAG7Cz1B,EAAQrG,KAAK+6B,uBAAuBF,EAAQvxB,GAAc,CAAC,EAAGoyB,EAAa,CAAC,EAAGb,EAAOl+B,MAAM++B,cAE5FM,EAAiBvC,EAAe,CAClC0B,WAAYA,EACZnD,QAASA,EACT6D,YAAaA,EACb5D,MAAOA,EACPC,OAAQA,EACRP,cAAeA,IAIjB,GAAImE,GAAeH,EAAe,CAEhC,IAGIM,EAHkB/D,IAAWF,EAGQsB,EAAuB3B,IAAkBC,GAAcH,KAAOG,GAAcJ,IAAMI,GAAcH,KAErIoB,EAAU,SAAiBttB,GAC7BuwB,GAAe5O,EAAK,CAClBoM,qBAAsBA,EACtB/tB,MAAOA,EACP2sB,OAAQF,EACRL,cAAesE,IAEjBN,GAAiBA,EAAc,CAC7BR,WAAYA,EACZnD,QAASA,EACTzsB,MAAOA,GAEX,EAQAiwB,EAAkBX,EAAOl+B,MAAM,eAAiBs7B,GAASD,EACzDuD,EAAiB,OACjBD,EAAiB,EACjBF,EAAgBvC,EAChBwC,EAVgB,SAAmB9vB,GACf,UAAdA,EAAMnO,KAAiC,MAAdmO,EAAMnO,KACjCy7B,EAAQttB,EAEZ,CAOF,CASA,OAPI2sB,IAAWF,IACbuD,EAAiB5D,IAAkBC,GAAcJ,IAAM,YAAc,cAMhEvlB,EAAAA,cAAoB,MAAO,CAChC,aAAcupB,EACd,YAAaD,EACbhrB,UAAWqZ,EACX7hB,GAAIA,EACJ3K,IAAK,aAAemD,EACpBs4B,QAASuC,EACTxjB,UAAWyjB,EACXzqB,KAAM,eACNvK,MAAOA,EACPwK,SAAUyqB,GACTU,EACL,GACC,CACD5+B,IAAK,aACLoB,MAAO,SAAoB6F,GACzB,IAAIkQ,EAASvU,KAETO,EAAQ8D,EAAMuJ,SACd3D,EAAc5F,EAAM4F,YACpB7M,EAAMiH,EAAMjH,IACZ8W,EAAS7P,EAAM6P,OACf7N,EAAQhC,EAAMgC,MACd0I,EAAe/O,KAAKrD,MACpB+a,EAAW3I,EAAa2I,SACxB4gB,EAAavpB,EAAaupB,WAC1BC,EAAmBxpB,EAAawpB,iBAChCG,EAAkB3pB,EAAa2pB,gBAC/BD,EAAiB1pB,EAAa0pB,eAC9BD,EAAgBzpB,EAAaypB,cAC7B8B,EAAevrB,EAAaurB,aAC5B4B,EAAYntB,EAAamtB,UACzB9S,EAAcra,EAAaqa,YAC3BmR,EAAWxrB,EAAawrB,SACxBZ,EAAiB35B,KAAKkM,MAAMytB,eAC5Bc,EAAmC,oBAAjBH,EAA8BA,EAAa,CAC/D/5B,MAAOA,IACJ+5B,EACDI,EAAqC,oBAAbH,EAA0BA,EAAS,CAC7Dh6B,MAAOA,IACJg6B,EACD5B,EAAUuD,EAAU,CACtB37B,MAAOA,IAELg3B,EAAUtlB,EAAAA,SAAe2oB,QAAQljB,GAAUiM,KAAI,SAAUkX,EAAQntB,GACnE,OAAO6G,EAAOqlB,cAAc,CAC1BiB,OAAQA,EACRntB,YAAaA,EACbzD,YAAaA,EACbiK,OAAQA,EACRykB,QAASA,EACT/qB,SAAUrN,EACVo5B,eAAgBA,GAEpB,IACIppB,GAAY6B,EAAAA,EAAAA,GAAK,+BAAgCqoB,GAEjD0B,EAAiB7yB,GAAc,CAAC,EAAGjD,EAAO,CAC5CI,OAAQzG,KAAKo8B,cAAc77B,GAC3BmG,SAAU,SACV+V,aAAckd,GACbe,GAEH,OAAOtR,EAAY,CACjB7Y,UAAWA,EACXgnB,QAASA,EACTh3B,MAAOA,EACP0J,YAAaA,EACb7M,IAAKA,EACLk7B,WAAYA,EACZC,iBAAkBA,EAClBG,gBAAiBA,EACjBD,eAAgBA,EAChBD,cAAeA,EACfG,QAASA,EACTtyB,MAAO81B,GAEX,GAKC,CACD/+B,IAAK,yBACLoB,MAAO,SAAgCq8B,GACrC,IAAIwB,EAAcjgC,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK,CAAC,EACnFkgC,EAAY,GAAG77B,OAAOo6B,EAAOl+B,MAAM48B,SAAU,KAAK94B,OAAOo6B,EAAOl+B,MAAM68B,WAAY,KAAK/4B,OAAOo6B,EAAOl+B,MAAM6J,MAAO,MAElHH,EAAQiD,GAAc,CAAC,EAAG+yB,EAAa,CACzCE,KAAMD,EACNE,OAAQF,EACRG,WAAYH,IAWd,OARIzB,EAAOl+B,MAAM4V,WACflM,EAAMkM,SAAWsoB,EAAOl+B,MAAM4V,UAG5BsoB,EAAOl+B,MAAMkjB,WACfxZ,EAAMwZ,SAAWgb,EAAOl+B,MAAMkjB,UAGzBxZ,CACT,GACC,CACDjJ,IAAK,oBACLoB,MAAO,WACL,IAAIk+B,EAAS18B,KAETuP,EAAevP,KAAKrD,MACpB+a,EAAWnI,EAAamI,SAG5B,OAFoBnI,EAAa2qB,cACL,GAAKjoB,EAAAA,SAAe2oB,QAAQljB,IAC3CiM,KAAI,SAAUkX,EAAQt6B,GACjC,OAAOm8B,EAAOC,cAAc,CAC1B9B,OAAQA,EACRt6B,MAAOA,GAEX,GACF,GACC,CACDnD,IAAK,gBACLoB,MAAO,SAAuBoP,GAC5B,IAAI5B,EAAYhM,KAAKrD,MAAMqP,UAC3B,MAA4B,oBAAdA,EAA2BA,EAAU,CACjDzL,MAAOqN,IACJ5B,CACP,GACC,CACD5O,IAAK,YACLoB,MAAO,SAAmB8F,GACxB,IAAIoQ,EAAepQ,EAAMoQ,aACrBC,EAAerQ,EAAMqQ,aACrB1H,EAAY3I,EAAM2I,WAEtBoF,EADerS,KAAKrD,MAAM0V,UACjB,CACPqC,aAAcA,EACdC,aAAcA,EACd1H,UAAWA,GAEf,GACC,CACD7P,IAAK,qBACLoB,MAAO,SAA4B0W,GACjC,IAAIrK,EAAwBqK,EAAMrK,sBAC9BE,EAAuBmK,EAAMnK,qBAC7BE,EAAgBiK,EAAMjK,cACtBE,EAAe+J,EAAM/J,cAEzBsc,EADqBznB,KAAKrD,MAAM8qB,gBACjB,CACb7T,mBAAoB/I,EACpBgJ,kBAAmB9I,EACnB0I,WAAYxI,EACZyI,UAAWvI,GAEf,GACC,CACD/N,IAAK,UACLoB,MAAO,SAAiB6M,GACtBrL,KAAK2J,KAAO0B,CACd,GACC,CACDjO,IAAK,qBACLoB,MAAO,WACL,IAAIm7B,EAAiB35B,KAAK48B,oBAC1B58B,KAAKgK,SAAS,CACZ2vB,eAAgBA,GAEpB,KAGKD,CACT,CA3hBA,CA2hBEznB,EAAAA,gBAEFhS,EAAAA,EAAAA,GAAgBy5B,GAAO,eAAgB,CACrCQ,eAAe,EACfxkB,iBAAkB,GAClB0kB,aAAc,EACdsB,YAAa,CAAC,EACd/R,eAAgB,WACd,OAAO,IACT,EACAlC,eAAgB,WACd,OAAO,IACT,EACApV,SAAU,WACR,OAAO,IACT,EACAS,sBAAuBsX,EACvBrX,iBAAkB,GAClBqW,YAAaiP,GACbgC,kBAAmB/C,GACnBiD,SAAU,CAAC,EACX70B,kBAAmB,OACnBxG,eAAgB,EAChBmH,MAAO,CAAC,IAIVqzB,GAAM3W,UAoNF,CAAC,EGtyBL,IAAI8Z,GAAmB,GACnBC,GAA4B,KAC5BC,GAAgC,KAEpC,SAASC,KACHD,KACFA,GAAgC,KAE5Bj3B,SAASa,MAAqC,MAA7Bm2B,KACnBh3B,SAASa,KAAKN,MAAMoM,cAAgBqqB,IAGtCA,GAA4B,KAEhC,CAEA,SAASG,KACPD,KACAH,GAAiBtzB,SAAQ,SAAUjN,GACjC,OAAOA,EAAS4gC,oBAClB,GACF,CAcA,SAASC,GAAe5xB,GAClBA,EAAMsjB,gBAAkB9rB,QAAuC,MAA7B+5B,IAAqCh3B,SAASa,OAClFm2B,GAA4Bh3B,SAASa,KAAKN,MAAMoM,cAChD3M,SAASa,KAAKN,MAAMoM,cAAgB,QAfxC,WACMsqB,IACF50B,EAAuB40B,IAGzB,IAAIK,EAAiB,EACrBP,GAAiBtzB,SAAQ,SAAUjN,GACjC8gC,EAAiBv7B,KAAKC,IAAIs7B,EAAgB9gC,EAASK,MAAMyX,2BAC3D,IACA2oB,GAAgC10B,EAAwB40B,GAAuCG,EACjG,CAQEC,GACAR,GAAiBtzB,SAAQ,SAAUjN,GAC7BA,EAASK,MAAM2gC,gBAAkB/xB,EAAMsjB,eACzCvyB,EAASihC,2BAEb,GACF,CAEO,SAASC,GAAuBvV,EAAWtP,GAC3CkkB,GAAiB93B,MAAK,SAAUzI,GACnC,OAAOA,EAASK,MAAM2gC,gBAAkB3kB,CAC1C,KACEA,EAAQ8C,iBAAiB,SAAU0hB,IAGrCN,GAAiBzzB,KAAK6e,EACxB,CACO,SAASwV,GAAyBxV,EAAWtP,IAClDkkB,GAAmBA,GAAiB5zB,QAAO,SAAU3M,GACnD,OAAOA,IAAa2rB,CACtB,KAEsB9rB,SACpBwc,EAAQmD,oBAAoB,SAAUqhB,IAElCJ,KACF50B,EAAuB40B,IACvBC,MAGN,CCnEA,ICGIh2B,GAAQC,GDHRy2B,GAAW,SAAkB/kB,GAC/B,OAAOA,IAAY5V,MACrB,EAEI46B,GAAiB,SAAwBhlB,GAC3C,OAAOA,EAAQilB,uBACjB,EAEO,SAASC,GAAcP,EAAe3gC,GAC3C,GAAK2gC,EAKE,IAAII,GAASJ,GAAgB,CAClC,IAAIllB,EAAUrV,OACV+6B,EAAc1lB,EAAQ0lB,YACtBC,EAAa3lB,EAAQ2lB,WACzB,MAAO,CACLt3B,OAA+B,kBAAhBq3B,EAA2BA,EAAc,EACxDt3B,MAA6B,kBAAfu3B,EAA0BA,EAAa,EAEzD,CACE,OAAOJ,GAAeL,EACxB,CAdE,MAAO,CACL72B,OAAQ9J,EAAMqhC,aACdx3B,MAAO7J,EAAMshC,YAanB,CAmCO,SAASC,GAAgBvlB,GAC9B,OAAI+kB,GAAS/kB,IAAY7S,SAASq4B,gBACzB,CACL53B,IAAK,YAAaxD,OAASA,OAAOq7B,QAAUt4B,SAASq4B,gBAAgBlxB,UACrEsJ,KAAM,YAAaxT,OAASA,OAAOs7B,QAAUv4B,SAASq4B,gBAAgBnxB,YAGjE,CACLzG,IAAKoS,EAAQ1L,UACbsJ,KAAMoC,EAAQ3L,WAGpB,CCnEA,SAASnE,GAAQC,EAAQC,GAAkB,IAAIvJ,EAAOvC,OAAOuC,KAAKsJ,GAAS,GAAI7L,OAAOyC,sBAAuB,CAAE,IAAIsJ,EAAU/L,OAAOyC,sBAAsBoJ,GAAaC,IAAgBC,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOjM,OAAOkM,yBAAyBL,EAAQI,GAAKpM,UAAY,KAAI0C,EAAK4J,KAAKC,MAAM7J,EAAMwJ,EAAU,CAAE,OAAOxJ,CAAM,CAc7U,IAEH8+B,GAAY,WACd,MAAyB,qBAAXv7B,OAAyBA,YAASjC,CAClD,EAEIy9B,IAAkBt3B,GAAQD,GAE9B,SAAU4C,GAGR,SAAS20B,IACP,IAAI1nB,EAEAhN,EAEJxN,EAAgB2D,KAAMu+B,GAEtB,IAAK,IAAIznB,EAAO1a,UAAUD,OAAQ4a,EAAO,IAAI9a,MAAM6a,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ5a,UAAU4a,GAuGzB,OApGAnN,EAAQpM,EAA2BuC,MAAO6W,EAAmBhZ,EAAgB0gC,IAAiB5gC,KAAK0L,MAAMwN,EAAkB,CAAC7W,MAAMS,OAAOsW,MAEzI9W,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,UAAWy0B,OAE1Dr+B,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,cAAc,IAE7D5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,mBAAoB,IAEnE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,oBAAqB,IAEpE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,4BAAwB,IAEvE5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,cAAU,IAEzD5J,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,QAhDnD,SAAuBnN,GAAU,IAAK,IAAIE,EAAI,EAAGA,EAAIR,UAAUD,OAAQS,IAAK,CAAE,IAAIyC,EAAyB,MAAhBjD,UAAUQ,GAAaR,UAAUQ,GAAK,CAAC,EAAOA,EAAI,EAAKiM,GAAQxJ,GAAQ,GAAMkK,SAAQ,SAAUnM,IAAO6C,EAAAA,EAAAA,GAAgBvD,EAAQU,EAAKiC,EAAOjC,GAAO,IAAeH,OAAOuM,0BAA6BvM,OAAOwM,iBAAiB/M,EAAQO,OAAOuM,0BAA0BnK,IAAmBwJ,GAAQxJ,GAAQkK,SAAQ,SAAUnM,GAAOH,OAAOC,eAAeR,EAAQU,EAAKH,OAAOkM,yBAAyB9J,EAAQjC,GAAO,GAAM,CAAE,OAAOV,CAAQ,CAgDzc4M,CAAc,CAAC,EAAGu0B,GAAch0B,EAAMlN,MAAM2gC,cAAezzB,EAAMlN,OAAQ,CAC/HsN,aAAa,EACb+C,WAAY,EACZC,UAAW,MAGbhN,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,kBAAkB,SAAU8O,IACrEA,GAAaA,aAAmBsF,SAClCC,QAAQC,KAAK,qEAGftU,EAAMuU,OAASzF,EAEf9O,EAAM20B,gBACR,KAEAv+B,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,kBAAkB,SAAUnL,GACzE,IAAIuO,EAAYvO,EAAKuO,UAErB,GAAIpD,EAAMqC,MAAMe,YAAcA,EAA9B,CAIA,IAAIqwB,EAAgBzzB,EAAMlN,MAAM2gC,cAE5BA,IACoC,oBAA3BA,EAAcmB,SACvBnB,EAAcmB,SAAS,EAAGxxB,EAAYpD,EAAM60B,kBAE5CpB,EAAcrwB,UAAYA,EAAYpD,EAAM60B,iBARhD,CAWF,KAEAz+B,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,2BAA2B,SAAU8O,GAC9EA,IAAY5V,OACdA,OAAO0Y,iBAAiB,SAAU5R,EAAMuT,WAAW,GAEnDvT,EAAMsT,qBAAqB/C,kBAAkBzB,EAAS9O,EAAMuT,UAEhE,KAEAnd,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,6BAA6B,SAAU8O,GAChFA,IAAY5V,OACdA,OAAO+Y,oBAAoB,SAAUjS,EAAMuT,WAAW,GAC7CzE,GACT9O,EAAMsT,qBAAqBxB,qBAAqBhD,EAAS9O,EAAMuT,UAEnE,KAEAnd,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,aAAa,WAC1DA,EAAM20B,gBACR,KAEAv+B,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,6BAA6B,WAC1E,GAAKA,EAAM80B,WAAX,CAIA,IAAItsB,EAAWxI,EAAMlN,MAAM0V,SACvBirB,EAAgBzzB,EAAMlN,MAAM2gC,cAEhC,GAAIA,EAAe,CACjB,IAAI73B,EAAey4B,GAAgBZ,GAC/BtwB,EAAanL,KAAKC,IAAI,EAAG2D,EAAa8Q,KAAO1M,EAAM+0B,mBACnD3xB,EAAYpL,KAAKC,IAAI,EAAG2D,EAAac,IAAMsD,EAAM60B,kBAErD70B,EAAMG,SAAS,CACbC,aAAa,EACb+C,WAAYA,EACZC,UAAWA,IAGboF,EAAS,CACPrF,WAAYA,EACZC,UAAWA,GAEf,CApBA,CAqBF,KAEAhN,EAAAA,EAAAA,IAAgB6J,EAAAA,EAAAA,GAAuBD,GAAQ,sBAAsB,WACnEA,EAAMG,SAAS,CACbC,aAAa,GAEjB,IAEOJ,CACT,CAiGA,OAnNA1L,EAAUogC,EAAgB30B,GAoH1BvM,EAAakhC,EAAgB,CAAC,CAC5BnhC,IAAK,iBACLoB,MAAO,WACL,IAAI8+B,EAAgBlhC,UAAUD,OAAS,QAAsB2E,IAAjB1E,UAAU,GAAmBA,UAAU,GAAK4D,KAAKrD,MAAM2gC,cAC/FjhB,EAAWrc,KAAKrD,MAAM0f,SACtBlM,EAAcnQ,KAAKkM,MACnBzF,EAAS0J,EAAY1J,OACrBD,EAAQ2J,EAAY3J,MACpBq4B,EAAW7+B,KAAKoe,QAAU0gB,GAAAA,YAAqB9+B,MAEnD,GAAI6+B,aAAoB5gB,SAAWqf,EAAe,CAChD,IAAI18B,ED1HL,SAA2B+X,EAASomB,GACzC,GAAIrB,GAASqB,IAAcj5B,SAASq4B,gBAAiB,CACnD,IAAIa,EAAmBl5B,SAASq4B,gBAC5Bc,EAActB,GAAehlB,GAC7BumB,EAAgBvB,GAAeqB,GACnC,MAAO,CACLz4B,IAAK04B,EAAY14B,IAAM24B,EAAc34B,IACrCgQ,KAAM0oB,EAAY1oB,KAAO2oB,EAAc3oB,KAE3C,CACE,IAAI9Q,EAAey4B,GAAgBa,GAE/BI,EAAexB,GAAehlB,GAE9BymB,EAAiBzB,GAAeoB,GAEpC,MAAO,CACLx4B,IAAK44B,EAAa54B,IAAMd,EAAac,IAAM64B,EAAe74B,IAC1DgQ,KAAM4oB,EAAa5oB,KAAO9Q,EAAa8Q,KAAO6oB,EAAe7oB,KAGnE,CCqGqB8oB,CAAkBR,EAAUvB,GACzCt9B,KAAK0+B,iBAAmB99B,EAAO2F,IAC/BvG,KAAK4+B,kBAAoBh+B,EAAO2V,IAClC,CAEA,IAAI+oB,EAAazB,GAAcP,EAAet9B,KAAKrD,OAE/C8J,IAAW64B,EAAW74B,QAAUD,IAAU84B,EAAW94B,QACvDxG,KAAKgK,SAAS,CACZvD,OAAQ64B,EAAW74B,OACnBD,MAAO84B,EAAW94B,QAEpB6V,EAAS,CACP5V,OAAQ64B,EAAW74B,OACnBD,MAAO84B,EAAW94B,QAGxB,GACC,CACDpJ,IAAK,oBACLoB,MAAO,WACL,IAAI8+B,EAAgBt9B,KAAKrD,MAAM2gC,cAC/Bt9B,KAAKmd,qBAAuBlF,IAC5BjY,KAAKw+B,eAAelB,GAEhBA,IACFE,GAAuBx9B,KAAMs9B,GAE7Bt9B,KAAKu/B,wBAAwBjC,IAG/Bt9B,KAAK2+B,YAAa,CACpB,GACC,CACDvhC,IAAK,qBACLoB,MAAO,SAA4BwR,EAAWN,GAC5C,IAAI4tB,EAAgBt9B,KAAKrD,MAAM2gC,cAC3BkC,EAAoBxvB,EAAUstB,cAE9BkC,IAAsBlC,GAAsC,MAArBkC,GAA8C,MAAjBlC,IACtEt9B,KAAKw+B,eAAelB,GACpBG,GAAyBz9B,KAAMw/B,GAC/BhC,GAAuBx9B,KAAMs9B,GAE7Bt9B,KAAKy/B,0BAA0BD,GAE/Bx/B,KAAKu/B,wBAAwBjC,GAEjC,GACC,CACDlgC,IAAK,uBACLoB,MAAO,WACL,IAAI8+B,EAAgBt9B,KAAKrD,MAAM2gC,cAE3BA,IACFG,GAAyBz9B,KAAMs9B,GAE/Bt9B,KAAKy/B,0BAA0BnC,IAGjCt9B,KAAK2+B,YAAa,CACpB,GACC,CACDvhC,IAAK,SACLoB,MAAO,WACL,IAAIkZ,EAAW1X,KAAKrD,MAAM+a,SACtB5G,EAAe9Q,KAAKkM,MACpBjC,EAAc6G,EAAa7G,YAC3BgD,EAAY6D,EAAa7D,UACzBD,EAAa8D,EAAa9D,WAC1BvG,EAASqK,EAAarK,OACtBD,EAAQsK,EAAatK,MACzB,OAAOkR,EAAS,CACdgoB,cAAe1/B,KAAK2/B,eACpBnhB,cAAexe,KAAKye,eACpBhY,OAAQA,EACRwD,YAAaA,EACb+C,WAAYA,EACZC,UAAWA,EACXzG,MAAOA,GAEX,KAGK+3B,CACT,CArNA,CAqNEtsB,EAAAA,gBAAsBhS,EAAAA,EAAAA,GAAgB+G,GAAQ,YAAqD,MA6BjGC,KAEJhH,EAAAA,EAAAA,GAAgBs+B,GAAgB,eAAgB,CAC9CliB,SAAU,WAAqB,EAC/BhK,SAAU,WAAqB,EAC/B+B,2BA/PgC,IAgQhCkpB,cAAegB,KACfN,aAAc,EACdC,YAAa,G,iBC1RA,SAASn0B,EAAuBpM,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIkiC,eAAe,6DAE3B,OAAOliC,CACT,C,iCCLe,SAASwU,IAYtB,OAXAA,EAAWjV,OAAOqY,OAASrY,OAAOqY,OAAOrX,OAAS,SAAUvB,GAC1D,IAAK,IAAIE,EAAI,EAAGA,EAAIR,UAAUD,OAAQS,IAAK,CACzC,IAAIyC,EAASjD,UAAUQ,GACvB,IAAK,IAAIQ,KAAOiC,EACVpC,OAAOO,UAAUqX,eAAelX,KAAK0B,EAAQjC,KAC/CV,EAAOU,GAAOiC,EAAOjC,GAG3B,CACA,OAAOV,CACT,EACOwV,EAAS7I,MAAMrJ,KAAM5D,UAC9B,C,iCCbe,SAASyjC,EAAgB/hC,EAAGutB,GAKzC,OAJAwU,EAAkB5iC,OAAOc,eAAiBd,OAAOc,eAAeE,OAAS,SAAyBH,EAAGutB,GAEnG,OADAvtB,EAAEI,UAAYmtB,EACPvtB,CACT,EACO+hC,EAAgB/hC,EAAGutB,EAC5B,C","sources":["../node_modules/clsx/dist/clsx.m.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-virtualized/dist/es/Grid/types.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/types.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/List/types.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  \"cellRenderer\": PropTypes.func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"deferredMeasurementCache\": PropTypes.object,\n  \"horizontalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"styleCache\": PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"visibleColumnIndices\": PropTypes.object.isRequired,\n  \"visibleRowIndices\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"clientWidth\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"scrollWidth\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": PropTypes.bool.isRequired,\n  \"vertical\": PropTypes.bool.isRequired,\n  \"size\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": PropTypes.number.isRequired,\n  \"columnOverscanStopIndex\": PropTypes.number.isRequired,\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStartIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStopIndex\": PropTypes.number.isRequired,\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": PropTypes.oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": PropTypes.oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": PropTypes.number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": PropTypes.number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": PropTypes.number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": PropTypes.number,\n  \"stop\": PropTypes.number\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","var bpfrpt_proptype_Index = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_PositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeAndPositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_Index };\nexport { bpfrpt_proptype_PositionInfo };\nexport { bpfrpt_proptype_ScrollPosition };\nexport { bpfrpt_proptype_SizeAndPositionInfo };\nexport { bpfrpt_proptype_SizeInfo };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import * as React from 'react';\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired,\n  \"startIndex\": PropTypes.number.isRequired,\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_RowRendererParams };\nexport { bpfrpt_proptype_RowRenderer };\nexport { bpfrpt_proptype_RenderedRows };\nexport { bpfrpt_proptype_Scroll };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}"],"names":["r","e","t","f","n","Array","isArray","length","arguments","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","toPropertyKey","key","_createClass","protoProps","staticProps","prototype","_possibleConstructorReturn","self","call","assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","constructor","value","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","_objectWithoutProperties","source","excluded","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","this","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_ref2","_lastMeasuredIndex","index","Error","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","undefined","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","document","createElement","win","scrollbarSize","recalc","canUseDOM","scrollDiv","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_assertThisInitialized","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","polyfill","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","minLen","slice","name","from","test","_toConsumableArray","iter","Symbol","iterator","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","_slicedToArray","l","u","a","next","done","accessibilityOverscanIndicesGetter","ge","c","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getScrollOffset","documentElement","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","container","containerElement","elementRect","containerRect","_elementRect","_containerRect","getPositionOffset","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","ReferenceError","_setPrototypeOf"],"sourceRoot":""}