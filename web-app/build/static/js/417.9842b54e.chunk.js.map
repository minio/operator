{"version":3,"file":"static/js/417.9842b54e.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","concat","capitalize","position","disablePointerEvents","variant","_ref","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","_defineProperty","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","className","_props$component","component","_props$disablePointer","_props$disableTypogra","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","componentWillMount","state","this","constructor","getDerivedStateFromProps","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","calculateSizeAndPositionDataAndUpdateScrollOffset","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","key","_ref2","_lastMeasuredIndex","index","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","i","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","Object","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","document","createElement","scrollbarSize","recalc","canUseDOM","scrollDiv","style","top","width","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","e","indexOf","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getScrollOffset","documentElement","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","container","containerElement","elementRect","containerRect","_elementRect","_containerRect","getPositionOffset","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"sourceRoot":""}