{"version":3,"file":"static/js/98.7bedbe0f.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/Grid/types.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/types.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/List/types.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"sourcesContent":["function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nexport { _possibleConstructorReturn as default };","function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nexport { _inherits as default };","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], t.indexOf(o) >= 0 || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  \"cellRenderer\": PropTypes.func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"deferredMeasurementCache\": PropTypes.object,\n  \"horizontalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"styleCache\": PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"visibleColumnIndices\": PropTypes.object.isRequired,\n  \"visibleRowIndices\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"clientWidth\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"scrollWidth\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": PropTypes.bool.isRequired,\n  \"vertical\": PropTypes.bool.isRequired,\n  \"size\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": PropTypes.number.isRequired,\n  \"columnOverscanStopIndex\": PropTypes.number.isRequired,\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStartIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStopIndex\": PropTypes.number.isRequired,\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": PropTypes.oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": PropTypes.oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": PropTypes.number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": PropTypes.number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": PropTypes.number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": PropTypes.number,\n  \"stop\": PropTypes.number\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","var bpfrpt_proptype_Index = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_PositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeAndPositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_Index };\nexport { bpfrpt_proptype_PositionInfo };\nexport { bpfrpt_proptype_ScrollPosition };\nexport { bpfrpt_proptype_SizeAndPositionInfo };\nexport { bpfrpt_proptype_SizeInfo };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import * as React from 'react';\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired,\n  \"startIndex\": PropTypes.number.isRequired,\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_RowRendererParams };\nexport { bpfrpt_proptype_RowRenderer };\nexport { bpfrpt_proptype_RenderedRows };\nexport { bpfrpt_proptype_Scroll };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"names":["_classCallCheck","a","n","TypeError","_defineProperties","e","r","t","length","o","enumerable","configurable","writable","Object","defineProperty","toPropertyKey","key","_createClass","prototype","_possibleConstructorReturn","assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","create","constructor","value","componentWillMount","state","this","getDerivedStateFromProps","props","undefined","setState","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","f","Array","isArray","arguments","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","_objectWithoutProperties","i","objectWithoutPropertiesLoose","getOwnPropertySymbols","indexOf","propertyIsEnumerable","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","keys","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","document","createElement","win","scrollbarSize","recalc","canUseDOM","scrollDiv","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","_arrayLikeToArray","_unsupportedIterableToArray","slice","from","test","_toConsumableArray","Symbol","iterator","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","_slicedToArray","l","u","next","done","accessibilityOverscanIndicesGetter","ge","c","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getScrollOffset","documentElement","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","container","containerElement","elementRect","containerRect","_elementRect","_containerRect","getPositionOffset","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"sourceRoot":""}