{"version":3,"file":"static/js/331.a7088ae1.chunk.js","mappings":"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","sources":["screens/Console/Common/Hooks/useApi.tsx","screens/Console/Tenants/TenantDetails/DeletePod.tsx","screens/Console/Tenants/TenantDetails/PodsSummary.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any, headers?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data, headers)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\nimport { IPodListElement } from \"../ListTenants/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeletePod {\n  deleteOpen: boolean;\n  selectedPod: IPodListElement;\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\n}\n\nconst DeletePod = ({\n  deleteOpen,\n  selectedPod,\n  closeDeleteModalAndRefresh,\n}: IDeletePod) => {\n  const dispatch = useAppDispatch();\n  const [retypePod, setRetypePod] = useState(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const onConfirmDelete = () => {\n    if (retypePod !== selectedPod.name) {\n      setErrorSnackMessage({\n        errorMessage: \"Tenant name is incorrect\",\n        detailedError: \"\",\n      });\n      return;\n    }\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/namespaces/${selectedPod.namespace}/tenants/${selectedPod.tenant}/pods/${selectedPod.name}`\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Pod`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypePod !== selectedPod.name || deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          To continue please type <b>{selectedPod.name}</b> in the box.\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"retype-pod\"\n              name=\"retype-pod\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypePod(event.target.value);\n              }}\n              label=\"\"\n              value={retypePod}\n            />\n          </Grid>\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeletePod;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  containerForHeader,\n  tableStyles,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { niceDays } from \"../../../../common/utils\";\nimport { IPodListElement } from \"../ListTenants/types\";\n\nimport api from \"../../../../common/api\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport DeletePod from \"./DeletePod\";\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport { SearchIcon, Button } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\ninterface IPodsSummary {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...tableStyles,\n    ...containerForHeader,\n  });\n\nconst PodsSummary = ({ classes }: IPodsSummary) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { tenantName, tenantNamespace } = useParams();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant\n  );\n\n  const [pods, setPods] = useState<IPodListElement[]>([]);\n  const [loadingPods, setLoadingPods] = useState<boolean>(true);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedPod, setSelectedPod] = useState<any>(null);\n  const [filter, setFilter] = useState(\"\");\n  const [logReportFileContent, setLogReportFileContent] = useState<string>(\"\");\n  const [startLogReport, setStartLogReport] = useState<boolean>(false);\n  const [downloadReport, setDownloadReport] = useState<boolean>(false);\n  const [downloadSuccess, setDownloadSuccess] = useState<boolean>(false);\n  const [reportError, setReportError] = useState<boolean>(false);\n  const [filename, setFilename] = useState<string>(\"\");\n\n  const podViewAction = (pod: IPodListElement) => {\n    navigate(\n      `/namespaces/${tenantNamespace || \"\"}/tenants/${tenantName || \"\"}/pods/${\n        pod.name\n      }`\n    );\n    return;\n  };\n\n  useEffect(() => {\n    if (downloadReport) {\n      let element = document.createElement(\"a\");\n      element.setAttribute(\n        \"href\",\n        `data:application/gzip;base64,${logReportFileContent}`\n      );\n      element.setAttribute(\"download\", filename);\n\n      element.style.display = \"none\";\n      document.body.appendChild(element);\n\n      element.click();\n\n      document.body.removeChild(element);\n      setDownloadReport(false);\n      setDownloadSuccess(true);\n    }\n  }, [downloadReport, filename, logReportFileContent]);\n\n  const closeDeleteModalAndRefresh = (reloadData: boolean) => {\n    setDeleteOpen(false);\n    setLoadingPods(true);\n  };\n\n  const confirmDeletePod = (pod: IPodListElement) => {\n    pod.tenant = tenantName;\n    pod.namespace = tenantNamespace;\n    setSelectedPod(pod);\n    setDeleteOpen(true);\n  };\n\n  const filteredRecords: IPodListElement[] = pods.filter((elementItem) =>\n    elementItem.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const podTableActions = [\n    { type: \"view\", onClick: podViewAction },\n    { type: \"delete\", onClick: confirmDeletePod },\n  ];\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoadingPods(true);\n    }\n  }, [loadingTenant]);\n\n  useEffect(() => {\n    if (loadingPods) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace || \"\"}/tenants/${\n            tenantName || \"\"\n          }/pods`\n        )\n        .then((result: IPodListElement[]) => {\n          for (let i = 0; i < result.length; i++) {\n            let currentTime = (Date.now() / 1000) | 0;\n            result[i].time = niceDays(\n              (currentTime - parseInt(result[i].timeCreated)).toString()\n            );\n          }\n          setPods(result);\n          setLoadingPods(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(\n            setErrorSnackMessage({\n              errorMessage: \"Error loading pods\",\n              detailedError: err.detailedError,\n            })\n          );\n        });\n    }\n  }, [loadingPods, tenantName, tenantNamespace, dispatch]);\n\n  useEffect(() => {\n    if (startLogReport) {\n      setLogReportFileContent(\"\");\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/log-report`\n        )\n        .then(async (res: any) => {\n          setLogReportFileContent(decodeURIComponent(res.blob));\n          //@ts-ignore\n          setFilename(res.filename || \"tenant-log-report.zip\");\n          setStartLogReport(false);\n          setDownloadReport(true);\n          if (res.filename.length === 0 || res.blob.length === 0) {\n            setReportError(true);\n          } else {\n            setReportError(false);\n          }\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setStartLogReport(false);\n          setReportError(true);\n        });\n    } else {\n      // reset start status\n      setStartLogReport(false);\n    }\n  }, [tenantName, tenantNamespace, startLogReport, dispatch]);\n\n  const generateTenantLogReport = () => {\n    setStartLogReport(true);\n  };\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeletePod\n          deleteOpen={deleteOpen}\n          selectedPod={selectedPod}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <Grid container>\n        <Grid item xs={4}>\n          <h1 className={classes.sectionTitle}>Pods</h1>\n        </Grid>\n        <Grid item xs={4}>\n          {downloadSuccess &&\n            !reportError &&\n            \"Tenant report downloaded to \" + filename}\n          {reportError && \"There was a problem generating the report\"}\n        </Grid>\n        <Grid item xs={4} display={\"flex\"} justifyContent={\"flex-end\"}>\n          <TooltipWrapper tooltip=\"A report of all tenant logs will be generated as a .zip file and downloaded for analysis. This report can be uploaded to SUBNET to enable our team to best assist you in troubleshooting.\">\n            <Button\n              id=\"log_report\"\n              onClick={generateTenantLogReport}\n              disabled={pods.length === 0}\n            >\n              Download Log Report\n            </Button>\n          </TooltipWrapper>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} className={classes.actionsTray}>\n        <TextField\n          placeholder=\"Search Pods\"\n          className={classes.searchField}\n          id=\"search-resource\"\n          label=\"\"\n          InputProps={{\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          onChange={(e) => {\n            setFilter(e.target.value);\n          }}\n          variant=\"standard\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.tableBlock}>\n        <TableWrapper\n          columns={[\n            { label: \"Name\", elementKey: \"name\", width: 200 },\n            { label: \"Status\", elementKey: \"status\" },\n            { label: \"Age\", elementKey: \"time\" },\n            { label: \"Pod IP\", elementKey: \"podIP\" },\n            {\n              label: \"Restarts\",\n              elementKey: \"restarts\",\n              renderFunction: (input) => {\n                return input !== null ? input : 0;\n              },\n            },\n            { label: \"Node\", elementKey: \"node\" },\n          ]}\n          isLoading={loadingPods}\n          records={filteredRecords}\n          itemActions={podTableActions}\n          entityName=\"Pods\"\n          idField=\"name\"\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PodsSummary);\n"],"names":["onSuccess","onError","useState","isLoading","setIsLoading","method","url","data","headers","api","then","res","catch","err","deleteOpen","selectedPod","closeDeleteModalAndRefresh","dispatch","useAppDispatch","retypePod","setRetypePod","useApi","setErrorSnackMessage","deleteLoading","invokeDeleteApi","ConfirmDialog","title","confirmText","isOpen","titleIcon","onConfirm","name","namespace","tenant","errorMessage","detailedError","onClose","confirmButtonProps","disabled","confirmationContent","DialogContentText","Grid","item","xs","InputBoxWrapper","id","onChange","event","target","value","label","withStyles","theme","createStyles","tenantDetailsStyles","tableStyles","containerForHeader","classes","navigate","useNavigate","useParams","tenantName","tenantNamespace","loadingTenant","useSelector","state","tenants","pods","setPods","loadingPods","setLoadingPods","setDeleteOpen","setSelectedPod","filter","setFilter","logReportFileContent","setLogReportFileContent","startLogReport","setStartLogReport","downloadReport","setDownloadReport","downloadSuccess","setDownloadSuccess","reportError","setReportError","filename","setFilename","useEffect","element","document","createElement","setAttribute","style","display","body","appendChild","click","removeChild","filteredRecords","elementItem","toLowerCase","includes","podTableActions","type","onClick","pod","result","i","length","currentTime","Date","now","time","niceDays","parseInt","timeCreated","toString","decodeURIComponent","blob","Fragment","reloadData","container","className","sectionTitle","justifyContent","TooltipWrapper","tooltip","actionsTray","TextField","placeholder","searchField","InputProps","disableUnderline","startAdornment","InputAdornment","position","e","variant","tableBlock","TableWrapper","columns","elementKey","width","renderFunction","input","records","itemActions","entityName","idField"],"sourceRoot":""}