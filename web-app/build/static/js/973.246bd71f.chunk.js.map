{"version":3,"file":"static/js/973.246bd71f.chunk.js","mappings":"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","sources":["screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/FormHr.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/TooltipWrapper/TooltipWrapper.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPActiveDirectory.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPOpenID.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPBuiltIn.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Common/SectionH1.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/VaultKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AzureKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GCPKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GemaltoKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AWSKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NamespaceSelector.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/common.ts","screens/Console/Tenants/AddTenant/CreateTenantButton.tsx","screens/Console/Tenants/AddTenant/NewTenantCredentials.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/Console/Tenants/HelpBox/TLSHelpBox.tsx","screens/Console/Tenants/LogoComponents.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/Casino.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/Divider/Divider.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button, CopyIcon } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <TooltipWrapper tooltip={\"Copy\"}>\n                <CopyToClipboard text={value}>\n                  <Button\n                    id={\"copy-clipboard\"}\n                    aria-label=\"copy\"\n                    onClick={() => {}}\n                    onMouseDown={() => {}}\n                    style={{\n                      width: \"28px\",\n                      height: \"28px\",\n                      padding: \"0px\",\n                    }}\n                    icon={<CopyIcon />}\n                  />\n                </CopyToClipboard>\n              </TooltipWrapper>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  Button,\n  DownloadIcon,\n  ServiceAccountCredentialsIcon,\n  WarnIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  const downloadImport = () => {\n    let consoleExtras = {};\n\n    if (consoleCreds) {\n      if (!Array.isArray(consoleCreds)) {\n        consoleExtras = {\n          url: consoleCreds.url,\n          accessKey: consoleCreds.accessKey,\n          secretKey: consoleCreds.secretKey,\n          api: \"s3v4\",\n          path: \"auto\",\n        };\n      } else {\n        const cCreds = consoleCreds.map((itemMap) => {\n          return {\n            url: itemMap.url,\n            accessKey: itemMap.accessKey,\n            secretKey: itemMap.secretKey,\n            api: \"s3v4\",\n            path: \"auto\",\n          };\n        });\n        consoleExtras = cCreds[0];\n      }\n    } else {\n      consoleExtras = {\n        url: newServiceAccount.url,\n        accessKey: newServiceAccount.accessKey,\n        secretKey: newServiceAccount.secretKey,\n        api: \"s3v4\",\n        path: \"auto\",\n      };\n    }\n\n    download(\n      \"credentials.json\",\n      JSON.stringify({\n        ...consoleExtras,\n      })\n    );\n  };\n\n  const downloaddAllCredentials = () => {\n    let allCredentials = {};\n    if (\n      consoleCreds &&\n      Array.isArray(consoleCreds) &&\n      consoleCreds.length > 1\n    ) {\n      const cCreds = consoleCreds.map((itemMap) => {\n        return {\n          accessKey: itemMap.accessKey,\n          secretKey: itemMap.secretKey,\n        };\n      });\n      allCredentials = cCreds;\n    }\n    download(\n      \"all_credentials.json\",\n      JSON.stringify({\n        ...allCredentials,\n      })\n    );\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <TooltipWrapper\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n              >\n                <Button\n                  id={\"download-button\"}\n                  label={\"Download for import\"}\n                  className={classes.buttonSpacer}\n                  onClick={downloadImport}\n                  icon={<DownloadIcon />}\n                  variant=\"callAction\"\n                />\n              </TooltipWrapper>\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <TooltipWrapper\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                >\n                  <Button\n                    id={\"download-all-button\"}\n                    label={\"Download all access credentials\"}\n                    className={classes.buttonSpacer}\n                    onClick={downloaddAllCredentials}\n                    icon={<DownloadIcon />}\n                    variant=\"callAction\"\n                    color=\"primary\"\n                  />\n                </TooltipWrapper>\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, CopyIcon, HelpIcon } from \"mds\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport { HelpIcon } from \"mds\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Operator\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport styled from \"@emotion/styled\";\n\nconst FormHr = styled(\"hr\")`\n  border-top: 0;\n  border-left: 0;\n  border-right: 0;\n  border-color: #999999;\n  background-color: transparent;\n`;\n\nexport default FormHr;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { cloneElement } from \"react\";\nimport { Tooltip } from \"@mui/material\";\n\ninterface ITooltipWrapperProps {\n  tooltip: string;\n  children: any;\n  errorProps?: any;\n  placement?:\n    | \"bottom-end\"\n    | \"bottom-start\"\n    | \"bottom\"\n    | \"left-end\"\n    | \"left-start\"\n    | \"left\"\n    | \"right-end\"\n    | \"right-start\"\n    | \"right\"\n    | \"top-end\"\n    | \"top-start\"\n    | \"top\";\n}\n\nconst TooltipWrapper = ({\n  tooltip,\n  children,\n  errorProps = null,\n  placement,\n}: ITooltipWrapperProps) => {\n  return (\n    <Tooltip title={tooltip} placement={placement}>\n      <span>\n        {errorProps ? cloneElement(children, { ...errorProps }) : children}\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default TooltipWrapper;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  Divider,\n  Grid,\n  IconButton,\n  Paper,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport {\n  addNewMinIODomain,\n  isPageValid,\n  removeMinIODomain,\n  setEnvVars,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    wrapperContainer: {\n      display: \"flex\",\n      marginBottom: 15,\n    },\n    envVarRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...formFieldStyles,\n  });\n\nconst Configure = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const exposeMinIO = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeMinIO\n  );\n  const exposeConsole = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeConsole\n  );\n  const setDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.setDomains\n  );\n  const consoleDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.consoleDomain\n  );\n  const minioDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.minioDomains\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const tenantEnvVars = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.envVars\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const customRuntime = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customRuntime\n  );\n  const runtimeClassName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.runtimeClassName\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup!,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup!) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (setDomains) {\n      const minioExtraValidations = minioDomains.map((validation, index) => {\n        return {\n          fieldKey: `minio-domain-${index.toString()}`,\n          required: false,\n          value: validation,\n          pattern: /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?$/,\n          customPatternMessage:\n            \"MinIO domain is not in the form of http|https://subdomain.domain\",\n        };\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        ...minioExtraValidations,\n        {\n          fieldKey: \"console_domain\",\n          required: false,\n          value: consoleDomain,\n          pattern:\n            /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?(\\/[a-zA-Z0-9\\-./]*)?$/,\n          customPatternMessage:\n            \"Console domain is not in the form of http|https://subdomain.domain:port/subpath1/subpath2\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    dispatch,\n    tenantCustom,\n    tenantSecurityContext,\n    setDomains,\n    consoleDomain,\n    minioDomains,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const updateMinIODomain = (value: string, index: number) => {\n    const copyDomains = [...minioDomains];\n    copyDomains[index] = value;\n\n    updateField(\"minioDomains\", copyDomains);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Configure</H3Section>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h4 className={classes.h3Section}>Services</h4>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP via\n          LoadBalancer service type.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MinIO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"custom_domains\"\n          id=\"custom_domains\"\n          name=\"custom_domains\"\n          checked={setDomains}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"setDomains\", checked);\n          }}\n          label={\"Set Custom Domains\"}\n        />\n      </Grid>\n      {setDomains && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Domains for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"console_domain\"\n                  name=\"console_domain\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"consoleDomain\", e.target.value);\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\n                  }}\n                  label=\"Console Domain\"\n                  value={consoleDomain}\n                  placeholder={\n                    \"Eg. http://subdomain.domain:port/subpath1/subpath2\"\n                  }\n                  error={validationErrors[\"console_domain\"] || \"\"}\n                />\n              </div>\n              <div>\n                <h4>MinIO Domains</h4>\n                <div className={`${classes.responsiveSectionItem}`}>\n                  {minioDomains.map((domain, index) => {\n                    return (\n                      <div\n                        className={`${classes.containerItem} ${classes.wrapperContainer}`}\n                        key={`minio-domain-key-${index.toString()}`}\n                      >\n                        <InputBoxWrapper\n                          id={`minio-domain-${index.toString()}`}\n                          name={`minio-domain-${index.toString()}`}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            updateMinIODomain(e.target.value, index);\n                          }}\n                          label={`MinIO Domain ${index + 1}`}\n                          value={domain}\n                          placeholder={\"Eg. http://subdomain.domain\"}\n                          error={\n                            validationErrors[\n                              `minio-domain-${index.toString()}`\n                            ] || \"\"\n                          }\n                        />\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(addNewMinIODomain())}\n                            disabled={index !== minioDomains.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(removeMinIODomain(index))}\n                            disabled={minioDomains.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup!}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={tenantSecurityContext.fsGroupChangePolicy!}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"tenantSecurityContext\", {\n                          ...tenantSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"customRuntime\"\n          id=\"tenant_custom_runtime\"\n          name=\"tenant_custom_runtime\"\n          checked={customRuntime}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"customRuntime\", checked);\n          }}\n          label={\"Custom Runtime Configurations\"}\n        />\n      </Grid>\n      {customRuntime && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Runtime Configurations\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"tenant_runtime_runtimeClassName\"\n                  name=\"tenant_runtime_runtimeClassName\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"runtimeClassName\", e.target.value);\n                    cleanValidation(\"tenant_runtime_runtimeClassName\");\n                  }}\n                  label=\"Runtime Class Name\"\n                  value={runtimeClassName}\n                  error={\n                    validationErrors[\"tenant_runtime_runtimeClassName\"] || \"\"\n                  }\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Divider />\n\n      <div className={classes.headerElement}>\n        <H3Section>Additional Environment Variables</H3Section>\n        <span className={classes.descriptionText}>\n          Define additional environment variables to be used by your MinIO pods\n        </span>\n      </div>\n      <Grid container>\n        {tenantEnvVars.map((envVar, index) => (\n          <Grid\n            item\n            xs={12}\n            className={`${classes.formFieldRow} ${classes.envVarRow}`}\n            key={`tenant-envVar-${index.toString()}`}\n          >\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_key\"\n                name=\"env_var_key\"\n                label=\"Key\"\n                value={envVar.key}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: e.target.value, value: keyPair.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_key_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_value\"\n                name=\"env_var_value\"\n                label=\"Value\"\n                value={envVar.value}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: keyPair.key, value: e.target.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_value_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={2} className={classes.rowActions}>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = [...tenantEnvVars];\n                    existingEnvVars.push({ key: \"\", value: \"\" });\n\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={index !== tenantEnvVars.length - 1}\n                >\n                  <AddIcon />\n                </IconButton>\n              </div>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = tenantEnvVars.filter(\n                      (item, fIndex) => fIndex !== index\n                    );\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={tenantEnvVars.length <= 1}\n                >\n                  <RemoveIcon />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Configure);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addIDPADGroupAtIndex,\n  addIDPADUsrAtIndex,\n  isPageValid,\n  removeIDPADGroupAtIndex,\n  removeIDPADUsrAtIndex,\n  setIDPADGroupAtIndex,\n  setIDPADUsrAtIndex,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { clearValidationError } from \"../../../utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    adUserDnRows: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPActiveDirectory = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const ADURL = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADURL\n  );\n  const ADSkipTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADSkipTLS\n  );\n  const ADServerInsecure = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerInsecure\n  );\n  const ADGroupSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchBaseDN\n  );\n  const ADGroupSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchFilter\n  );\n  const ADUserDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADUserDNs\n  );\n  const ADGroupDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADGroupDNs\n  );\n  const ADLookupBindDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindDN\n  );\n  const ADLookupBindPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindPassword\n  );\n  const ADUserDNSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchBaseDN\n  );\n  const ADUserDNSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchFilter\n  );\n  const ADServerStartTLS = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerStartTLS\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n        {\n          fieldKey: \"ad_lookupBindDN\",\n          required: true,\n          value: ADLookupBindDN,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    ADLookupBindDN,\n    idpSelection,\n    ADURL,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADUserDNs,\n    ADGroupDNs,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"AD_URL\"\n          name=\"AD_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADURL\", e.target.value);\n            cleanValidation(\"AD_URL\");\n          }}\n          label=\"LDAP Server Address\"\n          value={ADURL}\n          placeholder=\"ldap-server:636\"\n          error={validationErrors[\"AD_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_skipTLS\"\n          id=\"ad_skipTLS\"\n          name=\"ad_skipTLS\"\n          checked={ADSkipTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADSkipTLS\", checked);\n          }}\n          label={\"Skip TLS Verification\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverInsecure\"\n          id=\"ad_serverInsecure\"\n          name=\"ad_serverInsecure\"\n          checked={ADServerInsecure}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerInsecure\", checked);\n          }}\n          label={\"Server Insecure\"}\n        />\n      </Grid>\n      {ADServerInsecure ? (\n        <Grid item xs={12}>\n          <Typography\n            className={classes.error}\n            variant=\"caption\"\n            display=\"block\"\n            gutterBottom\n          >\n            Warning: All traffic with Active Directory will be unencrypted\n          </Typography>\n          <br />\n        </Grid>\n      ) : null}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverStartTLS\"\n          id=\"ad_serverStartTLS\"\n          name=\"ad_serverStartTLS\"\n          checked={ADServerStartTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerStartTLS\", checked);\n          }}\n          label={\"Start TLS connection to AD/LDAP server\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindDN\"\n          name=\"ad_lookupBindDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindDN\", e.target.value);\n            cleanValidation(\"ad_lookupBindDN\");\n          }}\n          label=\"Lookup Bind DN\"\n          value={ADLookupBindDN}\n          placeholder=\"cn=admin,dc=min,dc=io\"\n          error={validationErrors[\"ad_lookupBindDN\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindPassword\"\n          name=\"ad_lookupBindPassword\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindPassword\", e.target.value);\n          }}\n          label=\"Lookup Bind Password\"\n          value={ADLookupBindPassword}\n          placeholder=\"admin\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchBaseDN\"\n          name=\"ad_userDNSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n          }}\n          label=\"User DN Search Base DN\"\n          value={ADUserDNSearchBaseDN}\n          placeholder=\"dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchFilter\"\n          name=\"ad_userDNSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchFilter\", e.target.value);\n          }}\n          label=\"User DN Search Filter\"\n          value={ADUserDNSearchFilter}\n          placeholder=\"(sAMAcountName=%s)\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchBaseDN\"\n          name=\"ad_groupSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchBaseDN\", e.target.value);\n          }}\n          label=\"Group Search Base DN\"\n          value={ADGroupSearchBaseDN}\n          placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchFilter\"\n          name=\"ad_groupSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchFilter\", e.target.value);\n          }}\n          label=\"Group Search Filter\"\n          value={ADGroupSearchFilter}\n          placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n        />\n      </Grid>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of user DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADUserDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-userdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-userdn-${index.toString()}`}\n                    value={ADUserDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADUsrAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-userdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-userdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-userdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add User\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADUsrAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADUserDNs.length > 1) {\n                            dispatch(removeIDPADUsrAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of group DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADGroupDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-groupdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-groupdn-${index.toString()}`}\n                    value={ADGroupDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADGroupAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-groupdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-groupdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-groupdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add Group\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADGroupAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADGroupDNs.length > 1) {\n                            dispatch(removeIDPADGroupAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default IDPActiveDirectory;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPOpenID = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const openIDConfigurationURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDConfigurationURL\n  );\n  const openIDClientID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClientID\n  );\n  const openIDSecretID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDSecretID\n  );\n  const openIDCallbackURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDCallbackURL\n  );\n  const openIDClaimName = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClaimName\n  );\n  const openIDScopes = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.openIDScopes\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    openIDClientID,\n    openIDSecretID,\n    openIDConfigurationURL,\n    openIDClaimName,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_CONFIGURATION_URL\"\n          name=\"openID_CONFIGURATION_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDConfigurationURL\", e.target.value);\n            cleanValidation(\"openID_CONFIGURATION_URL\");\n          }}\n          label=\"Configuration URL\"\n          value={openIDConfigurationURL}\n          placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n          error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_clientID\"\n          name=\"openID_clientID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClientID\", e.target.value);\n            cleanValidation(\"openID_clientID\");\n          }}\n          label=\"Client ID\"\n          value={openIDClientID}\n          error={validationErrors[\"openID_clientID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_secretID\"\n          name=\"openID_secretID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDSecretID\", e.target.value);\n            cleanValidation(\"openID_secretID\");\n          }}\n          label=\"Secret ID\"\n          value={openIDSecretID}\n          error={validationErrors[\"openID_secretID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_callbackURL\"\n          name=\"openID_callbackURL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDCallbackURL\", e.target.value);\n            cleanValidation(\"openID_callbackURL\");\n          }}\n          label=\"Callback URL\"\n          value={openIDCallbackURL}\n          placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n          error={validationErrors[\"openID_callbackURL\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_claimName\"\n          name=\"openID_claimName\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClaimName\", e.target.value);\n            cleanValidation(\"openID_claimName\");\n          }}\n          label=\"Claim Name\"\n          value={openIDClaimName}\n          error={validationErrors[\"openID_claimName\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_scopes\"\n          name=\"openID_scopes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDScopes\", e.target.value);\n            cleanValidation(\"openID_scopes\");\n          }}\n          label=\"Scopes\"\n          value={openIDScopes}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IDPOpenID;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  addIDPNewKeyPair,\n  isPageValid,\n  removeIDPKeyPairAtIndex,\n  setIDPPwdAtIndex,\n  setIDPUsrAtIndex,\n} from \"../../createTenantSlice\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport { clearValidationError, getRandomString } from \"../../../utils\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPBuiltIn = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const accessKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.accessKeys\n  );\n  const secretKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.secretKeys\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [idpSelection, accessKeys, secretKeys, dispatch]);\n\n  return (\n    <Fragment>\n      Add additional users\n      {accessKeys.map((_, index) => {\n        return (\n          <Fragment key={`identityField-${index.toString()}`}>\n            <div className={classes.shortened}>\n              <InputBoxWrapper\n                id={`accesskey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Access Key\"}\n                name={`accesskey-${index.toString()}`}\n                value={accessKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPUsrAtIndex({\n                      index,\n                      accessKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`accesskey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-accesskey-${index.toString()}`}\n                error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n              />\n              <InputBoxWrapper\n                id={`secretkey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Secret Key\"}\n                name={`secretkey-${index.toString()}`}\n                value={secretKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPPwdAtIndex({\n                      index,\n                      secretKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`secretkey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-secretkey-${index.toString()}`}\n                error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n              />\n              <div className={classes.buttonTray}>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(addIDPNewKeyPair());\n                    }}\n                    disabled={index !== accessKeys.length - 1}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </div>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(removeIDPKeyPairAtIndex(index));\n                    }}\n                    disabled={accessKeys.length <= 1}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n                <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      onClick={() => {\n                        dispatch(\n                          setIDPUsrAtIndex({\n                            index,\n                            accessKey: getRandomString(16),\n                          })\n                        );\n                        dispatch(\n                          setIDPPwdAtIndex({\n                            index,\n                            secretKey: getRandomString(16),\n                          })\n                        );\n                      }}\n                      size={\"small\"}\n                    >\n                      <CasinoIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default IDPBuiltIn;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { setIDP } from \"../createTenantSlice\";\nimport IDPActiveDirectory from \"./IdentityProvider/IDPActiveDirectory\";\nimport IDPOpenID from \"./IdentityProvider/IDPOpenID\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport IDPBuiltIn from \"./IdentityProvider/IDPBuiltIn\";\nimport {\n  BuiltInLogoElement,\n  LDAPLogoElement,\n  OIDCLogoElement,\n} from \"../../LogoComponents\";\nimport H3Section from \"../../../Common/H3Section\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 16,\n        fontWeight: 600,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"row\",\n        alignItems: \"top\",\n      },\n    },\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IdentityProvider = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Identity Provider</H3Section>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} padding=\"10px\">\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\"Protocol\"\n          onChange={(e) => {\n            dispatch(setIDP(e.target.value));\n          }}\n          selectorOptions={[\n            { label: <BuiltInLogoElement />, value: \"Built-in\" },\n            { label: <OIDCLogoElement />, value: \"OpenID\" },\n            { label: <LDAPLogoElement />, value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && <IDPBuiltIn />}\n      {idpSelection === \"OpenID\" && <IDPOpenID />}\n      {idpSelection === \"AD\" && <IDPActiveDirectory />}\n    </Paper>\n  );\n};\n\nexport default IdentityProvider;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport {\n  addCaCertificate,\n  addClientKeyPair,\n  addFileToCaCertificates,\n  addFileToClientKeyPair,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteCaCertificate,\n  deleteClientKeyPair,\n  deleteKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport TLSHelpBox from \"../../HelpBox/TLSHelpBox\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface ISecurityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({ classes }: ISecurityProps) => {\n  const dispatch = useAppDispatch();\n\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const minioClientCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioClientCertificates\n  );\n  const caCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCAsCertificates\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"security\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableAutoCert) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableCustomCerts) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    dispatch(isPageValid({ pageName: \"security\", valid: false }));\n  }, [enableTLS, enableAutoCert, enableCustomCerts, dispatch]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Security</H3Section>\n      </div>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <FormSwitchWrapper\n            value=\"enableTLS\"\n            id=\"enableTLS\"\n            name=\"enableTLS\"\n            checked={enableTLS}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableTLS\", checked);\n            }}\n            label={\"TLS\"}\n            description={\n              \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n            }\n          />\n        </Grid>\n        {enableTLS && (\n          <Fragment>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableAutoCert\", checked);\n                }}\n                label={\"AutoCert\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableCustomCerts\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                description={\"Certificates used to terminated TLS at MinIO\"}\n              />\n            </Grid>\n            {enableCustomCerts && (\n              <Fragment>\n                {!enableAutoCert && (\n                  <Grid item xs={12}>\n                    <TLSHelpBox />\n                  </Grid>\n                )}\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Server Certificates</h5>\n                  {minioCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addKeyPair());\n                            }}\n                            disabled={index !== minioCertificates.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteKeyPair(keyPair.id));\n                            }}\n                            disabled={minioCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Client Certificates</h5>\n                  {minioClientCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addClientKeyPair());\n                            }}\n                            disabled={\n                              index !== minioClientCertificates.length - 1\n                            }\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteClientKeyPair(keyPair.id));\n                            }}\n                            disabled={minioClientCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO CA Certificates</h5>\n                  {caCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-CA-certs-${keyPair.id}`}\n                      className={classes.minioCACertsRow}\n                    >\n                      <Grid item xs={6}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToCaCertificates({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <div className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(addCaCertificate());\n                              }}\n                              disabled={index !== caCertificates.length - 1}\n                            >\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(deleteCaCertificate(keyPair.id));\n                              }}\n                              disabled={caCertificates.length <= 1}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Security);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\ntype Props = {\n  children: string;\n};\n\nconst SectionH1: React.FC<Props> = ({ children }) => {\n  return (\n    <h1 style={{ margin: 0, marginBottom: \".8rem\", fontSize: \"1.3rem\" }}>\n      {children}\n    </h1>\n  );\n};\n\nexport default SectionH1;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst VaultKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const vaultEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEndpoint\n  );\n  const vaultEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEngine\n  );\n  const vaultNamespace = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultNamespace\n  );\n  const vaultPrefix = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPrefix\n  );\n  const vaultAppRoleEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultAppRoleEngine\n  );\n  const vaultId = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultId\n  );\n  const vaultSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultSecret\n  );\n  const vaultRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultRetry\n  );\n  const vaultPing = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPing\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"vault_endpoint\",\n          required: true,\n          value: vaultEndpoint,\n        },\n        {\n          fieldKey: \"vault_id\",\n          required: true,\n          value: vaultId,\n        },\n        {\n          fieldKey: \"vault_secret\",\n          required: true,\n          value: vaultSecret,\n        },\n        {\n          fieldKey: \"vault_ping\",\n          required: false,\n          value: vaultPing,\n          customValidation: parseInt(vaultPing) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n        {\n          fieldKey: \"vault_retry\",\n          required: false,\n          value: vaultRetry,\n          customValidation: parseInt(vaultRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_endpoint\"\n          name=\"vault_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEndpoint\", e.target.value);\n            cleanValidation(\"vault_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the Hashicorp Vault endpoint\"\n          value={vaultEndpoint}\n          error={validationErrors[\"vault_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_engine\"\n          name=\"vault_engine\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEngine\", e.target.value);\n            cleanValidation(\"vault_engine\");\n          }}\n          label=\"Engine\"\n          tooltip=\"Engine is the Hashicorp Vault K/V engine path. If empty, defaults to 'kv'\"\n          value={vaultEngine}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_namespace\"\n          name=\"vault_namespace\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultNamespace\", e.target.value);\n          }}\n          label=\"Namespace\"\n          tooltip=\"Namespace is an optional Hashicorp Vault namespace. An empty namespace means no particular namespace is used.\"\n          value={vaultNamespace}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_prefix\"\n          name=\"vault_prefix\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultPrefix\", e.target.value);\n          }}\n          label=\"Prefix\"\n          tooltip=\"Prefix is an optional prefix / directory within the K/V engine. If empty, keys will be stored at the K/V engine top level\"\n          value={vaultPrefix}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>App Role</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_approle_engine\"\n              name=\"vault_approle_engine\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultAppRoleEngine\", e.target.value);\n              }}\n              label=\"Engine\"\n              tooltip=\"AppRoleEngine is the AppRole authentication engine path. If empty, defaults to 'approle'\"\n              value={vaultAppRoleEngine}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_id\"\n              name=\"vault_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultId\", e.target.value);\n                cleanValidation(\"vault_id\");\n              }}\n              label=\"AppRole ID\"\n              tooltip=\"AppRoleSecret is the AppRole access secret for authenticating to Hashicorp Vault via the AppRole method\"\n              value={vaultId}\n              error={validationErrors[\"vault_id\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_secret\"\n              name=\"vault_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultSecret\", e.target.value);\n                cleanValidation(\"vault_secret\");\n              }}\n              label=\"AppRole Secret\"\n              tooltip=\"AppRoleSecret is the AppRole access secret for authenticating to Hashicorp Vault via the AppRole method\"\n              value={vaultSecret}\n              error={validationErrors[\"vault_secret\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"vault_retry\"\n              name=\"vault_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultRetry\", e.target.value);\n                cleanValidation(\"vault_retry\");\n              }}\n              label=\"Retry (Seconds)\"\n              value={vaultRetry}\n              error={validationErrors[\"vault_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        className={classes.formFieldRow}\n        style={{ marginTop: 15 }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Status</legend>\n          <InputBoxWrapper\n            type=\"number\"\n            min=\"0\"\n            id=\"vault_ping\"\n            name=\"vault_ping\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"vaultPing\", e.target.value);\n              cleanValidation(\"vault_ping\");\n            }}\n            label=\"Ping (Seconds)\"\n            value={vaultPing}\n            error={validationErrors[\"vault_ping\"] || \"\"}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default VaultKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AzureKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const azureEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureEndpoint\n  );\n  const azureTenantID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureTenantID\n  );\n  const azureClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientID\n  );\n  const azureClientSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientSecret\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"azure_endpoint\",\n          required: true,\n          value: azureEndpoint,\n        },\n        {\n          fieldKey: \"azure_tenant_id\",\n          required: true,\n          value: azureTenantID,\n        },\n        {\n          fieldKey: \"azure_client_id\",\n          required: true,\n          value: azureClientID,\n        },\n        {\n          fieldKey: \"azure_client_secret\",\n          required: true,\n          value: azureClientSecret,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"azure_endpoint\"\n          name=\"azure_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"azureEndpoint\", e.target.value);\n            cleanValidation(\"azure_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the Azure KeyVault endpoint\"\n          value={azureEndpoint}\n          error={validationErrors[\"azure_endpoint\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_tenant_id\"\n              name=\"azure_tenant_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureTenantID\", e.target.value);\n                cleanValidation(\"azure_tenant_id\");\n              }}\n              label=\"Tenant ID\"\n              tooltip=\"TenantID is the ID of the Azure KeyVault tenant\"\n              value={azureTenantID}\n              error={validationErrors[\"azure_tenant_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_id\"\n              name=\"azure_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientID\", e.target.value);\n                cleanValidation(\"azure_client_id\");\n              }}\n              label=\"Client ID\"\n              tooltip=\"ClientID is the ID of the client accessing Azure KeyVault\"\n              value={azureClientID}\n              error={validationErrors[\"azure_client_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_secret\"\n              name=\"azure_client_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientSecret\", e.target.value);\n                cleanValidation(\"azure_client_secret\");\n              }}\n              label=\"Client Secret\"\n              tooltip=\"ClientSecret is the client secret accessing the Azure KeyVault\"\n              value={azureClientSecret}\n              error={validationErrors[\"azure_client_secret\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AzureKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { updateAddField } from \"../../createTenantSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GCPKMSAdd = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_project_id\"\n          name=\"gcp_project_id\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpProjectID\", e.target.value);\n          }}\n          label=\"Project ID\"\n          tooltip=\"ProjectID is the GCP project ID.\"\n          value={gcpProjectID}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_endpoint\"\n          name=\"gcp_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpEndpoint\", e.target.value);\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the GCP project ID. If empty defaults to: secretmanager.googleapis.com:443\"\n          value={gcpEndpoint}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_email\"\n              name=\"gcp_client_email\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientEmail\", e.target.value);\n              }}\n              label=\"Client Email\"\n              tooltip=\"Is the Client email of the GCP service account used to access the SecretManager\"\n              value={gcpClientEmail}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_id\"\n              name=\"gcp_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientID\", e.target.value);\n              }}\n              label=\"Client ID\"\n              tooltip=\"Is the Client ID of the GCP service account used to access the SecretManager\"\n              value={gcpClientID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key_id\"\n              name=\"gcp_private_key_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKeyID\", e.target.value);\n              }}\n              label=\"Private Key ID\"\n              tooltip=\"Is the private key ID of the GCP service account used to access the SecretManager\"\n              value={gcpPrivateKeyID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key\"\n              name=\"gcp_private_key\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKey\", e.target.value);\n              }}\n              label=\"Private Key\"\n              tooltip=\"Is the private key of the GCP service account used to access the SecretManager\"\n              value={gcpPrivateKey}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GCPKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GemaltoKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const gemaltoEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoEndpoint\n  );\n  const gemaltoToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoToken\n  );\n  const gemaltoDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoDomain\n  );\n  const gemaltoRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoRetry\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"gemalto_endpoint\",\n          required: true,\n          value: gemaltoEndpoint,\n        },\n        {\n          fieldKey: \"gemalto_token\",\n          required: true,\n          value: gemaltoToken,\n        },\n        {\n          fieldKey: \"gemalto_domain\",\n          required: true,\n          value: gemaltoDomain,\n        },\n        {\n          fieldKey: \"gemalto_retry\",\n          required: false,\n          value: gemaltoRetry,\n          customValidation: parseInt(gemaltoRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    gemaltoEndpoint,\n    gemaltoToken,\n    gemaltoDomain,\n    gemaltoRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gemalto_endpoint\"\n          name=\"gemalto_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gemaltoEndpoint\", e.target.value);\n            cleanValidation(\"gemalto_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the endpoint to the KeySecure server\"\n          value={gemaltoEndpoint}\n          error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_token\"\n              name=\"gemalto_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoToken\", e.target.value);\n                cleanValidation(\"gemalto_token\");\n              }}\n              label=\"Token\"\n              tooltip=\"Token is the refresh authentication token to access the KeySecure server\"\n              value={gemaltoToken}\n              error={validationErrors[\"gemalto_token\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_domain\"\n              name=\"gemalto_domain\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoDomain\", e.target.value);\n                cleanValidation(\"gemalto_domain\");\n              }}\n              label=\"Domain\"\n              tooltip=\"Domain is the isolated namespace within the KeySecure server. If empty, defaults to the top-level / root domain\"\n              value={gemaltoDomain}\n              error={validationErrors[\"gemalto_domain\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"gemalto_retry\"\n              name=\"gemalto_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoRetry\", e.target.value);\n                cleanValidation(\"gemalto_retry\");\n              }}\n              label=\"Retry (seconds)\"\n              value={gemaltoRetry}\n              error={validationErrors[\"gemalto_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GemaltoKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AWSKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const awsEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsEndpoint\n  );\n  const awsRegion = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsRegion\n  );\n  const awsKMSKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsKMSKey\n  );\n  const awsAccessKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsAccessKey\n  );\n  const awsSecretKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsSecretKey\n  );\n  const awsToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsToken\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"aws_endpoint\",\n          required: true,\n          value: awsEndpoint,\n        },\n        {\n          fieldKey: \"aws_region\",\n          required: true,\n          value: awsRegion,\n        },\n        {\n          fieldKey: \"aws_accessKey\",\n          required: true,\n          value: awsAccessKey,\n        },\n        {\n          fieldKey: \"aws_secretKey\",\n          required: true,\n          value: awsSecretKey,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    awsEndpoint,\n    awsRegion,\n    awsSecretKey,\n    awsAccessKey,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_endpoint\"\n          name=\"aws_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsEndpoint\", e.target.value);\n            cleanValidation(\"aws_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the AWS SecretsManager endpoint. AWS SecretsManager endpoints have the following schema: secrestmanager[-fips].<region>.amanzonaws.com\"\n          value={awsEndpoint}\n          error={validationErrors[\"aws_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_region\"\n          name=\"aws_region\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsRegion\", e.target.value);\n            cleanValidation(\"aws_region\");\n          }}\n          label=\"Region\"\n          tooltip=\"Region is the AWS region the SecretsManager is located\"\n          value={awsRegion}\n          error={validationErrors[\"aws_region\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_kmsKey\"\n          name=\"aws_kmsKey\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsKMSKey\", e.target.value);\n          }}\n          label=\"KMS Key\"\n          tooltip=\"KMSKey is the AWS-KMS key ID (CMK-ID) used to en/decrypt secrets managed by the SecretsManager. If empty, the default AWS KMS key is used\"\n          value={awsKMSKey}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_accessKey\"\n              name=\"aws_accessKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsAccessKey\", e.target.value);\n                cleanValidation(\"aws_accessKey\");\n              }}\n              label=\"Access Key\"\n              tooltip=\"AccessKey is the access key for authenticating to AWS\"\n              value={awsAccessKey}\n              error={validationErrors[\"aws_accessKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_secretKey\"\n              name=\"aws_secretKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsSecretKey\", e.target.value);\n                cleanValidation(\"aws_secretKey\");\n              }}\n              label=\"Secret Key\"\n              tooltip=\"SecretKey is the secret key for authenticating to AWS\"\n              value={awsSecretKey}\n              error={validationErrors[\"aws_secretKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_token\"\n              name=\"aws_token\"\n              tooltip=\"SessionToken is an optional session token for authenticating to AWS when using STS\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsToken\", e.target.value);\n              }}\n              label=\"Token\"\n              value={awsToken}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AWSKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport {\n  addFileKESServerCert,\n  addFileKMSCa,\n  addFileKMSMTLSCert,\n  addFileMinIOMTLSCert,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport VaultKMSAdd from \"./Encryption/VaultKMSAdd\";\nimport AzureKMSAdd from \"./Encryption/AzureKMSAdd\";\nimport GCPKMSAdd from \"./Encryption/GCPKMSAdd\";\nimport GemaltoKMSAdd from \"./Encryption/GemaltoKMSAdd\";\nimport AWSKMSAdd from \"./Encryption/AWSKMSAdd\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport CodeMirrorWrapper from \"../../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport FormHr from \"../../../Common/FormHr\";\n\ninterface IEncryptionProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({ classes }: IEncryptionProps) => {\n  const dispatch = useAppDispatch();\n\n  const replicas = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.replicas\n  );\n  const rawConfiguration = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.rawConfiguration\n  );\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const enableEncryption = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.enableEncryption\n  );\n  const encryptionType = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionType\n  );\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n  const enableCustomCertsForKES = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.enableCustomCertsForKES\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const minioServerCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const kesServerCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kesServerCertificate\n  );\n  const minioMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioMTLSCertificate\n  );\n  const kmsMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsMTLSCertificate\n  );\n  const kmsCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsCA\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const kesSecurityContext = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.kesSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioServerCertificates &&\n        minioServerCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        {\n          fieldKey: \"rawConfiguration\",\n          required: encryptionTab > 0,\n          value: rawConfiguration,\n        },\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup!,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup!) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_cert,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    rawConfiguration,\n    encryptionTab,\n    enableEncryption,\n    encryptionType,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    dispatch,\n    enableAutoCert,\n    enableCustomCerts,\n    kesServerCertificate.encoded_key,\n    kesServerCertificate.encoded_cert,\n    minioMTLSCertificate.encoded_key,\n    minioMTLSCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Encryption</SectionH1>\n        </Grid>\n        <Grid item xs={4} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enableEncryption}\n            value={\"tenant_encryption\"}\n            id=\"tenant-encryption\"\n            name=\"tenant-encryption\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableEncryption\", checked);\n            }}\n            description=\"\"\n            disabled={!encryptionAvailable}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            MinIO Server-Side Encryption (SSE) protects objects as part of write\n            operations, allowing clients to take advantage of server processing\n            power to secure objects at the storage layer (encryption-at-rest).\n            SSE also provides key functionality to regulatory and compliance\n            requirements around secure locking and erasure.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <FormHr />\n        </Grid>\n\n        {enableEncryption && (\n          <Fragment>\n            <Grid item xs={12}>\n              <Tabs\n                value={encryptionTab}\n                onChange={(e: React.ChangeEvent<{}>, value: number) => {\n                  updateField(\"encryptionTab\", value);\n                }}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                aria-label=\"cluster-tabs\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab id=\"kms-options\" label=\"Options\" />\n                <Tab id=\"kms-raw-configuration\" label=\"Raw Edit\" />\n              </Tabs>\n            </Grid>\n\n            {encryptionTab ? (\n              <Fragment>\n                <Grid item xs={12}>\n                  <CodeMirrorWrapper\n                    value={rawConfiguration}\n                    mode={\"yaml\"}\n                    onBeforeChange={(editor, data, value) => {\n                      updateField(\"rawConfiguration\", value);\n                    }}\n                    editorHeight={\"550px\"}\n                  />\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.encryptionTypeOptions}>\n                  <RadioGroupSelector\n                    currentSelection={encryptionType}\n                    id=\"encryptionType\"\n                    name=\"encryptionType\"\n                    label=\"KMS\"\n                    onChange={(e) => {\n                      updateField(\"encryptionType\", e.target.value);\n                    }}\n                    selectorOptions={[\n                      { label: \"Vault\", value: \"vault\" },\n                      { label: \"AWS\", value: \"aws\" },\n                      { label: \"Gemalto\", value: \"gemalto\" },\n                      { label: \"GCP\", value: \"gcp\" },\n                      { label: \"Azure\", value: \"azure\" },\n                    ]}\n                  />\n                </Grid>\n                {encryptionType === \"vault\" && <VaultKMSAdd />}\n                {encryptionType === \"azure\" && <AzureKMSAdd />}\n                {encryptionType === \"gcp\" && <GCPKMSAdd />}\n                {encryptionType === \"aws\" && <AWSKMSAdd />}\n                {encryptionType === \"gemalto\" && <GemaltoKMSAdd />}\n              </Fragment>\n            )}\n\n            <div className={classes.headerElement}>\n              <h4 className={classes.h3Section}>Additional Configurations</h4>\n            </div>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCertsForKES\"\n                id=\"enableCustomCertsForKES\"\n                name=\"enableCustomCertsForKES\"\n                checked={enableCustomCertsForKES || !enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n\n                  updateField(\"enableCustomCertsForKES\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                disabled={!enableAutoCert}\n              />\n            </Grid>\n            {(enableCustomCertsForKES || !enableAutoCert) && (\n              <Fragment>\n                <Grid container>\n                  <Grid item xs={12} style={{ marginBottom: 15 }}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Encryption server certificates\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"serverKey\"\n                        name=\"serverKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"serverKey\"] || \"\"}\n                        value={kesServerCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"serverCert\"\n                        name=\"serverCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"serverCert\"] || \"\"}\n                        value={kesServerCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container style={{ marginBottom: 15 }}>\n                  <Grid item xs={12}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        MinIO mTLS certificates (connection between MinIO and\n                        the Encryption server)\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"clientKey\"\n                        name=\"clientKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"clientKey\"] || \"\"}\n                        value={minioMTLSCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"clientCert\"\n                        name=\"clientCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"clientCert\"] || \"\"}\n                        value={minioMTLSCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container className={classes.mutualTlsConfig}>\n                  <fieldset className={classes.fieldGroup}>\n                    <legend className={classes.descriptionText}>\n                      KMS mTLS certificates (connection between the Encryption\n                      server and the KMS)\n                    </legend>\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"key\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_key\");\n                      }}\n                      accept=\".key,.pem\"\n                      id=\"vault_key\"\n                      name=\"vault_key\"\n                      label=\"Key\"\n                      value={kmsMTLSCertificate.key}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"cert\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_cert\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_cert\"\n                      name=\"vault_cert\"\n                      label=\"Cert\"\n                      value={kmsMTLSCertificate.cert}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSCa({\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_ca\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_ca\"\n                      name=\"vault_ca\"\n                      label=\"CA\"\n                      value={kmsCA.cert}\n                    />\n                  </fieldset>\n                </Grid>\n              </Fragment>\n            )}\n            <Grid item xs={12}>\n              <Grid item xs={12} classes={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"1\"\n                  id=\"replicas\"\n                  name=\"replicas\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"replicas\", e.target.value);\n                    cleanValidation(\"replicas\");\n                  }}\n                  label=\"Replicas\"\n                  value={replicas}\n                  required\n                  error={validationErrors[\"replicas\"] || \"\"}\n                />\n              </Grid>\n\n              <fieldset\n                className={classes.fieldGroup}\n                style={{ marginTop: 15 }}\n              >\n                <legend className={classes.descriptionText}>\n                  SecurityContext for KES pods\n                </legend>\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsUser\"\n                        name=\"kes_securityContext_runAsUser\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsUser: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsUser\");\n                        }}\n                        label=\"Run As User\"\n                        value={kesSecurityContext.runAsUser}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsUser\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsGroup\"\n                        name=\"kes_securityContext_runAsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsGroup\");\n                        }}\n                        label=\"Run As Group\"\n                        value={kesSecurityContext.runAsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsGroup\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_fsGroup\"\n                        name=\"kes_securityContext_fsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_fsGroup\");\n                        }}\n                        label=\"FsGroup\"\n                        value={kesSecurityContext.fsGroup!}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <SelectWrapper\n                        label=\"FsGroupChangePolicy\"\n                        id=\"securityContext_fsGroupChangePolicy\"\n                        name=\"securityContext_fsGroupChangePolicy\"\n                        value={kesSecurityContext.fsGroupChangePolicy!}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroupChangePolicy: e.target.value,\n                          });\n                        }}\n                        options={[\n                          {\n                            label: \"Always\",\n                            value: \"Always\",\n                          },\n                          {\n                            label: \"OnRootMismatch\",\n                            value: \"OnRootMismatch\",\n                          },\n                        ]}\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12}>\n                  <div className={classes.multiContainer}>\n                    <FormSwitchWrapper\n                      value=\"kesSecurityContextRunAsNonRoot\"\n                      id=\"kes_securityContext_runAsNonRoot\"\n                      name=\"kes_securityContext_runAsNonRoot\"\n                      checked={kesSecurityContext.runAsNonRoot}\n                      onChange={(e) => {\n                        const targetD = e.target;\n                        const checked = targetD.checked;\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsNonRoot: checked,\n                        });\n                      }}\n                      label={\"Do not run as Root\"}\n                    />\n                  </div>\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Encryption);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { LabelKeyPair } from \"../../types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { AddIcon, RemoveIcon } from \"mds\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../systemSlice\";\nimport {\n  addNewToleration,\n  isPageValid,\n  removeToleration,\n  setKeyValuePairs,\n  setTolerationInfo,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.podAffinity\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.nodeSelectorLabels\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.withPodAntiAffinity\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.createTenant.nodeSelectorPairs\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.createTenant.tolerations\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"affinity\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"affinity\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      })\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Pod Placement</H3Section>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={i !== keyValuePairs.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = keyValuePairs.filter(\n                                (item, index) => index !== i\n                              );\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={keyValuePairs.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removeToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IImagesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...wizardCommon,\n  });\n\nconst Images = ({ classes }: IImagesProps) => {\n  const dispatch = useAppDispatch();\n\n  const customImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customImage\n  );\n  const imageName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageName\n  );\n  const customDockerhub = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customDockerhub\n  );\n  const imageRegistry = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageRegistry\n  );\n  const imageRegistryUsername = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryUsername\n  );\n  const imageRegistryPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryPassword\n  );\n\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n\n  const kesImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.kesImage\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    kesImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    dispatch,\n    tenantCustom,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Container Images</H3Section>\n        <span className={classes.descriptionText}>\n          Specify the container images used by the Tenant and its features.\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"minio/minio:RELEASE.2023-05-27T05-56-19Z\"\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"minio/kes:2023-05-02T22-48-10Z\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <h4>Custom Container Registry</h4>\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Use a private container registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Images);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({ classes }: ISizePreviewProps) => {\n  const nodes = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.nodes\n  );\n  const memoryNode = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesMemoryRequest\n  );\n  const ecParity = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParity\n  );\n\n  const distribution = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.distribution\n  );\n  const ecParityCalc = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParityCalc\n  );\n\n  const cpuToUse = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesCPURequest\n  );\n  const integrationSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.integrationSelection\n  );\n\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? distribution.disks : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    CPU Selection\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {cpuToUse}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n      {integrationSelection.typeSelection !== \"\" &&\n        integrationSelection.storageClass !== \"\" && (\n          <Fragment>\n            <h4>Single Instance Configuration</h4>\n            <Divider />\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size={\"small\"}\n            >\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">CPU</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.CPU !== 0\n                      ? integrationSelection.CPU\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.memory !== 0\n                      ? `${integrationSelection.memory} Gi`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.drivesPerServer !== 0\n                      ? `${integrationSelection.drivesPerServer}`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    Drive Size\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {integrationSelection.driveSize.driveSize}\n                    {integrationSelection.driveSize.sizeUnit}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Fragment>\n        )}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SizePreview);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"mds\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { closeAddNSModal } from \"../../createTenantSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { createNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  })\n);\n\nconst AddNamespaceModal = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n  const addNamespaceLoading = useSelector(\n    (state: AppState) => state.createTenant.addNSLoading\n  );\n  const addNamespaceOpen = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        variant: \"callAction\",\n      }}\n      isOpen={addNamespaceOpen}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={addNamespaceLoading}\n      onConfirm={() => {\n        dispatch(createNamespaceAsync());\n      }}\n      onClose={() => {\n        dispatch(closeAddNSModal());\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default AddNamespaceModal;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useMemo } from \"react\";\nimport { AddIcon } from \"mds\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { openAddNSModal, setNamespace } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\nimport debounce from \"lodash/debounce\";\nimport { IMkEnvs } from \"./utils\";\nimport { validateNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst NamespaceSelector = ({ formToRender }: { formToRender?: IMkEnvs }) => {\n  const dispatch = useAppDispatch();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n\n  const showNSCreateButton = useSelector(\n    (state: AppState) => state.createTenant.showNSCreateButton\n  );\n\n  const namespaceError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"namespace\"]\n  );\n  const openAddNSConfirm = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  const debounceNamespace = useMemo(\n    () =>\n      debounce(() => {\n        dispatch(validateNamespaceAsync());\n      }, 500),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  const addNamespace = () => {\n    dispatch(openAddNSModal());\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && <AddNamespaceModal />}\n      <InputBoxWrapper\n        id=\"namespace\"\n        name=\"namespace\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          dispatch(setNamespace(e.target.value));\n        }}\n        label=\"Namespace\"\n        value={namespace}\n        error={namespaceError || \"\"}\n        overlayId={\"add-namespace\"}\n        overlayIcon={showNSCreateButton ? <AddIcon /> : null}\n        overlayAction={addNamespace}\n        required\n      />\n    </Fragment>\n  );\n};\nexport default NamespaceSelector;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport SizePreview from \"../SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\nimport {\n  isPageValid,\n  setStorageType,\n  setTenantName,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { selFeatures } from \"../../../../consoleSlice\";\nimport NamespaceSelector from \"./NamespaceSelector\";\nimport H3Section from \"../../../../Common/H3Section\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n      marginTop: 20,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst NameTenantField = () => {\n  const dispatch = useAppDispatch();\n  const tenantName = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.tenantName\n  );\n\n  const tenantNameError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"tenant-name\"]\n  );\n\n  return (\n    <InputBoxWrapper\n      id=\"tenant-name\"\n      name=\"tenant-name\"\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setTenantName(e.target.value));\n      }}\n      label=\"Name\"\n      value={tenantName}\n      required\n      error={tenantNameError || \"\"}\n    />\n  );\n};\n\ninterface INameTenantMainScreen {\n  classes: any;\n  formToRender?: IMkEnvs;\n}\n\nconst NameTenantMain = ({ classes, formToRender }: INameTenantMainScreen) => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const selectedStorageType = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageType\n  );\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const features = useSelector(selFeatures);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      dispatch(\n        updateAddField({ pageName: \"nameTenant\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    const isValid =\n      (formToRender === IMkEnvs.default && storageClasses.length > 0) ||\n      (formToRender !== IMkEnvs.default && selectedStorageType !== \"\");\n\n    dispatch(isPageValid({ pageName: \"nameTenant\", valid: isValid }));\n  }, [storageClasses, dispatch, selectedStorageType, formToRender]);\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item sx={{ width: \"calc(100% - 320px)\" }}>\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <H3Section>Name</H3Section>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <NameTenantField />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <NamespaceSelector formToRender={formToRender} />\n              </Grid>\n              {formToRender === IMkEnvs.default ? (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_class\"\n                    name=\"storage_class\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageClass\",\n                        e.target.value as string\n                      );\n                    }}\n                    label=\"Storage Class\"\n                    value={selectedStorageClass}\n                    options={storageClasses}\n                    disabled={storageClasses.length < 1}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_type\"\n                    name=\"storage_type\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      dispatch(\n                        setStorageType({\n                          storageType: e.target.value as string,\n                          features: features,\n                        })\n                      );\n                    }}\n                    label={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorLabel`,\n                      \"Storage Type\"\n                    )}\n                    value={selectedStorageType}\n                    options={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorValues`,\n                      []\n                    )}\n                  />\n                </Grid>\n              )}\n              {formToRender === IMkEnvs.default ? (\n                <TenantSize />\n              ) : (\n                get(\n                  mkPanelConfigurations,\n                  `${formToRender}.sizingComponent`,\n                  null\n                )\n              )}\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NameTenantMain);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash/get\";\nimport NameTenantMain from \"./NameTenantMain\";\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\nimport { selFeatures } from \"../../../../consoleSlice\";\n\nconst TenantResources = () => {\n  const features = useSelector(selFeatures);\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  if (formRender === null) {\n    return null;\n  }\n\n  return <NameTenantMain formToRender={formRender} />;\n};\n\nexport default TenantResources;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nexport const requiredPages = [\n  \"nameTenant\",\n  \"tenantSize\",\n  \"configure\",\n  \"affinity\",\n  \"identityProvider\",\n  \"security\",\n  \"encryption\",\n];\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"mds\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { requiredPages } from \"./common\";\nimport { createTenantAsync } from \"./thunks/createTenantThunk\";\n\nconst CreateTenantButton = () => {\n  const dispatch = useAppDispatch();\n\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n\n  const validPages = useSelector(\n    (state: AppState) => state.createTenant.validPages\n  );\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n\n  const enabled =\n    !addSending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"callAction\"\n      color=\"primary\"\n      onClick={() => {\n        dispatch(createTenantAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n      label={\"Create\"}\n    />\n  );\n};\n\nexport default CreateTenantButton;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewTenantCredentials = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const showNewCredentials = useSelector(\n    (state: AppState) => state.createTenant.showNewCredentials\n  );\n  const createdAccount = useSelector(\n    (state: AppState) => state.createTenant.createdAccount\n  );\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            dispatch(resetAddTenantForm());\n            navigate(\"/tenants\");\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default NewTenantCredentials;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport {\n  IWizardButton,\n  IWizardElement,\n} from \"../../Common/GenericWizard/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\n\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\nimport {\n  IMkEnvs,\n  resourcesConfigurations,\n} from \"./Steps/TenantResources/utils\";\nimport { BackLink, HelpBox, StorageIcon } from \"mds\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport CreateTenantButton from \"./CreateTenantButton\";\nimport NewTenantCredentials from \"./NewTenantCredentials\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  })\n);\n\nconst AddTenant = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const features = useSelector(selFeatures);\n\n  // Fields\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetAddTenantForm());\n      navigate(\"/tenants\");\n    },\n  };\n\n  const createButton: IWizardButton = {\n    componentRender: <CreateTenantButton key={\"create-tenant\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <TenantResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  return (\n    <Fragment>\n      <NewTenantCredentials />\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            onClick={() => {\n              dispatch(resetAddTenantForm());\n              navigate(\"/tenants\");\n            }}\n            label={\"Tenants\"}\n          />\n        }\n      />\n\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n        {formRender === IMkEnvs.aws && (\n          <Grid item xs={12} style={{ marginTop: 16 }}>\n            <HelpBox\n              title={\"EBS Volume Configuration.\"}\n              iconComponent={<StorageIcon />}\n              help={\n                <Fragment>\n                  <b>Performance Optimized</b>: Uses the <i>gp3</i> EBS storage\n                  class class configured at 1,000Mi/s throughput and 16,000\n                  IOPS, however the minimum volume size for this type of EBS\n                  volume is <b>32Gi</b>.\n                  <br />\n                  <br />\n                  <b>Storage Optimized</b>: Uses the <i>sc1</i> EBS storage\n                  class, however the minimum volume size for this type of EBS\n                  volume is &nbsp;\n                  <b>16Ti</b> to unlock their maximum throughput speed of\n                  250Mi/s.\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddTenant;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport { CertificateIcon } from \"mds\";\nimport { useParams } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst TLSHelpBox = () => {\n  const params = useParams();\n  const tenantNameParam = params.tenantName || \"\";\n  const tenantNamespaceParam = params.tenantNamespace || \"\";\n  const namespace = useSelector((state: AppState) => {\n    var defaultNamespace = \"<namespace>\";\n    if (tenantNamespaceParam !== \"\") {\n      return tenantNamespaceParam;\n    }\n    if (state.createTenant.fields.nameTenant.namespace !== \"\") {\n      return state.createTenant.fields.nameTenant.namespace;\n    }\n    return defaultNamespace;\n  });\n\n  const tenantName = useSelector((state: AppState) => {\n    var defaultTenantName = \"<tenant-name>\";\n    if (tenantNameParam !== \"\") {\n      return tenantNameParam;\n    }\n\n    if (state.createTenant.fields.nameTenant.tenantName !== \"\") {\n      return state.createTenant.fields.nameTenant.tenantName;\n    }\n    return defaultTenantName;\n  });\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CertificateIcon />}\n          description={`TLS Certificates Warning`}\n        />\n        <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n          Automatic certificate generation is not enabled.\n          <br />\n          <br />\n          If you wish to continue only with <b>custom certificates</b> make sure\n          they are valid for the following internode hostnames, i.e.:\n          <br />\n          <br />\n          <div\n            style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}\n          >\n            minio.{namespace}\n            <br />\n            minio.{namespace}.svc\n            <br />\n            minio.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{tenantName}-hl.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{namespace}.svc.&#x3C;cluster domain&#x3E;\n          </div>\n          <br />\n          Replace <em>&#x3C;tenant-name&#x3E;</em>,{\" \"}\n          <em>&#x3C;namespace&#x3E;</em> and\n          <em>&#x3C;cluster domain&#x3E;</em> with the actual values for your\n          MinIO tenant.\n          <br />\n          <br />\n          You can learn more at our{\" \"}\n          <a\n            href=\"https://min.io/docs/minio/kubernetes/upstream/operations/network-encryption.html?ref=op#id5\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            documentation\n          </a>\n          .\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TLSHelpBox;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport { LDAPIcon, OIDCIcon, UsersIcon } from \"mds\";\n\nexport const OIDCLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <OIDCIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Open ID</Grid>\n    </Grid>\n  );\n};\n\nexport const LDAPLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <LDAPIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>LDAP / Active Directory</Grid>\n    </Grid>\n  );\n};\n\nexport const BuiltInLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <UsersIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Built-in</Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z\"\n}), 'Casino');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    position: 'relative',\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n    top: '50%',\n    content: '\"\"',\n    transform: 'translateY(50%)'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    top: '0%',\n    left: '50%',\n    borderTop: 0,\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n    transform: 'translateX(0%)'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n      absolute = false,\n      children,\n      className,\n      component = children ? 'div' : 'hr',\n      flexItem = false,\n      light = false,\n      orientation = 'horizontal',\n      role = component !== 'hr' ? 'separator' : undefined,\n      textAlign = 'center',\n      variant = 'fullWidth'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["withStyles","theme","createStyles","container","display","flexFlow","padding","inputWithCopy","width","background","height","marginRight","inputLabel","fieldBasic","fontSize","label","value","classes","className","OutlinedInput","readOnly","endAdornment","InputAdornment","position","TooltipWrapper","tooltip","text","id","onClick","onMouseDown","style","icon","download","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","warningBlock","color","margin","alignItems","credentialTitle","fontWeight","buttonContainer","justifyContent","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","title","titleIcon","Grid","item","xs","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","undefined","consoleExtras","itemMap","url","api","path","JSON","stringify","variant","length","allCredentials","mode","onBeforeChange","editorHeight","sx","marginBottom","tooltipContainer","placement","overflow","border","language","onChange","evn","target","backgroundColor","fontFamily","minHeight","borderTop","paddingRight","marginLeft","type","tooltipHelper","valueString","maxWidth","whiteSpace","textOverflow","fileInputField","fileInputStyles","textBoxContainer","paddingLeft","name","disabled","required","error","accept","useState","showFileSelector","setShowSelector","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","Tooltip","e","fileName","evt","callback","file","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","IconButton","component","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","FormHr","styled","deleteDialogStyles","content","paddingBottom","customDialogSize","snackBarCommon","children","wideLimit","noContentPadding","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","event","reason","root","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","errorProps","cloneElement","configSectionItem","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","paddingTop","responsiveSectionItem","wrapperContainer","envVarRow","borderBottom","flex","minWidth","fileItem","rowActions","overlayAction","modalBasic","wizardCommon","formFieldStyles","exposeMinIO","createTenant","fields","configure","exposeConsole","setDomains","consoleDomain","minioDomains","tenantCustom","tenantEnvVars","envVars","tenantSecurityContext","customRuntime","runtimeClassName","validationErrors","setValidationErrors","updateField","useCallback","field","updateAddField","pageName","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","minioExtraValidations","validation","pattern","customPatternMessage","commonVal","commonFormValidation","isPageValid","valid","Object","keys","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","H3Section","descriptionText","h3Section","FormSwitchWrapper","checked","InputBoxWrapper","placeholder","domain","copyDomains","updateMinIODomain","addNewMinIODomain","Add","removeMinIODomain","multiContainer","min","SelectWrapper","fsGroupChangePolicy","options","runAsNonRoot","Divider","envVar","formFieldRow","key","existingEnvVars","setEnvVars","keyPair","i","push","filter","fIndex","useStyles","makeStyles","adUserDnRows","buttonTray","idpSelection","identityProvider","ADURL","ADSkipTLS","ADServerInsecure","ADGroupSearchBaseDN","ADGroupSearchFilter","ADUserDNs","ADGroupDNs","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","customIDPValidation","Fragment","Typography","gutterBottom","_","setIDPADUsrAtIndex","userDN","addIDPADUsrAtIndex","removeIDPADUsrAtIndex","Delete","setIDPADGroupAtIndex","addIDPADGroupAtIndex","removeIDPADGroupAtIndex","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","shortened","gridTemplateColumns","gridGap","accessKeys","secretKeys","setIDPUsrAtIndex","setIDPPwdAtIndex","addIDPNewKeyPair","removeIDPKeyPairAtIndex","getRandomString","Casino","protocolRadioOptions","RadioGroupSelector","currentSelection","setIDP","selectorOptions","minioCertificateRows","minioCertsContainer","minioCACertsRow","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","minioServerCertificates","minioClientCertificates","caCertificates","minioCAsCertificates","spacing","description","TLSHelpBox","FileSelector","encodedValue","addFileToKeyPair","cert","addKeyPair","deleteKeyPair","addFileToClientKeyPair","addClientKeyPair","deleteClientKeyPair","addFileToCaCertificates","addCaCertificate","deleteCaCertificate","encryptionTab","encryption","vaultEndpoint","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","encryptionValidation","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","encryptionTypeOptions","mutualTlsConfig","rightSpacer","responsiveContainer","replicas","rawConfiguration","enableEncryption","encryptionType","enableCustomCertsForKES","kesServerCertificate","minioMTLSCertificate","kmsMTLSCertificate","kmsCA","kesSecurityContext","encryptionAvailable","encoded_key","encoded_cert","textAlign","indicatorLabels","Tabs","indicatorColor","textColor","scrollButtons","Tab","CodeMirrorWrapper","editor","addFileKESServerCert","addFileMinIOMTLSCert","addFileKMSMTLSCert","addFileKMSCa","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","then","res","k","catch","err","setModalErrorSnackMessage","vl","kvp","kvs","a","indexOf","join","splittedLabels","forEach","splitItem","updateToleration","alterToleration","setTolerationInfo","tolerationValue","affinityHelpText","newKey","newLKP","arrCp","setKeyValuePairs","v","tol","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewToleration","removeToleration","customImage","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","kesImage","table","nodes","tenantSize","memoryNode","resourcesMemoryRequest","ecParity","distribution","ecParityCalc","cpuToUse","resourcesCPURequest","integrationSelection","usableInformation","storageFactors","find","erasureCode","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","drivesPerServer","driveSize","sizeUnit","wrapText","wordWrap","namespace","nameTenant","addNamespaceLoading","addNSLoading","addNamespaceOpen","addNSOpen","ConfirmDialog","confirmText","confirmButtonProps","isOpen","isLoading","onConfirm","createNamespaceAsync","closeAddNSModal","confirmationContent","LinearProgress","DialogContentText","formToRender","showNSCreateButton","namespaceError","openAddNSConfirm","debounceNamespace","useMemo","debounce","validateNamespaceAsync","cancel","setNamespace","overlayId","overlayIcon","openAddNSModal","NameTenantField","tenantName","tenantNameError","setTenantName","sizePreview","selectedStorageClass","selectedStorageType","storageClasses","features","selFeatures","isValid","IMkEnvs","setStorageType","storageType","mkPanelConfigurations","TenantSize","formRender","setFormRender","setConfiguration","resourcesConfigurations","includes","requiredPages","addSending","addingTenant","validPages","enabled","every","createTenantAsync","navigate","useNavigate","showNewCredentials","createdAccount","CredentialsPrompt","resetAddTenantForm","pageBox","settingsCommon","cancelButton","action","createButton","componentRender","filteredWizardSteps","buttons","advancedOnly","PageHeaderWrapper","PageLayout","GenericWizard","wizardSteps","iconComponent","help","FeatureItem","fontStyle","params","useParams","tenantNameParam","tenantNamespaceParam","tenantNamespace","borderRadius","href","rel","OIDCLogoElement","columnGap","LDAPLogoElement","BuiltInLogoElement","errorBlock","palette","main","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","DividerRoot","slot","overridesResolver","props","styles","ownerState","absolute","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","_extends","flexShrink","borderWidth","borderStyle","borderColor","vars","divider","borderBottomWidth","bottom","left","dividerChannel","alpha","borderRightWidth","alignSelf","top","transform","flexDirection","borderLeft","DividerWrapper","wrapper","wrapperVertical","React","inProps","ref","useThemeProps","role","other","_objectWithoutPropertiesLoose","slots","composeClasses","getDividerUtilityClass","useUtilityClasses","_jsx","as","clsx","getInputAdornmentUtilityClass","generateUtilityClass","_span","generateUtilityClasses","InputAdornmentRoot","capitalize","disablePointerEvents","active","inputAdornmentClasses","pointerEvents","disableTypography","variantProp","muiFormControl","useFormControl","hiddenLabel","FormControlContext","_jsxs"],"sourceRoot":""}