{"version":3,"file":"static/js/521.98426679.chunk.js","mappings":"0HAkBO,MAAMA,EAAc,CACzBC,MAAO,CACLC,MAAO,UACPC,SAAU,GACVC,UAAW,SACXC,WAAY,SACZ,wBAAyB,CACvBC,WAAY,KAGhBN,YAAa,CACXO,QAAS,OACTC,eAAgB,gBAChBC,aAAc,OACdC,WAAY,SACZ,WAAY,CACVC,SAAU,EACVL,WAAY,KAKLM,EAAuB,CAClCC,eAAgB,CACdC,UAAW,GACXP,QAAS,OACTG,WAAY,SACZF,eAAgB,WAEhB,WAAY,CACVO,YAAa,IAEf,sBAAuB,CACrBA,YAAa,IAGjBC,oBAAqB,CACnBC,UAAW,sBACXC,UAAW,OACXC,WAAY,I,iEC3BhB,MAyBA,EAzBkBC,IAQK,IARJ,YACjBC,EAAc,GAAE,SAChBC,EAAQ,cACRC,EAAa,MACbC,EAAK,GACLC,EAAK,kBAAiB,MACtBxB,EAAQ,GAAE,GACVyB,GACeN,EACf,OACEO,EAAAA,EAAAA,KAACC,EAAAA,IAAQ,CACPP,YAAaA,EACbQ,UAAWN,GAAgC,GAC3CE,GAAIA,EACJxB,MAAOA,EACPqB,SAAWQ,IACTR,EAASQ,EAAEC,OAAOP,MAAM,EAE1BA,MAAOA,EACPQ,WAAWL,EAAAA,EAAAA,KAACM,EAAAA,IAAU,IACtBP,GAAIA,GACJ,C,mLCpBN,MAAMQ,GAAYC,EAAAA,EAAAA,GAAaC,EAAAA,MAAW,IAAM,iCAmIhD,EAjIsBC,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,WAAEC,EAAU,gBAAEC,IAAoBC,EAAAA,EAAAA,MAElCC,GAAgBC,EAAAA,EAAAA,KACnBC,GAAoBA,EAAMC,QAAQH,iBAG9BI,EAASC,IAAcC,EAAAA,EAAAA,UAAyB,KAChDC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAASC,IAAcJ,EAAAA,EAAAA,WAAkB,IACzCK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAc,OAC7CO,EAAYC,IAAiBR,EAAAA,EAAAA,WAAkB,IAEtDS,EAAAA,EAAAA,YAAU,KACJN,GACFO,EAAAA,EACGC,OACC,MAAM,sBAADC,OACiBpB,EAAe,aAAAoB,OAAYrB,EAAU,UAE5DsB,MAAMC,IACL,IAAIC,EAAUC,IAAIF,EAAK,OAAQ,IAC/Bf,EAAWgB,GAAoB,IAC/BX,GAAW,EAAM,IAElBa,OAAOC,IACNd,GAAW,GACXjB,GAASgC,EAAAA,EAAAA,IAAqBD,GAAK,GAEzC,GACC,CAACf,EAAShB,EAAUI,EAAYC,IAEnC,MAUM4B,EAAkCtB,EAAQG,QAAQoB,GACtDA,EAAYC,KAAKC,cAAcC,SAASvB,EAAOsB,iBAuBjD,OANAd,EAAAA,EAAAA,YAAU,KACJf,GACFU,GAAW,EACb,GACC,CAACV,KAGF+B,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CACNpB,IACC/B,EAAAA,EAAAA,KAACO,EAAS,CACRwB,WAAYA,EACZF,YAAaA,EACbuB,2BAjB4BC,IAClCrB,GAAc,GACdJ,GAAW,EAAK,KAkBdqB,EAAAA,EAAAA,MAACK,EAAAA,IAAG,CAAAH,SAAA,EACFnD,EAAAA,EAAAA,KAACuD,EAAAA,IAAY,CAACC,WAAS,EAACzD,GAAI,CAAEjB,aAAc,IAAKqE,SAAC,aAGlDnD,EAAAA,EAAAA,KAACyD,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAI5D,GAAI1B,EAAAA,EAAYA,YAAY8E,UAC7CnD,EAAAA,EAAAA,KAAC4D,EAAAA,EAAS,CACR/D,MAAO4B,EACP9B,SAAWE,IACT6B,EAAU7B,EAAM,EAElBH,YAAa,wBACbI,GAAG,uBAGPE,EAAAA,EAAAA,KAACyD,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAGR,UAChBnD,EAAAA,EAAAA,KAAC6D,EAAAA,IAAS,CACRC,YAAa,CACX,CAAEC,KAAM,OAAQC,QA9CLC,IACrBpD,EAAS,eAADuB,OACSpB,GAAmB,GAAE,aAAAoB,OAAYrB,GAAc,GAAE,UAAAqB,OAC9D6B,EAAInB,MAGF,GAyCI,CAAEiB,KAAM,SAAUC,QA7DJE,IACxB,MAAMC,EAAS,IACVD,EACHE,OAAQrD,EACRsD,UAAWrD,GAEbc,EAAeqC,GACfnC,GAAc,EAAK,IAwDXsC,QAAS,CACP,CACEhG,MAAO,OACPiG,WAAY,QAEd,CACEjG,MAAO,SACPiG,WAAY,SACZC,MAAO,KAET,CACElG,MAAO,WACPiG,WAAY,WACZC,MAAO,KAET,CACElG,MAAO,gBACPiG,WAAY,iBAGhBE,UAAW9C,EACXL,QAASsB,EACT8B,WAAW,OACXC,QAAQ,OACRC,kBAAmB,+BAIhB,C","sources":["screens/Console/Common/FormComponents/common/styleLibrary.ts","screens/Console/Common/SearchBox.tsx","screens/Console/Tenants/TenantDetails/VolumesSummary.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This object contains variables that will be used across form components.\n\nexport const actionsTray = {\n  label: {\n    color: \"#07193E\",\n    fontSize: 13,\n    alignSelf: \"center\" as const,\n    whiteSpace: \"nowrap\" as const,\n    \"&:not(:first-of-type)\": {\n      marginLeft: 10,\n    },\n  },\n  actionsTray: {\n    display: \"flex\" as const,\n    justifyContent: \"space-between\" as const,\n    marginBottom: \"1rem\",\n    alignItems: \"center\",\n    \"& button\": {\n      flexGrow: 0,\n      marginLeft: 8,\n    },\n  },\n};\n\nexport const modalStyleUtils: any = {\n  modalButtonBar: {\n    marginTop: 15,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n\n    \"& button\": {\n      marginRight: 10,\n    },\n    \"& button:last-child\": {\n      marginRight: 0,\n    },\n  },\n  modalFormScrollable: {\n    maxHeight: \"calc(100vh - 300px)\",\n    overflowY: \"auto\",\n    paddingTop: 10,\n  },\n};\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputBox, SearchIcon } from \"mds\";\nimport { CSSObject } from \"styled-components\";\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  onChange: (value: string) => void;\n  overrideClass?: any;\n  id?: string;\n  label?: string;\n  sx?: CSSObject;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  onChange,\n  overrideClass,\n  value,\n  id = \"search-resource\",\n  label = \"\",\n  sx,\n}: SearchBoxProps) => {\n  return (\n    <InputBox\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : \"\"}\n      id={id}\n      label={label}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      value={value}\n      startIcon={<SearchIcon />}\n      sx={sx}\n    />\n  );\n};\n\nexport default SearchBox;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Box, DataTable, Grid, SectionTitle } from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { actionsTray } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { IStoragePVCs } from \"../../Storage/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { IPodListElement } from \"../ListTenants/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport api from \"../../../../common/api\";\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport SearchBox from \"../../Common/SearchBox\";\n\nconst DeletePVC = withSuspense(React.lazy(() => import(\"./DeletePVC\")));\n\nconst TenantVolumes = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { tenantName, tenantNamespace } = useParams();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant,\n  );\n\n  const [records, setRecords] = useState<IStoragePVCs[]>([]);\n  const [filter, setFilter] = useState(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [selectedPVC, setSelectedPVC] = useState<any>(null);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/pvcs`,\n        )\n        .then((res: IStoragePVCs) => {\n          let volumes = get(res, \"pvcs\", []);\n          setRecords(volumes ? volumes : []);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [loading, dispatch, tenantName, tenantNamespace]);\n\n  const confirmDeletePVC = (pvcItem: IStoragePVCs) => {\n    const delPvc = {\n      ...pvcItem,\n      tenant: tenantName,\n      namespace: tenantNamespace,\n    };\n    setSelectedPVC(delPvc);\n    setDeleteOpen(true);\n  };\n\n  const filteredRecords: IStoragePVCs[] = records.filter((elementItem) =>\n    elementItem.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  const PVCViewAction = (PVC: IPodListElement) => {\n    navigate(\n      `/namespaces/${tenantNamespace || \"\"}/tenants/${tenantName || \"\"}/pvcs/${\n        PVC.name\n      }`,\n    );\n    return;\n  };\n\n  const closeDeleteModalAndRefresh = (reloadData: boolean) => {\n    setDeleteOpen(false);\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoading(true);\n    }\n  }, [loadingTenant]);\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeletePVC\n          deleteOpen={deleteOpen}\n          selectedPVC={selectedPVC}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <Box>\n        <SectionTitle separator sx={{ marginBottom: 15 }}>\n          Volumes\n        </SectionTitle>\n        <Grid item xs={12} sx={actionsTray.actionsTray}>\n          <SearchBox\n            value={filter}\n            onChange={(value) => {\n              setFilter(value);\n            }}\n            placeholder={\"Search Volumes (PVCs)\"}\n            id=\"search-resource\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <DataTable\n            itemActions={[\n              { type: \"view\", onClick: PVCViewAction },\n              { type: \"delete\", onClick: confirmDeletePVC },\n            ]}\n            columns={[\n              {\n                label: \"Name\",\n                elementKey: \"name\",\n              },\n              {\n                label: \"Status\",\n                elementKey: \"status\",\n                width: 120,\n              },\n              {\n                label: \"Capacity\",\n                elementKey: \"capacity\",\n                width: 120,\n              },\n              {\n                label: \"Storage Class\",\n                elementKey: \"storageClass\",\n              },\n            ]}\n            isLoading={loading}\n            records={filteredRecords}\n            entityName=\"PVCs\"\n            idField=\"name\"\n            customPaperHeight={\"calc(100vh - 400px)\"}\n          />\n        </Grid>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TenantVolumes;\n"],"names":["actionsTray","label","color","fontSize","alignSelf","whiteSpace","marginLeft","display","justifyContent","marginBottom","alignItems","flexGrow","modalStyleUtils","modalButtonBar","marginTop","marginRight","modalFormScrollable","maxHeight","overflowY","paddingTop","_ref","placeholder","onChange","overrideClass","value","id","sx","_jsx","InputBox","className","e","target","startIcon","SearchIcon","DeletePVC","withSuspense","React","TenantVolumes","dispatch","useAppDispatch","navigate","useNavigate","tenantName","tenantNamespace","useParams","loadingTenant","useSelector","state","tenants","records","setRecords","useState","filter","setFilter","loading","setLoading","selectedPVC","setSelectedPVC","deleteOpen","setDeleteOpen","useEffect","api","invoke","concat","then","res","volumes","get","catch","err","setErrorSnackMessage","filteredRecords","elementItem","name","toLowerCase","includes","_jsxs","Fragment","children","closeDeleteModalAndRefresh","reloadData","Box","SectionTitle","separator","Grid","item","xs","SearchBox","DataTable","itemActions","type","onClick","PVC","pvcItem","delPvc","tenant","namespace","columns","elementKey","width","isLoading","entityName","idField","customPaperHeight"],"sourceRoot":""}