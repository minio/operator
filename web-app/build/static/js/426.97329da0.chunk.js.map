{"version":3,"file":"static/js/426.97329da0.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/TenantEvents.tsx","screens/Console/Tenants/TenantDetails/events/EventsList.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useParams } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  tableStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { IEvent } from \"../ListTenants/types\";\nimport { niceDays } from \"../../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport EventsList from \"./events/EventsList\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\n\ninterface ITenantEventsProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...searchField,\n    ...tableStyles,\n    ...containerForHeader,\n  });\n\nconst TenantEvents = ({ classes }: ITenantEventsProps) => {\n  const dispatch = useAppDispatch();\n  const params = useParams();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant,\n  );\n\n  const [events, setEvents] = useState<IEvent[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const tenantName = params.tenantName || \"\";\n  const tenantNamespace = params.tenantNamespace || \"\";\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoading(true);\n    }\n  }, [loadingTenant]);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/events`,\n        )\n        .then((res: IEvent[]) => {\n          for (let i = 0; i < res.length; i++) {\n            let currentTime = (Date.now() / 1000) | 0;\n\n            res[i].seen = niceDays((currentTime - res[i].last_seen).toString());\n          }\n          setEvents(res);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setLoading(false);\n        });\n    }\n  }, [loading, tenantNamespace, tenantName, dispatch]);\n\n  return (\n    <React.Fragment>\n      <h1 className={classes.sectionTitle}>Events</h1>\n      <Grid item xs={12}>\n        <EventsList events={events} loading={loading} />\n      </Grid>\n    </React.Fragment>\n  );\n};\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.loadingTenant,\n});\nconst connector = connect(mapState, null);\n\nexport default withStyles(styles)(connector(TenantEvents));\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { LinearProgress } from \"@mui/material\";\nimport { IEvent } from \"../../ListTenants/types\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Typography from \"@mui/material/Typography\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Paper from \"@mui/material/Paper\";\n\ninterface IEventsListProps {\n  events: IEvent[];\n  loading: boolean;\n}\n\nconst Event = (props: { event: IEvent }) => {\n  const { event } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" }, cursor: \"pointer\" }}>\n        <TableCell component=\"th\" scope=\"row\" onClick={() => setOpen(!open)}>\n          {event.event_type}\n        </TableCell>\n        <TableCell onClick={() => setOpen(!open)}>{event.reason}</TableCell>\n        <TableCell onClick={() => setOpen(!open)}>{event.seen}</TableCell>\n        <TableCell onClick={() => setOpen(!open)}>\n          {event.message.length >= 30\n            ? `${event.message.slice(0, 30)}...`\n            : event.message}\n        </TableCell>\n        <TableCell onClick={() => setOpen(!open)}>\n          {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={5}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography\n                style={{\n                  background: \"#efefef\",\n                  border: \"1px solid #dedede\",\n                  padding: 4,\n                  fontSize: 14,\n                  color: \"#666666\",\n                }}\n              >\n                {event.message}\n              </Typography>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nconst EventsList = ({ events, loading }: IEventsListProps) => {\n  if (loading) {\n    return <LinearProgress />;\n  }\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Type</TableCell>\n            <TableCell>Reason</TableCell>\n            <TableCell>Age</TableCell>\n            <TableCell>Message</TableCell>\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {events.map((event) => (\n            <Event key={`${event.event_type}-${event.seen}`} event={event} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default EventsList;\n"],"names":["connector","connect","state","loadingTenant","tenants","withStyles","theme","createStyles","actionsTray","searchField","tableStyles","containerForHeader","_ref","classes","dispatch","useAppDispatch","params","useParams","useSelector","events","setEvents","useState","loading","setLoading","tenantName","tenantNamespace","useEffect","api","invoke","concat","then","res","i","length","currentTime","Date","now","seen","niceDays","last_seen","toString","catch","err","setErrorSnackMessage","_jsxs","React","children","_jsx","className","sectionTitle","Grid","item","xs","EventsList","Event","props","event","open","setOpen","TableRow","sx","borderBottom","cursor","TableCell","component","scope","onClick","event_type","reason","message","slice","KeyboardArrowUpIcon","KeyboardArrowDownIcon","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","background","border","padding","fontSize","color","LinearProgress","TableContainer","Paper","Table","TableHead","TableBody","map"],"sourceRoot":""}