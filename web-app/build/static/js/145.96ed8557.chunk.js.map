{"version":3,"file":"static/js/145.96ed8557.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/SubnetLicenseTenant.tsx","screens/Console/Tenants/TenantDetails/TenantLicense.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Box, Button, Grid } from \"mds\";\nimport styled from \"styled-components\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { SubnetInfo } from \"../../License/types\";\nimport { Tenant } from \"../../../../api/operatorApi\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\ninterface ISubnetLicenseTenant {\n  tenant: Tenant | null;\n  loadingActivateProduct: any;\n  loadingLicenseInfo: boolean;\n  licenseInfo: SubnetInfo | undefined;\n  activateProduct: any;\n}\n\nconst LicenseContainer = styled.div(({ theme }) => ({\n  \"& .licenseInfoValue\": {\n    textTransform: \"none\",\n    fontSize: 14,\n    fontWeight: \"bold\",\n  },\n  \"&.licenseContainer\": {\n    position: \"relative\",\n    padding: \"20px 52px 0px 28px\",\n    background: get(theme, \"signalColors.info\", \"#2781B0\"),\n    boxShadow: \"0px 3px 7px #00000014\",\n    \"& h2\": {\n      color: get(theme, \"bgColor\", \"#fff\"),\n      marginBottom: 67,\n    },\n    \"& a\": {\n      textDecoration: \"none\",\n    },\n    \"& h3\": {\n      color: get(theme, \"bgColor\", \"#fff\"),\n      marginBottom: \"30px\",\n      fontWeight: \"bold\",\n    },\n    \"& h6\": {\n      color: \"#FFFFFF !important\",\n    },\n  },\n  \"& .licenseInfo\": {\n    color: get(theme, \"bgColor\", \"#fff\"),\n    position: \"relative\",\n  },\n  \"& .licenseInfoTitle\": {\n    textTransform: \"none\",\n    color: get(theme, \"mutedText\", \"#87888d\"),\n    fontSize: 11,\n  },\n  \"& .verifiedIcon\": {\n    width: 96,\n    position: \"absolute\",\n    right: 0,\n    bottom: 29,\n  },\n  \"& .noUnderLine\": {\n    textDecoration: \"none\",\n  },\n}));\n\nconst SubnetLicenseTenant = ({\n  tenant,\n  loadingActivateProduct,\n  loadingLicenseInfo,\n  licenseInfo,\n  activateProduct,\n}: ISubnetLicenseTenant) => {\n  const expiryTime = tenant?.subnet_license\n    ? DateTime.fromISO(tenant.subnet_license?.expires_at!)\n    : DateTime.now();\n\n  return (\n    <LicenseContainer\n      className={tenant && tenant.subnet_license ? \"licenseContainer\" : \"\"}\n    >\n      {tenant && tenant.subnet_license ? (\n        <Fragment>\n          <Grid container className={\"licenseInfo\"}>\n            <Grid item xs={6}>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoTitle\"}>\n                License\n              </Box>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoValue\"}>\n                Commercial License\n              </Box>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoTitle\"}>\n                Organization\n              </Box>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoValue\"}>\n                {tenant.subnet_license.organization}\n              </Box>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoTitle\"}>\n                Registered Capacity\n              </Box>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoValue\"}>\n                {niceBytes(\n                  (\n                    (tenant.subnet_license?.storage_capacity || 0) *\n                    1099511627776\n                  ) // 1 Terabyte = 1099511627776 Bytes\n                    .toString(10),\n                )}\n              </Box>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoTitle\"}>\n                Expiry Date\n              </Box>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoValue\"}>\n                {expiryTime.toFormat(\"yyyy-MM-dd\")}\n              </Box>\n            </Grid>\n            <Grid item xs={6}>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoTitle\"}>\n                Subscription Plan\n              </Box>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoValue\"}>\n                {tenant.subnet_license.plan}\n              </Box>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoTitle\"}>\n                Requestor\n              </Box>\n              <Box sx={{ marginBottom: 12 }} className={\"licenseInfoValue\"}>\n                {tenant.subnet_license.email}\n              </Box>\n            </Grid>\n            <img\n              className={\"verifiedIcon\"}\n              src={\"/verified.svg\"}\n              alt=\"verified\"\n            />\n          </Grid>\n        </Fragment>\n      ) : (\n        !loadingLicenseInfo && (\n          <Box\n            withBorders\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {!licenseInfo && (\n              <Link\n                to={\"/license\"}\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n                className={\"noUnderLine\"}\n              >\n                <TooltipWrapper tooltip={\"Activate Product\"}>\n                  <Button\n                    id={\"activate-product\"}\n                    label={\"Activate Product\"}\n                    onClick={() => false}\n                    variant={\"callAction\"}\n                  />\n                </TooltipWrapper>\n              </Link>\n            )}\n            {licenseInfo && tenant && (\n              <TooltipWrapper tooltip={\"Attach License\"}>\n                <Button\n                  id={\"attach-license\"}\n                  disabled={loadingActivateProduct}\n                  label={\"Attach License\"}\n                  onClick={() => activateProduct(tenant.namespace, tenant.name)}\n                  variant={\"callAction\"}\n                />\n              </TooltipWrapper>\n            )}\n          </Box>\n        )\n      )}\n    </LicenseContainer>\n  );\n};\n\nexport default SubnetLicenseTenant;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Loader, SectionTitle, Box, Grid } from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { SubnetInfo } from \"../../License/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport SubnetLicenseTenant from \"./SubnetLicenseTenant\";\nimport api from \"../../../../common/api\";\n\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { setTenantDetailsLoad } from \"../tenantsSlice\";\n\nconst TenantLicense = () => {\n  const dispatch = useAppDispatch();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant,\n  );\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n\n  const [licenseInfo, setLicenseInfo] = useState<SubnetInfo>();\n  const [loadingLicenseInfo, setLoadingLicenseInfo] = useState<boolean>(true);\n  const [loadingActivateProduct, setLoadingActivateProduct] =\n    useState<boolean>(false);\n\n  const activateProduct = (namespace: string, tenant: string) => {\n    if (loadingActivateProduct) {\n      return;\n    }\n    setLoadingActivateProduct(true);\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/subscription/namespaces/${namespace}/tenants/${tenant}/activate`,\n        {},\n      )\n      .then(() => {\n        setLoadingActivateProduct(false);\n        dispatch(setTenantDetailsLoad(true));\n        setLoadingLicenseInfo(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoadingActivateProduct(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  useEffect(() => {\n    if (loadingLicenseInfo) {\n      api\n        .invoke(\"GET\", `/api/v1/subscription/info`)\n        .then((res: SubnetInfo) => {\n          setLicenseInfo(res);\n          setLoadingLicenseInfo(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingLicenseInfo(false);\n        });\n    }\n  }, [loadingLicenseInfo]);\n\n  return (\n    <Fragment>\n      <SectionTitle separator sx={{ marginBottom: 15 }}>\n        License\n      </SectionTitle>\n      {loadingTenant ? (\n        <Box\n          sx={{\n            textAlign: \"center\",\n          }}\n        >\n          <Loader />\n        </Box>\n      ) : (\n        <Fragment>\n          {tenant && (\n            <Grid container>\n              <Grid item xs={12}>\n                <SubnetLicenseTenant\n                  tenant={tenant}\n                  loadingLicenseInfo={loadingLicenseInfo}\n                  loadingActivateProduct={loadingActivateProduct}\n                  licenseInfo={licenseInfo}\n                  activateProduct={activateProduct}\n                />\n              </Grid>\n            </Grid>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default TenantLicense;\n"],"names":["LicenseContainer","styled","div","_ref","theme","textTransform","fontSize","fontWeight","position","padding","background","get","boxShadow","color","marginBottom","textDecoration","width","right","bottom","_ref2","_tenant$subnet_licens","_tenant$subnet_licens2","tenant","loadingActivateProduct","loadingLicenseInfo","licenseInfo","activateProduct","expiryTime","subnet_license","DateTime","fromISO","expires_at","now","_jsx","className","children","Fragment","_jsxs","Grid","container","item","xs","Box","sx","organization","niceBytes","storage_capacity","toString","toFormat","plan","email","src","alt","withBorders","display","alignItems","justifyContent","Link","to","onClick","e","stopPropagation","TooltipWrapper","tooltip","Button","id","label","variant","disabled","namespace","name","TenantLicense","dispatch","useAppDispatch","loadingTenant","useSelector","state","tenants","tenantInfo","setLicenseInfo","useState","setLoadingLicenseInfo","setLoadingActivateProduct","useEffect","api","invoke","then","res","catch","err","SectionTitle","separator","textAlign","Loader","SubnetLicenseTenant","concat","setTenantDetailsLoad","setErrorSnackMessage"],"sourceRoot":""}