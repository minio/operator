{"version":3,"file":"static/js/450.c94e7ed6.chunk.js","mappings":"0NAuBA,MAAMA,EAAeC,EAAAA,GAAOC,KAAIC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC9CE,SAAU,WACVC,KAAM,EACNC,IAAK,GACLC,OAAQ,qBACRC,MAAO,OACPC,UAAW,aAAaC,IAAIP,EAAO,cAAe,aAClD,YAAa,CACXK,MAAO,IACPG,OAAQ,OACRC,UAAW,IAEb,iBAAkB,CAChBC,OAAQ,EACRT,SAAU,WACVG,OAAQ,qBACRC,MAAO,QAEV,IAwFD,EAtFYM,KACV,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAERC,EAASC,IAAcC,EAAAA,EAAAA,WAAkB,GAE1CC,EAAaL,EAAOK,YAAc,GAClCC,EAAkBN,EAAOM,iBAAmB,GAC5CC,EAAeC,EAAAA,OAAgC,MAErD,OACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,CAChBC,OACEL,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAI,WAAWL,SAAC,YACrB,OACDC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAI,eAAeV,aAA2BD,IAAaM,SAC9DN,IAEF,mBAGLY,SACER,EAAAA,EAAAA,MAACD,EAAAA,SAAc,CAAAG,SAAA,EACbC,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CACTC,QAASA,KACP,GACmB,OAAjBZ,GACyB,OAAzBA,EAAaa,SAC4B,OAAzCb,EAAaa,QAAQC,gBACrB,CACA,MAAMC,EACJf,EAAaa,QAAQC,gBAAgBE,SAASC,WAEhD,IAAIC,EAAM,IAMV,GAJIH,EAAII,QAAQ,KAAO,IACrBD,EAAM,KAGJH,EAAII,QAAQ,QAAU,EAAG,CAC3B,MAAMC,EAAO,GAAGL,IAAMG,QACtBlB,EAAaa,QAAQC,gBAAgBE,SAASK,QAAQD,EACxD,MACEpB,EAAaa,QAAQC,gBAAgBE,SAASM,QAElD,GAEFC,KAAK,QAAOnB,UAEZC,EAAAA,EAAAA,KAACmB,EAAAA,IAAW,OAEdnB,EAAAA,EAAAA,KAACM,EAAAA,GAAU,CACTC,QAASA,KACPrB,EACE,eAAeQ,aAA2BD,IAC3C,EAEHyB,KAAK,QAAOnB,UAEZC,EAAAA,EAAAA,KAACoB,EAAAA,IAAS,YAKlBvB,EAAAA,EAAAA,MAAC3B,EAAY,CAAA6B,SAAA,CACVT,IACCU,EAAAA,EAAAA,KAACqB,EAAAA,IAAG,CAACC,UAAW,SAASvB,UACvBC,EAAAA,EAAAA,KAACuB,EAAAA,IAAM,OAGXvB,EAAAA,EAAAA,KAAA,UACEwB,IAAK7B,EACL2B,UAAW,cACXG,MAAO,UACPC,IAAK,YAAYhC,KAAmBD,UACpCkC,OAASC,IACPrC,GAAW,EAAM,SAId,C","sources":["screens/Console/Tenants/TenantDetails/hop/Hop.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { Box, IconButton, Loader, LoginIcon, RefreshIcon } from \"mds\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport styled from \"styled-components\";\nimport PageHeaderWrapper from \"../../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst HopContainer = styled.div(({ theme }) => ({\n  position: \"absolute\",\n  left: 0,\n  top: 80,\n  height: \"calc(100vh - 81px)\",\n  width: \"100%\",\n  borderTop: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  \"& .loader\": {\n    width: 100,\n    margin: \"auto\",\n    marginTop: 80,\n  },\n  \"& .iframeStyle\": {\n    border: 0,\n    position: \"absolute\",\n    height: \"calc(100vh - 77px)\",\n    width: \"100%\",\n  },\n}));\n\nconst Hop = () => {\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const tenantName = params.tenantName || \"\";\n  const tenantNamespace = params.tenantNamespace || \"\";\n  const consoleFrame = React.useRef<HTMLIFrameElement>(null);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <Fragment>\n            <Link to={\"/tenants\"}>Tenants</Link>\n            {` > `}\n            <Link to={`/namespaces/${tenantNamespace}/tenants/${tenantName}`}>\n              {tenantName}\n            </Link>\n            {` > Management`}\n          </Fragment>\n        }\n        actions={\n          <React.Fragment>\n            <IconButton\n              onClick={() => {\n                if (\n                  consoleFrame !== null &&\n                  consoleFrame.current !== null &&\n                  consoleFrame.current.contentDocument !== null\n                ) {\n                  const loc =\n                    consoleFrame.current.contentDocument.location.toString();\n\n                  let add = \"&\";\n\n                  if (loc.indexOf(\"?\") < 0) {\n                    add = `?`;\n                  }\n\n                  if (loc.indexOf(\"cp=y\") < 0) {\n                    const next = `${loc}${add}cp=y`;\n                    consoleFrame.current.contentDocument.location.replace(next);\n                  } else {\n                    consoleFrame.current.contentDocument.location.reload();\n                  }\n                }\n              }}\n              size=\"large\"\n            >\n              <RefreshIcon />\n            </IconButton>\n            <IconButton\n              onClick={() => {\n                navigate(\n                  `/namespaces/${tenantNamespace}/tenants/${tenantName}`,\n                );\n              }}\n              size=\"large\"\n            >\n              <LoginIcon />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n      <HopContainer>\n        {loading && (\n          <Box className={\"loader\"}>\n            <Loader />\n          </Box>\n        )}\n        <iframe\n          ref={consoleFrame}\n          className={\"iframeStyle\"}\n          title={\"metrics\"}\n          src={`/api/hop/${tenantNamespace}/${tenantName}/?cp=y`}\n          onLoad={(val) => {\n            setLoading(false);\n          }}\n        />\n      </HopContainer>\n    </Fragment>\n  );\n};\n\nexport default Hop;\n"],"names":["HopContainer","styled","div","_ref","theme","position","left","top","height","width","borderTop","get","margin","marginTop","border","Hop","navigate","useNavigate","params","useParams","loading","setLoading","useState","tenantName","tenantNamespace","consoleFrame","React","_jsxs","Fragment","children","_jsx","PageHeaderWrapper","label","Link","to","actions","IconButton","onClick","current","contentDocument","loc","location","toString","add","indexOf","next","replace","reload","size","RefreshIcon","LoginIcon","Box","className","Loader","ref","title","src","onLoad","val"],"sourceRoot":""}