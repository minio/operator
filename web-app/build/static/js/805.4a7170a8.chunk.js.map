{"version":3,"file":"static/js/805.4a7170a8.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-virtualized/dist/es/Grid/types.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/react-virtualized/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  \"cellRenderer\": PropTypes.func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"deferredMeasurementCache\": PropTypes.object,\n  \"horizontalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"styleCache\": PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"visibleColumnIndices\": PropTypes.object.isRequired,\n  \"visibleRowIndices\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"clientWidth\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"scrollWidth\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": PropTypes.bool.isRequired,\n  \"vertical\": PropTypes.bool.isRequired,\n  \"size\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": PropTypes.number.isRequired,\n  \"columnOverscanStopIndex\": PropTypes.number.isRequired,\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStartIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStopIndex\": PropTypes.number.isRequired,\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": PropTypes.oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": PropTypes.oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": PropTypes.number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": PropTypes.number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": PropTypes.number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": PropTypes.number,\n  \"stop\": PropTypes.number\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","variant","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","value","as","clsx","_jsxs","Typography","componentWillMount","state","this","constructor","getDerivedStateFromProps","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","_classCallCheck","instance","Constructor","TypeError","_typeof","obj","Symbol","iterator","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","res","String","Number","_defineProperties","target","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","create","_defineProperty","assign","arguments","source","hasOwnProperty","apply","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_cellSizeGetter","_cellCount","_estimatedCellSize","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","document","createElement","scrollbarSize","recalc","canUseDOM","scrollDiv","style","top","width","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","minLen","n","slice","from","test","_toConsumableArray","iter","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","_slicedToArray","_s","_e","_x","_r","_arr","_n","_d","next","done","err","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"sourceRoot":""}