{"version":3,"file":"static/js/804.124473a6.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/Grid/types.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/types.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/List/types.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  \"cellRenderer\": PropTypes.func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"deferredMeasurementCache\": PropTypes.object,\n  \"horizontalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"styleCache\": PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"visibleColumnIndices\": PropTypes.object.isRequired,\n  \"visibleRowIndices\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"clientWidth\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"scrollWidth\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": PropTypes.bool.isRequired,\n  \"vertical\": PropTypes.bool.isRequired,\n  \"size\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": PropTypes.number.isRequired,\n  \"columnOverscanStopIndex\": PropTypes.number.isRequired,\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStartIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStopIndex\": PropTypes.number.isRequired,\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": PropTypes.oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": PropTypes.oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": PropTypes.number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": PropTypes.number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": PropTypes.number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": PropTypes.number,\n  \"stop\": PropTypes.number\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","var bpfrpt_proptype_Index = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_PositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeAndPositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"x\": PropTypes.number.isRequired,\n  \"y\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeInfo = process.env.NODE_ENV === 'production' ? null : {\n  \"height\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_Index };\nexport { bpfrpt_proptype_PositionInfo };\nexport { bpfrpt_proptype_ScrollPosition };\nexport { bpfrpt_proptype_SizeAndPositionInfo };\nexport { bpfrpt_proptype_SizeInfo };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import * as React from 'react';\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired,\n  \"startIndex\": PropTypes.number.isRequired,\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_RowRendererParams };\nexport { bpfrpt_proptype_RowRenderer };\nexport { bpfrpt_proptype_RenderedRows };\nexport { bpfrpt_proptype_Scroll };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","concat","capitalize","position","disablePointerEvents","variant","_ref","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","componentWillMount","state","this","constructor","getDerivedStateFromProps","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","assertThisInitialized","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","writable","configurable","defineProperty","calculateSizeAndPositionDataAndUpdateScrollOffset","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","_objectWithoutProperties","source","excluded","key","i","target","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","cachedIndices","callback","indices","keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","document","createElement","win","scrollbarSize","recalc","canUseDOM","scrollDiv","style","top","width","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","_slicedToArray","arr","r","l","t","Symbol","iterator","n","u","a","f","next","done","unsupportedIterableToArray","ge","c","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getScrollOffset","documentElement","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","container","containerElement","elementRect","containerRect","_elementRect","_containerRect","getPositionOffset","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"sourceRoot":""}