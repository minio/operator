{"version":3,"file":"static/js/521.26a78f27.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/VolumesSummary.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\nimport {\n  containerForHeader,\n  tableStyles,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { IStoragePVCs } from \"../../Storage/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport { SearchIcon } from \"mds\";\nimport { IPodListElement } from \"../ListTenants/types\";\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst DeletePVC = withSuspense(React.lazy(() => import(\"./DeletePVC\")));\n\ninterface ITenantVolumesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...tableStyles,\n    ...containerForHeader,\n  });\n\nconst TenantVolumes = ({ classes }: ITenantVolumesProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { tenantName, tenantNamespace } = useParams();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant\n  );\n\n  const [records, setRecords] = useState<IStoragePVCs[]>([]);\n  const [filter, setFilter] = useState(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [selectedPVC, setSelectedPVC] = useState<any>(null);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/pvcs`\n        )\n        .then((res: IStoragePVCs) => {\n          let volumes = get(res, \"pvcs\", []);\n          setRecords(volumes ? volumes : []);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [loading, dispatch, tenantName, tenantNamespace]);\n\n  const confirmDeletePVC = (pvcItem: IStoragePVCs) => {\n    const delPvc = {\n      ...pvcItem,\n      tenant: tenantName,\n      namespace: tenantNamespace,\n    };\n    setSelectedPVC(delPvc);\n    setDeleteOpen(true);\n  };\n\n  const filteredRecords: IStoragePVCs[] = records.filter((elementItem) =>\n    elementItem.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const PVCViewAction = (PVC: IPodListElement) => {\n    navigate(\n      `/namespaces/${tenantNamespace || \"\"}/tenants/${tenantName || \"\"}/pvcs/${\n        PVC.name\n      }`\n    );\n    return;\n  };\n\n  const closeDeleteModalAndRefresh = (reloadData: boolean) => {\n    setDeleteOpen(false);\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoading(true);\n    }\n  }, [loadingTenant]);\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeletePVC\n          deleteOpen={deleteOpen}\n          selectedPVC={selectedPVC}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <Grid container spacing={1}>\n        <h1 className={classes.sectionTitle}>Volumes</h1>\n        <Grid item xs={12}>\n          <TextField\n            placeholder=\"Search Volumes (PVCs)\"\n            className={classes.searchField}\n            id=\"search-resource\"\n            label=\"\"\n            InputProps={{\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            onChange={(e) => {\n              setFilter(e.target.value);\n            }}\n            variant=\"standard\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.tableBlock}>\n          <TableWrapper\n            itemActions={[\n              { type: \"view\", onClick: PVCViewAction },\n              { type: \"delete\", onClick: confirmDeletePVC },\n            ]}\n            columns={[\n              {\n                label: \"Name\",\n                elementKey: \"name\",\n              },\n              {\n                label: \"Status\",\n                elementKey: \"status\",\n                width: 120,\n              },\n              {\n                label: \"Capacity\",\n                elementKey: \"capacity\",\n                width: 120,\n              },\n              {\n                label: \"Storage Class\",\n                elementKey: \"storageClass\",\n              },\n            ]}\n            isLoading={loading}\n            records={filteredRecords}\n            entityName=\"PVCs\"\n            idField=\"name\"\n            customPaperHeight={classes.tableWrapper}\n          />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TenantVolumes);\n"],"names":["DeletePVC","withSuspense","React","withStyles","theme","createStyles","tenantDetailsStyles","tableStyles","containerForHeader","classes","dispatch","useAppDispatch","navigate","useNavigate","useParams","tenantName","tenantNamespace","loadingTenant","useSelector","state","tenants","useState","records","setRecords","filter","setFilter","loading","setLoading","selectedPVC","setSelectedPVC","deleteOpen","setDeleteOpen","useEffect","api","then","res","volumes","get","catch","err","setErrorSnackMessage","filteredRecords","elementItem","name","toLowerCase","includes","Fragment","closeDeleteModalAndRefresh","reloadData","container","spacing","className","sectionTitle","item","xs","placeholder","searchField","id","label","InputProps","disableUnderline","startAdornment","position","onChange","e","target","value","variant","tableBlock","itemActions","type","onClick","PVC","pvcItem","delPvc","tenant","namespace","columns","elementKey","width","isLoading","entityName","idField","customPaperHeight","tableWrapper"],"sourceRoot":""}