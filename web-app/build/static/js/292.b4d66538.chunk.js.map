{"version":3,"file":"static/js/292.b4d66538.chunk.js","mappings":"oUAoGA,GAAeA,EAAAA,EAAAA,IA1EA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,GAAa,CACXC,UAAW,CACTC,QAAS,OACTC,SAAU,SACVC,QAAS,gBAEXC,cAAe,CACb,wBAAyB,CACvBC,MAAO,OACPC,WAAY,UACZ,wBAAyB,CACvBC,OAAQ,SAEV,mCAAoC,CAClCC,YAAa,QACb,wBAAyB,CACvBD,OAAQ,UAId,kCAAmC,CACjCF,MAAO,QACPE,OAAQ,UAGZE,YAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLC,EAAAA,GAAWF,YAAU,IACxBG,SAAU,WAEX,GA4CL,EA1CuB,SAAHC,GAQb,IAADC,EAAAD,EAPJE,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAAE,EAAAH,EACVI,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAAE,EAAAL,EACVM,QAAAA,OAAO,IAAAD,EAAG,CAAC,EAACA,EAMZ,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQnB,UAAUsB,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQV,WAAWa,SAAA,CAAEP,EAAM,QAC3CQ,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQf,cAAckB,UACpCC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZP,MAAOA,EACPQ,UAAQ,EACRC,cACEH,EAAAA,EAAAA,KAACI,EAAAA,EAAc,CAACC,SAAS,MAAKN,UAC5BC,EAAAA,EAAAA,KAACM,EAAAA,EAAc,CAACC,QAAS,OAAOR,UAC9BC,EAAAA,EAAAA,KAACQ,IAAe,CAACC,KAAMf,EAAMK,UAC3BC,EAAAA,EAAAA,KAACU,EAAAA,IAAM,CACLC,GAAI,iBACJ,aAAW,OACXC,QAAS,WAAO,EAChBC,YAAa,WAAO,EACpBC,MAAO,CACLhC,MAAO,OACPE,OAAQ,OACRJ,QAAS,OAEXmC,MAAMf,EAAAA,EAAAA,KAACgB,EAAAA,IAAQ,kBAUnC,ICpBMC,EAAW,SAACC,EAAkBT,GAClC,IAAIU,EAAUC,SAASC,cAAc,KACrCF,EAAQG,aAAa,OAAQ,iCAAmCb,GAChEU,EAAQG,aAAa,WAAYJ,GAEjCC,EAAQL,MAAMpC,QAAU,OACxB0C,SAASG,KAAKC,YAAYL,GAE1BA,EAAQM,QACRL,SAASG,KAAKG,YAAYP,EAC5B,EAyMA,GAAe7C,EAAAA,EAAAA,IAhQA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,GAAa,CACXmD,aAAc,CACZC,MAAO,MACPvC,SAAU,SACVwC,OAAQ,kBACRnD,QAAS,OACToD,WAAY,SACZ,SAAU,CACR7C,YAAa,QACbD,OAAQ,GACRF,MAAO,KAGXiD,gBAAiB,CACfnD,QAAS,cACToD,WAAY,IACZ3C,SAAU,SAEZ4C,gBAAiB,CACfvD,QAAS,OACTwD,eAAgB,WAChBC,UAAW,QAEbC,iBAAkB,CAChBC,UAAW,OACXC,UAAW,KAEbC,YAAa,CACX7D,QAAS,OACToD,WAAY,UAEdU,aAAc,CACZvD,YAAa,UAEd,GA6NL,EAvM0B,SAAHK,GAMS,IAL9BM,EAAON,EAAPM,QACA6C,EAAiBnD,EAAjBmD,kBACAC,EAAIpD,EAAJoD,KACAC,EAAUrD,EAAVqD,WACAC,EAAMtD,EAANsD,OAEA,IAAKH,EACH,OAAO,KAET,IAAMI,EAAeC,IAAIL,EAAmB,UAAW,MACjDM,EAAMD,IAAIL,EAAmB,OAAO,GAmE1C,OACEzC,EAAAA,EAAAA,KAACgD,EAAAA,EAAY,CACXC,UAAWP,EACXQ,QAAS,WACPP,GACF,EACAQ,OACEnD,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ2C,YAAYxC,UAClCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,OAAK6C,EAAO,gBAGrBQ,WAAWpD,EAAAA,EAAAA,KAACqD,EAAAA,IAA6B,IAAItD,UAE7CF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAAC7E,WAAS,EAAAsB,SAAA,EACbF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ6D,eAAe1D,SAAA,CAAC,SAC7C6C,EAAO,iDACZG,GAAOF,IACP7C,EAAAA,EAAAA,KAAC0D,EAAAA,SAAc,CAAA3D,UACbF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQwC,iBAAiBrC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQmC,gBAAgBhC,SAAC,wBAGxC4D,MAAMC,QAAQf,IACbA,EAAagB,KAAI,SAACC,EAAiBC,GACjC,OACElE,EAAAA,EAAAA,MAAAmE,EAAAA,SAAA,CAAAjE,SAAA,EACEC,EAAAA,EAAAA,KAACiE,EAAc,CACbzE,MAAM,aACNE,MAAOoE,EAAgBI,aAEzBlE,EAAAA,EAAAA,KAACiE,EAAc,CACbzE,MAAM,aACNE,MAAOoE,EAAgBK,cAI/B,KACAR,MAAMC,QAAQf,KACdhD,EAAAA,EAAAA,MAAAmE,EAAAA,SAAA,CAAAjE,SAAA,EACEC,EAAAA,EAAAA,KAACiE,EAAc,CACbzE,MAAM,aACNE,MAAOmD,EAAaqB,aAEtBlE,EAAAA,EAAAA,KAACiE,EAAc,CACbzE,MAAM,aACNE,MAAOmD,EAAasB,qBAOb,OAAjBtB,QAA0CuB,IAAjBvB,KACzBhD,EAAAA,EAAAA,MAAAmE,EAAAA,SAAA,CAAAjE,SAAA,EACEC,EAAAA,EAAAA,KAACiE,EAAc,CACbzE,MAAM,aACNE,MAAO+C,EAAkByB,WAAa,MAExClE,EAAAA,EAAAA,KAACiE,EAAc,CACbzE,MAAM,aACNE,MAAO+C,EAAkB0B,WAAa,QAI3CpB,GACC/C,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ+B,aAAa5B,SAAC,iEAItCF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ+B,aAAa5B,SAAA,EACnCC,EAAAA,EAAAA,KAACqE,EAAAA,IAAQ,KACTrE,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oFAOZC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQqC,gBAAgBlC,UAClDgD,IACAlD,EAAAA,EAAAA,MAAAmE,EAAAA,SAAA,CAAAjE,SAAA,EACEC,EAAAA,EAAAA,KAACM,EAAAA,EAAc,CACbC,QACE,wIACDR,UAEDC,EAAAA,EAAAA,KAACU,EAAAA,IAAM,CACLC,GAAI,kBACJnB,MAAO,sBACPM,UAAWF,EAAQ4C,aACnB5B,QA3JO,WACrB,IAAI0D,EAAgB,CAAC,EAEjBzB,EAmBAyB,EAlBGX,MAAMC,QAAQf,GASFA,EAAagB,KAAI,SAACU,GAC/B,MAAO,CACLC,IAAKD,EAAQC,IACbN,UAAWK,EAAQL,UACnBC,UAAWI,EAAQJ,UACnBM,IAAK,OACLC,KAAM,OAEV,IACuB,GAjBP,CACdF,IAAK3B,EAAa2B,IAClBN,UAAWrB,EAAaqB,UACxBC,UAAWtB,EAAasB,UACxBM,IAAK,OACLC,KAAM,QAeVJ,EAAgB,CACdE,IAAK/B,EAAkB+B,IACvBN,UAAWzB,EAAkByB,UAC7BC,UAAW1B,EAAkB0B,UAC7BM,IAAK,OACLC,KAAM,QAIVzD,EACE,mBACA0D,KAAKC,WAASzF,EAAAA,EAAAA,GAAC,CAAC,EACXmF,IAGT,EAoHgBvD,MAAMf,EAAAA,EAAAA,KAAC6E,EAAAA,IAAY,IACnBC,QAAQ,iBAIXnB,MAAMC,QAAQf,IAAiBA,EAAakC,OAAS,IACpD/E,EAAAA,EAAAA,KAACM,EAAAA,EAAc,CACbC,QACE,iNACDR,UAEDC,EAAAA,EAAAA,KAACU,EAAAA,IAAM,CACLC,GAAI,sBACJnB,MAAO,kCACPM,UAAWF,EAAQ4C,aACnB5B,QAjIc,WAC9B,IAAIoE,EAAiB,CAAC,EAEpBnC,GACAc,MAAMC,QAAQf,IACdA,EAAakC,OAAS,IAQtBC,EANenC,EAAagB,KAAI,SAACU,GAC/B,MAAO,CACLL,UAAWK,EAAQL,UACnBC,UAAWI,EAAQJ,UAEvB,KAGFlD,EACE,uBACA0D,KAAKC,WAASzF,EAAAA,EAAAA,GAAC,CAAC,EACX6F,IAGT,EA6GkBjE,MAAMf,EAAAA,EAAAA,KAAC6E,EAAAA,IAAY,IACnBC,QAAQ,aACRlD,MAAM,uBAU1B,G,6LCjJA,KAAetD,EAAAA,EAAAA,IAtGA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,GAAC,CAAC,EACTC,EAAAA,IACF,GAmGL,EAjG0B,SAAHE,GASF,IARnBI,EAAKJ,EAALI,MAAKH,EAAAD,EACLE,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAA0F,EAAA3F,EACViB,QAAAA,OAAO,IAAA0E,EAAG,GAAEA,EAAAC,EAAA5F,EACZ6F,KAAAA,OAAI,IAAAD,EAAG,OAAMA,EACbtF,EAAON,EAAPM,QACAwF,EAAc9F,EAAd8F,eACgBC,GADF/F,EACdY,SAAgBZ,EAChBgG,cAAAA,OAAY,IAAAD,EAAG,QAAOA,EAEtB,OACExF,EAAAA,EAAAA,MAAC6D,EAAAA,SAAc,CAAA3D,SAAA,EACbC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI+B,GAAI,CAAEC,aAAc,QAASzF,UAC9CF,EAAAA,EAAAA,MAAC4F,EAAAA,EAAU,CAAC3F,UAAWF,EAAQV,WAAWa,SAAA,EACxCC,EAAAA,EAAAA,KAAA,QAAAD,SAAOP,IACM,KAAZe,IACCP,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ8F,iBAAiB3F,UACvCC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAO,CAACxC,MAAO5C,EAASqF,UAAU,YAAW7F,UAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQW,QAAQR,UAC9BC,EAAAA,EAAAA,KAAC6F,EAAAA,IAAQ,gBAQrB7F,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJ1C,MAAO,CACLwB,UAAWgD,EACXQ,SAAU,OACVC,OAAQ,qBACRhG,UAEFC,EAAAA,EAAAA,KAACgG,EAAAA,EAAU,CACTtG,MAAOA,EACPuG,SAAUd,EACVe,SAAU,SAACC,GACTf,EAAe,KAAM,KAAMe,EAAIC,OAAO1G,MACxC,EACAiB,GAAI,eACJ/B,QAAS,GACTkC,MAAO,CACLzB,SAAU,GACVgH,gBAAiB,UACjBC,WACE,+EACFC,UAAWjB,GAAgB,UAC3B1D,MAAO,gBAIb5B,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJ+B,GAAI,CACFxG,WAAY,UACZgH,OAAQ,oBACRS,UAAW,GACXzG,UAEFC,EAAAA,EAAAA,KAACyG,EAAAA,EAAG,CACFlB,GAAI,CACF7G,QAAS,OACToD,WAAY,SACZlD,QAAS,MACT8H,aAAc,MACdxE,eAAgB,WAChB,WAAY,CACVlD,OAAQ,OACRF,MAAO,OACPF,QAAS,MACT,aAAc,CACZ+H,WAAY,OAGhB5G,UAEFC,EAAAA,EAAAA,KAACM,EAAAA,EAAc,CAACC,QAAS,oBAAoBR,UAC3CC,EAAAA,EAAAA,KAACQ,IAAe,CAACC,KAAMf,EAAMK,UAC3BC,EAAAA,EAAAA,KAACU,EAAAA,IAAM,CACLkG,KAAM,SACNjG,GAAI,mBACJI,MAAMf,EAAAA,EAAAA,KAACgB,EAAAA,IAAQ,IACfY,MAAO,UACPkD,QAAS,sBAQzB,G,oPC2CA,GAAexG,EAAAA,EAAAA,IAvIA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTC,EAAAA,IACAyH,EAAAA,IAAa,IAChBC,YAAa,CACXC,SAAU,IACVC,WAAY,SACZlB,SAAU,SACVmB,aAAc,WACd9E,UAAW,GAEb+E,eAAgB,CACdrF,OAAQ,SACR,4BAA6B,CAC3BlD,SAAU,YAGXwI,EAAAA,IAAe,IAClBjI,YAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLC,EAAAA,GAAWF,YAAU,IACxB8C,WAAY,WAEdoF,kBAAgBjI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXC,EAAAA,GAAWgI,kBAAgB,IAC9BL,SAAU,OACVhB,OAAQ,oBACRsB,YAAa,WAEd,GA2GL,EAzGqB,SAAH/H,GAYI,IAXpBE,EAAKF,EAALE,MACAI,EAAON,EAAPM,QACAsG,EAAQ5G,EAAR4G,SACAvF,EAAErB,EAAFqB,GACA2G,EAAIhI,EAAJgI,KAAIC,EAAAjI,EACJkI,SAAAA,OAAQ,IAAAD,GAAQA,EAAAtC,EAAA3F,EAChBiB,QAAAA,OAAO,IAAA0E,EAAG,GAAEA,EACZwC,EAAQnI,EAARmI,SAAQC,EAAApI,EACRqI,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAAE,EAAAtI,EACVuI,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EAAAnI,EAAAH,EACXI,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAEVqI,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDI,EAAgBF,EAAA,GAAEG,EAAeH,EAAA,GAExC,OACEhI,EAAAA,EAAAA,KAAC0D,EAAAA,SAAc,CAAA3D,UACbF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJ1D,UAAS,GAAAsI,OAAKxI,EAAQsH,eAAc,KAAAkB,OAAIxI,EAAQyI,YAAW,KAAAD,OACzDxI,EAAQ0I,eAAc,KAAAF,OACV,KAAVT,EAAe/H,EAAQ2I,aAAe,IAAKxI,SAAA,CAEpC,KAAVP,IACCK,EAAAA,EAAAA,MAAC4F,EAAAA,EAAU,CACT+C,QAAS7H,EACTb,UAAS,GAAAsI,OAAe,KAAVT,EAAe/H,EAAQ6I,gBAAkB,GAAE,KAAAL,OACvDxI,EAAQV,YACPa,SAAA,EAEHF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CACGP,EACAiI,EAAW,IAAM,MAEP,KAAZlH,IACCP,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ8F,iBAAiB3F,UACvCC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAO,CAACxC,MAAO5C,EAASqF,UAAU,YAAW7F,UAC5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQW,QAAQR,UAC9BC,EAAAA,EAAAA,KAAC6F,EAAAA,IAAQ,aAQpBqC,GAA8B,KAAVxI,GACnBG,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQwH,iBAAiBrH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SACE4G,KAAK,OACLU,KAAMA,EACNpB,SAAU,SAACwC,GACT,IAAMC,EAAW7F,IAAI4F,EAAG,uBAAwB,KCnHrC,SAACE,EAAUC,GACpC,IAAMC,EAAOF,EAAIxC,OAAO2C,MAAM,GACxBC,EAAS,IAAIC,WACnBD,EAAOE,cAAcJ,GAErBE,EAAOG,OAAS,WAGd,IAAMC,EAAaJ,EAAOK,OAC1B,GAAID,EAAY,CACd,IAAME,EAAYF,EAAWG,WAAWC,MAAM,WAErB,IAArBF,EAAUvE,QACZ8D,EAASS,EAAU,GAEvB,CACF,CACF,CDmGgBG,CAAYf,GAAG,SAACgB,GACdxD,EAASwD,EAAMf,EACjB,GACF,EACAd,OAAQA,EACRJ,SAAUA,EACVD,SAAUA,EACV1H,UAAWF,EAAQsH,iBAGV,KAAVxH,IACCM,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACT/H,MAAM,UACN,aAAW,iBACXgI,UAAU,OACVhJ,QAAS,WACPuH,GAAgB,EAClB,EACA0B,eAAe,EACfC,oBAAoB,EACpBC,KAAK,QAAOhK,UAEZC,EAAAA,EAAAA,KAACgK,EAAAA,EAAU,MAIJ,KAAVrC,IAAgB3H,EAAAA,EAAAA,KAACiK,EAAAA,EAAU,CAACC,aAAcvC,QAG7C9H,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQuK,aAAapK,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQkH,YAAY/G,SAAEL,KACtCM,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACT/H,MAAM,UACN,aAAW,iBACXgI,UAAU,OACVhJ,QAAS,WACPuH,GAAgB,EAClB,EACA0B,eAAe,EACfC,oBAAoB,EACpBC,KAAK,QAAOhK,UAEZC,EAAAA,EAAAA,KAACoK,EAAAA,EAAc,aAO7B,G,yCEnKMC,GAASC,E,SAAAA,GAAO,KAAPA,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+HAQ3B,K,qNCmJA,KAAelM,EAAAA,EAAAA,IAlIA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTsL,EAAAA,IAAkB,IACrBC,QAAS,CACP9L,QAAS,GACT+L,cAAe,GAEjBC,iBAAkB,CAChB9L,MAAO,OACPiI,SAAU,MAET8D,EAAAA,IACF,GAsHL,EApHqB,SAAHvL,GASE,IARlB4D,EAAO5D,EAAP4D,QACAD,EAAS3D,EAAT2D,UACAE,EAAK7D,EAAL6D,MACApD,EAAQT,EAARS,SACAH,EAAON,EAAPM,QAAOkL,EAAAxL,EACPyL,UAAAA,OAAS,IAAAD,GAAOA,EAChBE,EAAgB1L,EAAhB0L,iBAAgBC,EAAA3L,EAChB8D,UAAAA,OAAS,IAAA6H,EAAG,KAAIA,EAEVC,GAAWC,EAAAA,EAAAA,MACjBrD,GAAwCC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzDsD,EAAYpD,EAAA,GAAEqD,EAAerD,EAAA,GAE9BsD,GAAoBC,EAAAA,EAAAA,KACxB,SAACC,GAAe,OAAKA,EAAMC,OAAOC,aAAa,KAGjDC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,IAAqB,IAChC,GAAG,CAACV,KAEJS,EAAAA,EAAAA,YAAU,WACR,GAAIL,EAAmB,CACrB,GAAkC,KAA9BA,EAAkBO,QAEpB,YADAR,GAAgB,GAIa,UAA3BC,EAAkB1E,MACpByE,GAAgB,EAEpB,CACF,GAAG,CAACC,IAEJ,IAKMQ,EAAaf,EACf,CACEnL,QAAS,CACPmM,MAAOnM,EAAQgL,mBAGnB,CAAE7D,SAAU,KAAeiF,WAAW,GAEtCH,EAAU,GAYd,OAVIP,IACFO,EAAUP,EAAkBW,kBAEa,KAAvCX,EAAkBW,kBAClBX,EAAkBW,iBAAiBlH,OAAS,KAE5C8G,EAAUP,EAAkBO,WAK9BhM,EAAAA,EAAAA,MAACqM,EAAAA,GAAM/M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACLuD,KAAMO,EACNrD,QAASA,GACLkM,GAAU,IACdK,OAAQ,QACRjJ,QAAS,SAACkJ,EAAOC,GACA,kBAAXA,GACFnJ,GAEJ,EACApD,UAAWF,EAAQ0M,KAAKvM,SAAA,EAExBF,EAAAA,EAAAA,MAAC0M,EAAAA,EAAW,CAACzM,UAAWF,EAAQuD,MAAMpD,SAAA,EACpCF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ4M,UAAUzM,SAAA,CAC/BqD,EAAU,IAAED,MAEfnD,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ6M,eAAe1M,UACrCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACT,aAAW,QACXhJ,GAAI,QACJb,UAAWF,EAAQ8M,YACnB9L,QAASsC,EACT2G,eAAa,EACbE,KAAK,QAAOhK,UAEZC,EAAAA,EAAAA,KAAC2M,EAAAA,EAAS,YAKhB3M,EAAAA,EAAAA,KAAC4M,EAAAA,EAAS,CAACC,SAAS,KACpB7M,EAAAA,EAAAA,KAAC8M,EAAAA,EAAQ,CACPpK,KAAM0I,EACNtL,UAAWF,EAAQmN,cACnB7J,QAAS,WA3DbmI,GAAgB,GAChBH,GAASU,EAAAA,EAAAA,IAAqB,IA4D1B,EACAC,QAASA,EACTmB,aAAc,CACZlN,UAAU,GAADsI,OAAKxI,EAAQqN,SAAQ,KAAA7E,OAC5BkD,GAAgD,UAA3BA,EAAkB1E,KACnChH,EAAQsN,cACR,KAGRC,iBACE7B,GAAgD,UAA3BA,EAAkB1E,KAAmB,IAAQ,OAGtE5G,EAAAA,EAAAA,KAACoN,EAAAA,EAAa,CAACtN,UAAWkL,EAAmB,GAAKpL,EAAQ8K,QAAQ3K,SAC/DA,OAIT,G,uECtHA,IAfuB,SAAHT,GAKS,IAJ3BiB,EAAOjB,EAAPiB,QACAR,EAAQT,EAARS,SAAQsN,EAAA/N,EACRgO,WAAAA,OAAU,IAAAD,EAAG,KAAIA,EACjBzH,EAAStG,EAATsG,UAEA,OACE5F,EAAAA,EAAAA,KAAC2F,EAAAA,EAAO,CAACxC,MAAO5C,EAASqF,UAAWA,EAAU7F,UAC5CC,EAAAA,EAAAA,KAAA,QAAAD,SACGuN,GAAaC,EAAAA,EAAAA,cAAaxN,GAAQZ,EAAAA,EAAAA,GAAA,GAAOmO,IAAgBvN,KAIlE,C,gXCgpBA,GAAezB,EAAAA,EAAAA,IAxoBA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXqO,kBAAmB,CACjBvO,YAAa,GACbuG,aAAc,GAEd,oBAAqB,CACnBO,OAAQ,kBAGZ0H,0BAA2B,CACzB9G,WAAY,GACZ7H,MAAO,MACP+C,OAAQ,QAEV6L,cAAe,CACbzO,YAAa,IAEf0O,YAAUxO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLyO,EAAAA,GAAmBD,YAAU,IAChCE,WAAY,GACZrI,aAAc,KAEhBsI,sBAAuB,CACrB,4BAA6B,CAC3BnP,SAAU,SACVmD,WAAY,aAEZ,cAAe,CACb0D,aAAc,EACdvG,YAAa,KAInB8O,iBAAkB,CAChBrP,QAAS,OACT8G,aAAc,IAEhBwI,UAAW,CACTtP,QAAS,OACToD,WAAY,SACZI,eAAgB,aAChB,eAAgB,CACd+L,aAAc,GAEhB,4BAA6B,CAC3BC,KAAM,EAEN,cAAe,CACbC,SAAU,MAIhBC,SAAU,CACRnP,YAAa,GACbP,QAAS,OACT,cAAe,CACbyP,SAAU,IAGZ,4BAA6B,CAC3BxP,SAAU,WAGd0P,WAAY,CACV3P,QAAS,OACTwD,eAAgB,WAChB,4BAA6B,CAC3BgM,KAAM,IAGVI,cAAe,CACb3H,WAAY,GACZ,QAAS,CACPI,SAAU,GACVzE,UAAW,IAEb,WAAY,CACVvD,WAAY,aAGbwP,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACF,GAojBL,EAljBkB,SAAHnP,GAAsC,IAAhCM,EAAON,EAAPM,QACbsL,GAAWC,EAAAA,EAAAA,MAEXuD,GAAcnD,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUH,WAAW,IAEhEI,GAAgBvD,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUC,aAAa,IAElEC,GAAaxD,EAAAA,EAAAA,KACjB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUE,UAAU,IAE/DC,GAAgBzD,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUG,aAAa,IAElEC,GAAe1D,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUI,YAAY,IAEjEC,GAAe3D,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUK,YAAY,IAEjEC,GAAgB5D,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUO,OAAO,IAE5DC,GAAwB9D,EAAAA,EAAAA,KAC5B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOC,UAAUQ,qBAAqB,IAEvDC,GAAgB/D,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUS,aAAa,IAElEC,GAAmBhE,EAAAA,EAAAA,KACvB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUU,gBAAgB,IAG3EzH,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,GAGtC0H,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CAAEC,SAAU,YAAaF,MAAOA,EAAOlQ,MAAOA,IAEjE,GACA,CAACwL,KAIHS,EAAAA,EAAAA,YAAU,WACR,IAAIoE,EAAyC,GAiC7C,GAhCIb,IACFa,EAA0B,CACxB,CACEC,SAAU,mCACVvI,UAAU,EACV/H,MAAO2P,EAAsBY,UAC7BC,iBACsC,KAApCb,EAAsBY,WACtBE,SAASd,EAAsBY,WAAa,EAC9CG,wBAAwB,8CAE1B,CACEJ,SAAU,oCACVvI,UAAU,EACV/H,MAAO2P,EAAsBgB,WAC7BH,iBACuC,KAArCb,EAAsBgB,YACtBF,SAASd,EAAsBgB,YAAc,EAC/CD,wBAAwB,+CAE1B,CACEJ,SAAU,iCACVvI,UAAU,EACV/H,MAAO2P,EAAsBiB,QAC7BJ,iBACoC,KAAlCb,EAAsBiB,SACtBH,SAASd,EAAsBiB,SAAY,EAC7CF,wBAAwB,8CAK1BrB,EAAY,CACd,IAAMwB,EAAwBtB,EAAapL,KAAI,SAAC2M,EAAYzM,GAC1D,MAAO,CACLiM,SAAS,gBAAD5H,OAAkBrE,EAAMwF,YAChC9B,UAAU,EACV/H,MAAO8Q,EACPC,QAAS,6CACTC,qBACE,mEAEN,IAEAX,EAAuB,GAAA3H,QAAAuI,EAAAA,EAAAA,GAClBZ,IAAuBY,EAAAA,EAAAA,GACvBJ,GAAqB,CACxB,CACEP,SAAU,iBACVvI,UAAU,EACV/H,MAAOsP,EACPyB,QACE,kEACFC,qBACE,8FAGR,CAEA,IAAME,GAAYC,EAAAA,EAAAA,GAAqBd,GAEvC7E,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,YACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CACD1F,EACAgE,EACAG,EACAN,EACAC,EACAC,IAGF,IAAMiC,EAAkB,SAACC,GACvB1B,GAAoB2B,EAAAA,EAAAA,IAAqB5B,EAAkB2B,GAC7D,EASA,OACEtR,EAAAA,EAAAA,MAACwR,EAAAA,EAAK,CAACvR,UAAWF,EAAQ0R,aAAavR,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ2R,cAAcxR,SAAA,EACpCC,EAAAA,EAAAA,KAACwR,EAAAA,EAAS,CAAAzR,SAAC,eACXC,EAAAA,EAAAA,KAAA,QAAMF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,mDAI5CF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ2R,cAAcxR,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAWF,EAAQ8R,UAAU3R,SAAC,cAClCC,EAAAA,EAAAA,KAAA,QAAMF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,mGAK5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ4N,kBAAkBzN,UACtDC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,eACNiB,GAAG,eACH2G,KAAK,eACLsK,QAASlD,EACTxI,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QAExBlC,EAAY,cAAekC,EAC7B,EACApS,MAAO,4BAGXQ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ4N,kBAAkBzN,UACtDC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,iBACNiB,GAAG,iBACH2G,KAAK,iBACLsK,QAAS9C,EACT5I,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QAExBlC,EAAY,gBAAiBkC,EAC/B,EACApS,MAAO,8BAGXQ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ4N,kBAAkBzN,UACtDC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,iBACNiB,GAAG,iBACH2G,KAAK,iBACLsK,QAAS7C,EACT7I,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QAExBlC,EAAY,aAAckC,EAC5B,EACApS,MAAO,yBAGVuP,IACC/O,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ6N,0BAA0B1N,UAC9DF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,8BAG5CF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAS,GAAAsI,OAAKxI,EAAQ4N,mBAAoBzN,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ8N,cAAc3N,UACpCC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,iBACH2G,KAAK,iBACLpB,SAAU,SAACwC,GACTgH,EAAY,gBAAiBhH,EAAEtC,OAAO1G,OACtCwR,EAAgB,mCAClB,EACA1R,MAAM,iBACNE,MAAOsP,EACP8C,YACE,qDAEFnK,MAAO6H,EAAiC,gBAAK,QAGjD3P,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAS,GAAAsI,OAAKxI,EAAQkO,uBAAwB/N,SAChDkP,EAAapL,KAAI,SAACkO,EAAQhO,GACzB,OACElE,EAAAA,EAAAA,MAAA,OACEC,UAAS,GAAAsI,OAAKxI,EAAQ8N,cAAa,KAAAtF,OAAIxI,EAAQmO,kBAAmBhO,SAAA,EAGlEC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAE,gBAAAyH,OAAkBrE,EAAMwF,YAC1BjC,KAAI,gBAAAc,OAAkBrE,EAAMwF,YAC5BrD,SAAU,SACRwC,IAvGA,SAAChJ,EAAeqE,GACxC,IAAMiO,GAAWrB,EAAAA,EAAAA,GAAO1B,GACxB+C,EAAYjO,GAASrE,EAErBgQ,EAAY,eAAgBsC,EAC9B,CAoG0BC,CAAkBvJ,EAAEtC,OAAO1G,MAAOqE,EACpC,EACAvE,MAAK,gBAAA4I,OAAkBrE,EAAQ,GAC/BrE,MAAOqS,EACPD,YAAa,8BACbnK,MACE6H,EAAiB,gBAADpH,OACErE,EAAMwF,cACnB,MAGTvJ,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,kBAAMsK,GAASgH,EAAAA,EAAAA,MAAoB,EAC5C1K,SAAUzD,IAAUkL,EAAalK,OAAS,EAAEhF,UAE5CC,EAAAA,EAAAA,KAACmS,EAAAA,EAAO,SAIZnS,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,kBAAMsK,GAASkH,EAAAA,EAAAA,IAAkBrO,GAAO,EACjDyD,SAAUyH,EAAalK,QAAU,EAAEhF,UAEnCC,EAAAA,EAAAA,KAACqS,EAAAA,IAAU,UAET,oBAAAjK,OArCmBrE,EAAMwF,YAwCrC,kBAQZvJ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ4N,kBAAkBzN,UACtDC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,eACNiB,GAAG,uBACH2G,KAAK,uBACLsK,QAAS1C,EACThJ,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QAExBlC,EAAY,eAAgBkC,EAC9B,EACApS,MAAO,uBAGV0P,IACClP,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ6N,0BAA0B1N,UAC9DF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,+BAG5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAS,GAAAsI,OAAKxI,EAAQ4N,mBAAoBzN,UAC3DF,EAAAA,EAAAA,MAAA,OACEC,UAAS,GAAAsI,OAAKxI,EAAQ0S,eAAc,KAAAlK,OAAIxI,EAAQkO,uBAAwB/N,SAAA,EAExEC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ8N,cAAc3N,UACpCC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdjL,KAAK,SACLjG,GAAG,mCACH2G,KAAK,mCACLpB,SAAU,SAACwC,GACTgH,EAAY,yBAAuBvQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC9BkQ,GAAqB,IACxBY,UAAWvH,EAAEtC,OAAO1G,SAEtBwR,EAAgB,mCAClB,EACA1R,MAAM,cACNE,MAAO2P,EAAsBY,UAC7BxI,UAAQ,EACRE,MACE6H,EAAmD,kCAAK,GAE1D+C,IAAI,SAGRvS,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ8N,cAAc3N,UACpCC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdjL,KAAK,SACLjG,GAAG,oCACH2G,KAAK,oCACLpB,SAAU,SAACwC,GACTgH,EAAY,yBAAuBvQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC9BkQ,GAAqB,IACxBgB,WAAY3H,EAAEtC,OAAO1G,SAEvBwR,EAAgB,oCAClB,EACA1R,MAAM,eACNE,MAAO2P,EAAsBgB,WAC7B5I,UAAQ,EACRE,MACE6H,EAAoD,mCACpD,GAEF+C,IAAI,cAKZvS,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAS,GAAAsI,OAAKxI,EAAQ4N,mBAAoBzN,UAC3DF,EAAAA,EAAAA,MAAA,OACEC,UAAS,GAAAsI,OAAKxI,EAAQ0S,eAAc,KAAAlK,OAAIxI,EAAQkO,uBAAwB/N,SAAA,EAExEC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ8N,cAAc3N,UACpCC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdjL,KAAK,SACLjG,GAAG,iCACH2G,KAAK,iCACLpB,SAAU,SAACwC,GACTgH,EAAY,yBAAuBvQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC9BkQ,GAAqB,IACxBiB,QAAS5H,EAAEtC,OAAO1G,SAEpBwR,EAAgB,iCAClB,EACA1R,MAAM,UACNE,MAAO2P,EAAsBiB,QAC7B7I,UAAQ,EACRE,MACE6H,EAAiD,gCAAK,GAExD+C,IAAI,SAGRvS,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ8N,cAAc3N,UACpCC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ4N,kBAAkBzN,UACxCC,EAAAA,EAAAA,KAACwS,EAAAA,EAAa,CACZhT,MAAM,sBACNmB,GAAG,sCACH2G,KAAK,sCACL5H,MAAO2P,EAAsBoD,oBAC7BvM,SAAU,SAACwC,GACTgH,EAAY,yBAAuBvQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC9BkQ,GAAqB,IACxBoD,oBAAqB/J,EAAEtC,OAAO1G,QAElC,EACAgT,QAAS,CACP,CACElT,MAAO,SACPE,MAAO,UAET,CACEF,MAAO,iBACPE,MAAO,+BAQrBM,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ4N,kBAAkBzN,UACtDC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0S,eAAevS,UACrCC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,oCACNiB,GAAG,sCACH2G,KAAK,sCACLsK,QAASvC,EAAsBsD,aAC/BzM,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QACxBlC,EAAY,yBAAuBvQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC9BkQ,GAAqB,IACxBsD,aAAcf,IAElB,EACApS,MAAO,iCAOnBQ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ4N,kBAAkBzN,UACtDC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,gBACNiB,GAAG,wBACH2G,KAAK,wBACLsK,QAAStC,EACTpJ,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QAExBlC,EAAY,gBAAiBkC,EAC/B,EACApS,MAAO,oCAGV8P,IACCtP,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ6N,0BAA0B1N,UAC9DF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,mCAG5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAS,GAAAsI,OAAKxI,EAAQ4N,mBAAoBzN,UAC3DC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ8N,cAAc3N,UACpCC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,kCACH2G,KAAK,kCACLpB,SAAU,SAACwC,GACTgH,EAAY,mBAAoBhH,EAAEtC,OAAO1G,OACzCwR,EAAgB,kCAClB,EACA1R,MAAM,qBACNE,MAAO6P,EACP5H,MACE6H,EAAkD,iCAAK,eAQrExP,EAAAA,EAAAA,KAAC4S,EAAAA,EAAO,KAER/S,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ2R,cAAcxR,SAAA,EACpCC,EAAAA,EAAAA,KAACwR,EAAAA,EAAS,CAAAzR,SAAC,sCACXC,EAAAA,EAAAA,KAAA,QAAMF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,8EAI5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC7E,WAAS,EAAAsB,SACZoP,EAActL,KAAI,SAACgP,EAAQ9O,GAAK,OAC/BlE,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJ1D,UAAS,GAAAsI,OAAKxI,EAAQkT,aAAY,KAAA1K,OAAIxI,EAAQoO,WAAYjO,SAAA,EAG1DC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAG1D,UAAWF,EAAQwO,SAASrO,UAC5CC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,cACH2G,KAAK,cACL9H,MAAM,MACNE,MAAOmT,EAAOE,IACd7M,SAAU,SAACwC,GACT,IAAMsK,GAAerC,EAAAA,EAAAA,GAAOxB,GAC5BjE,GACE+H,EAAAA,EAAAA,IACED,EAAgBnP,KAAI,SAACqP,EAASC,GAAC,OAC7BA,IAAMpP,EACF,CAAEgP,IAAKrK,EAAEtC,OAAO1G,MAAOA,MAAOwT,EAAQxT,OACtCwT,CAAO,KAInB,EACAnP,MAAOA,GAAM,eAAAqE,OACOrE,EAAMwF,gBAG9BvJ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAG1D,UAAWF,EAAQwO,SAASrO,UAC5CC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,gBACH2G,KAAK,gBACL9H,MAAM,QACNE,MAAOmT,EAAOnT,MACdwG,SAAU,SAACwC,GACT,IAAMsK,GAAerC,EAAAA,EAAAA,GAAOxB,GAC5BjE,GACE+H,EAAAA,EAAAA,IACED,EAAgBnP,KAAI,SAACqP,EAASC,GAAC,OAC7BA,IAAMpP,EACF,CAAEgP,IAAKG,EAAQH,IAAKrT,MAAOgJ,EAAEtC,OAAO1G,OACpCwT,CAAO,KAInB,EACAnP,MAAOA,GAAM,iBAAAqE,OACSrE,EAAMwF,gBAGhC1J,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAG1D,UAAWF,EAAQyO,WAAWtO,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACP,IAAMoS,GAAerC,EAAAA,EAAAA,GAAOxB,GAC5B6D,EAAgBI,KAAK,CAAEL,IAAK,GAAIrT,MAAO,KAEvCwL,GAAS+H,EAAAA,EAAAA,IAAWD,GACtB,EACAxL,SAAUzD,IAAUoL,EAAcpK,OAAS,EAAEhF,UAE7CC,EAAAA,EAAAA,KAACmS,EAAAA,EAAO,SAGZnS,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACP,IAAMoS,EAAkB7D,EAAckE,QACpC,SAAC9P,EAAM+P,GAAM,OAAKA,IAAWvP,CAAK,IAEpCmH,GAAS+H,EAAAA,EAAAA,IAAWD,GACtB,EACAxL,SAAU2H,EAAcpK,QAAU,EAAEhF,UAEpCC,EAAAA,EAAAA,KAACqS,EAAAA,IAAU,aAGV,iBAAAjK,OA3EerE,EAAMwF,YA4EvB,QAKjB,I,uDChpBMgK,GAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXsU,aAAc,CACZ/U,QAAS,OACT8G,aAAc,IAEhBkO,WAAY,CACV/M,WAAY,GACZjI,QAAS,OACTM,OAAQ,GACR,WAAY,CACVD,WAAY,YAGhBuP,cAAe,CACb3H,WAAY,GACZ,QAAS,CACPI,SAAU,GACVzE,UAAW,IAEb,WAAY,CACVvD,WAAY,aAGb6O,EAAAA,IACAa,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACH,IAoYJ,EAjY2B,WACzB,IAAMtD,GAAWC,EAAAA,EAAAA,MACXvL,EAAU2T,IAEVI,GAAepI,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiBD,YAAY,IAExEE,GAAQtI,EAAAA,EAAAA,KACZ,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiBC,KAAK,IAEjEC,GAAYvI,EAAAA,EAAAA,KAChB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiBE,SAAS,IAErEC,GAAmBxI,EAAAA,EAAAA,KACvB,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiBG,gBAAgB,IAEzDC,GAAsBzI,EAAAA,EAAAA,KAC1B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiBI,mBAAmB,IAE5DC,GAAsB1I,EAAAA,EAAAA,KAC1B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiBK,mBAAmB,IAE5DC,GAAY3I,EAAAA,EAAAA,KAChB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiBM,SAAS,IAErEC,GAAa5I,EAAAA,EAAAA,KACjB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiBO,UAAU,IAEtEC,GAAiB7I,EAAAA,EAAAA,KACrB,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiBQ,cAAc,IAEvDC,GAAuB9I,EAAAA,EAAAA,KAC3B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiBS,oBAAoB,IAE7DC,GAAuB/I,EAAAA,EAAAA,KAC3B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiBU,oBAAoB,IAE7DC,GAAuBhJ,EAAAA,EAAAA,KAC3B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiBW,oBAAoB,IAE7DC,GAAmBjJ,EAAAA,EAAAA,KACvB,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiBY,gBAAgB,IAG/D1M,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,GAEtC0H,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CACbC,SAAU,mBACVF,MAAOA,EACPlQ,MAAOA,IAGb,GACA,CAACwL,IAGGgG,EAAkB,SAACC,GACvB1B,GAAoB2B,EAAAA,EAAAA,IAAqB5B,EAAkB2B,GAC7D,EA2CA,OAxCAxF,EAAAA,EAAAA,YAAU,WACR,IAAI8I,EAAqC,GAEpB,OAAjBd,IACFc,EAAmB,GAAArM,QAAAuI,EAAAA,EAAAA,GACd8D,GAAmB,CACtB,CACEzE,SAAU,SACVvI,UAAU,EACV/H,MAAOmU,GAET,CACE7D,SAAU,kBACVvI,UAAU,EACV/H,MAAO0U,MAKb,IAAMxD,GAAYC,EAAAA,EAAAA,GAAqB4D,GAEvCvJ,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,mBACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CACDwD,EACAT,EACAE,EACAG,EACAC,EACAC,EACAC,EACAjJ,KAIArL,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,SACH2G,KAAK,SACLpB,SAAU,SAACwC,GACTgH,EAAY,QAAShH,EAAEtC,OAAO1G,OAC9BwR,EAAgB,SAClB,EACA1R,MAAM,sBACNE,MAAOmU,EACP/B,YAAY,kBACZnK,MAAO6H,EAAyB,QAAK,GACrC/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,aACNiB,GAAG,aACH2G,KAAK,aACLsK,QAASkC,EACT5N,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QACxBlC,EAAY,YAAakC,EAC3B,EACApS,MAAO,6BAGXQ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,oBACNiB,GAAG,oBACH2G,KAAK,oBACLsK,QAASmC,EACT7N,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QACxBlC,EAAY,mBAAoBkC,EAClC,EACApS,MAAO,sBAGVuU,GACClU,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,SAAA,EAChBC,EAAAA,EAAAA,KAAC2U,EAAAA,EAAU,CACT7U,UAAWF,EAAQ+H,MACnB7C,QAAQ,UACRpG,QAAQ,QACRkW,cAAY,EAAA7U,SACb,oEAGDC,EAAAA,EAAAA,KAAA,YAEA,MACJA,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,oBACNiB,GAAG,oBACH2G,KAAK,oBACLsK,QAAS4C,EACTtO,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QACxBlC,EAAY,mBAAoBkC,EAClC,EACApS,MAAO,8CAGXQ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,kBACH2G,KAAK,kBACLpB,SAAU,SAACwC,GACTgH,EAAY,iBAAkBhH,EAAEtC,OAAO1G,OACvCwR,EAAgB,kBAClB,EACA1R,MAAM,iBACNE,MAAO0U,EACPtC,YAAY,wBACZnK,MAAO6H,EAAkC,iBAAK,GAC9C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,wBACH2G,KAAK,wBACLpB,SAAU,SAACwC,GACTgH,EAAY,uBAAwBhH,EAAEtC,OAAO1G,MAC/C,EACAF,MAAM,uBACNE,MAAO2U,EACPvC,YAAY,aAGhB9R,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,wBACH2G,KAAK,wBACLpB,SAAU,SAACwC,GACTgH,EAAY,uBAAwBhH,EAAEtC,OAAO1G,MAC/C,EACAF,MAAM,yBACNE,MAAO4U,EACPxC,YAAY,oBAGhB9R,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,wBACH2G,KAAK,wBACLpB,SAAU,SAACwC,GACTgH,EAAY,uBAAwBhH,EAAEtC,OAAO1G,MAC/C,EACAF,MAAM,wBACNE,MAAO6U,EACPzC,YAAY,0BAGhB9R,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,uBACH2G,KAAK,uBACLpB,SAAU,SAACwC,GACTgH,EAAY,sBAAuBhH,EAAEtC,OAAO1G,MAC9C,EACAF,MAAM,uBACNE,MAAOsU,EACPlC,YAAY,qDAGhB9R,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,uBACH2G,KAAK,uBACLpB,SAAU,SAACwC,GACTgH,EAAY,sBAAuBhH,EAAEtC,OAAO1G,MAC9C,EACAF,MAAM,sBACNE,MAAOuU,EACPnC,YAAY,gDAGhBjS,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,wEAG5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,SACfmU,EAAUrQ,KAAI,SAACgR,EAAG9Q,GACjB,OACE/D,EAAAA,EAAAA,KAAC0U,EAAAA,SAAQ,CAAA3U,UACPF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ6T,aAAa1T,SAAA,EACnCC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAE,aAAAyH,OAAerE,EAAMwF,YACvB/J,MAAO,GACPsS,YAAY,GACZxK,KAAI,aAAAc,OAAerE,EAAMwF,YACzB7J,MAAOwU,EAAUnQ,GACjBmC,SAAU,SAACwC,GACTwC,GACE4J,EAAAA,EAAAA,IAAmB,CACjB/Q,MAAOA,EACPgR,OAAQrM,EAAEtC,OAAO1G,SAGrBwR,EAAgB,aAAD9I,OAAcrE,EAAMwF,YACrC,EACAxF,MAAOA,EAEP4D,MACE6H,EAAiB,aAADpH,OAAcrE,EAAMwF,cAAiB,IACtD,iBAAAnB,OAHqBrE,EAAMwF,cAK9B1J,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ8T,WAAW3T,SAAA,EACjCC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAO,CAACxC,MAAM,WAAW,aAAW,MAAKpD,UACxCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAAS8J,EAAAA,EAAAA,MACX,EAAEjV,UAEFC,EAAAA,EAAAA,KAACmS,EAAAA,EAAO,SAGZnS,EAAAA,EAAAA,KAAC2F,EAAAA,EAAO,CAACxC,MAAM,SAAS,aAAW,MAAKpD,UACtCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNjJ,MAAO,CAAE6F,WAAY,IACrB/F,QAAS,WACHsT,EAAUnP,OAAS,GACrBmG,GAAS+J,EAAAA,EAAAA,IAAsBlR,GAEnC,EAAEhE,UAEFC,EAAAA,EAAAA,KAACkV,EAAAA,EAAU,eAIb,iBAAA9M,OAhDwBrE,EAAMwF,YAmD1C,UAGJ1J,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,yEAG5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,SACfoU,EAAWtQ,KAAI,SAACgR,EAAG9Q,GAClB,OACE/D,EAAAA,EAAAA,KAAC0U,EAAAA,SAAQ,CAAA3U,UACPF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ6T,aAAa1T,SAAA,EACnCC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAE,cAAAyH,OAAgBrE,EAAMwF,YACxB/J,MAAO,GACPsS,YAAY,GACZxK,KAAI,cAAAc,OAAgBrE,EAAMwF,YAC1B7J,MAAOyU,EAAWpQ,GAClBmC,SAAU,SAACwC,GACTwC,GACEiK,EAAAA,EAAAA,IAAqB,CACnBpR,MAAOA,EACPgR,OAAQrM,EAAEtC,OAAO1G,SAGrBwR,EAAgB,cAAD9I,OAAerE,EAAMwF,YACtC,EACAxF,MAAOA,EAEP4D,MACE6H,EAAiB,cAADpH,OAAerE,EAAMwF,cAAiB,IACvD,kBAAAnB,OAHsBrE,EAAMwF,cAK/B1J,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ8T,WAAW3T,SAAA,EACjCC,EAAAA,EAAAA,KAAC2F,EAAAA,EAAO,CAACxC,MAAM,YAAY,aAAW,MAAKpD,UACzCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAASkK,EAAAA,EAAAA,MACX,EAAErV,UAEFC,EAAAA,EAAAA,KAACmS,EAAAA,EAAO,SAGZnS,EAAAA,EAAAA,KAAC2F,EAAAA,EAAO,CAACxC,MAAM,SAAS,aAAW,MAAKpD,UACtCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNjJ,MAAO,CAAE6F,WAAY,IACrB/F,QAAS,WACHuT,EAAWpP,OAAS,GACtBmG,GAASmK,EAAAA,EAAAA,IAAwBtR,GAErC,EAAEhE,UAEFC,EAAAA,EAAAA,KAACkV,EAAAA,EAAU,eAIb,iBAAA9M,OAhDwBrE,EAAMwF,YAmD1C,WAKV,EC1aMgK,GAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXuU,WAAY,CACV/M,WAAY,GACZjI,QAAS,OACTM,OAAQ,GACR,WAAY,CACVD,WAAY,YAGhBuP,cAAe,CACb3H,WAAY,GACZ,QAAS,CACPI,SAAU,GACVzE,UAAW,IAEb,WAAY,CACVvD,WAAY,aAGb6O,EAAAA,IACAa,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACH,IA+LJ,EA5LkB,WAChB,IAAMtD,GAAWC,EAAAA,EAAAA,MACXvL,EAAU2T,IAEVI,GAAepI,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiBD,YAAY,IAExE2B,GAAyB/J,EAAAA,EAAAA,KAC7B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiB0B,sBAAsB,IAE/DC,GAAiBhK,EAAAA,EAAAA,KACrB,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiB2B,cAAc,IAEvDC,GAAiBjK,EAAAA,EAAAA,KACrB,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiB4B,cAAc,IAEvDC,GAAoBlK,EAAAA,EAAAA,KACxB,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiB6B,iBAAiB,IAE1DC,GAAkBnK,EAAAA,EAAAA,KACtB,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOgF,iBAAiB8B,eAAe,IAExDC,GAAepK,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiB+B,YAAY,IAG9E7N,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,GAEtC0H,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CACbC,SAAU,mBACVF,MAAOA,EACPlQ,MAAOA,IAGb,GACA,CAACwL,IAGGgG,EAAkB,SAACC,GACvB1B,GAAoB2B,EAAAA,EAAAA,IAAqB5B,EAAkB2B,GAC7D,EAmDA,OAhDAxF,EAAAA,EAAAA,YAAU,WACR,IAAI8I,EAAqC,GAEpB,WAAjBd,IACFc,EAAmB,GAAArM,QAAAuI,EAAAA,EAAAA,GACd8D,GAAmB,CACtB,CACEzE,SAAU,2BACVvI,UAAU,EACV/H,MAAO4V,GAET,CACEtF,SAAU,kBACVvI,UAAU,EACV/H,MAAO6V,GAET,CACEvF,SAAU,kBACVvI,UAAU,EACV/H,MAAO8V,GAET,CACExF,SAAU,mBACVvI,UAAU,EACV/H,MAAOgW,MAKb,IAAM9E,GAAYC,EAAAA,EAAAA,GAAqB4D,GAEvCvJ,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,mBACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CACD+C,EACA4B,EACAC,EACAF,EACAI,EACAxK,KAIArL,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,2BACH2G,KAAK,2BACLpB,SAAU,SAACwC,GACTgH,EAAY,yBAA0BhH,EAAEtC,OAAO1G,OAC/CwR,EAAgB,2BAClB,EACA1R,MAAM,oBACNE,MAAO4V,EACPxD,YAAY,sEACZnK,MAAO6H,EAA2C,0BAAK,GACvD/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,kBACH2G,KAAK,kBACLpB,SAAU,SAACwC,GACTgH,EAAY,iBAAkBhH,EAAEtC,OAAO1G,OACvCwR,EAAgB,kBAClB,EACA1R,MAAM,YACNE,MAAO6V,EACP5N,MAAO6H,EAAkC,iBAAK,GAC9C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,kBACH2G,KAAK,kBACLpB,SAAU,SAACwC,GACTgH,EAAY,iBAAkBhH,EAAEtC,OAAO1G,OACvCwR,EAAgB,kBAClB,EACA1R,MAAM,YACNE,MAAO8V,EACP7N,MAAO6H,EAAkC,iBAAK,GAC9C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,qBACH2G,KAAK,qBACLpB,SAAU,SAACwC,GACTgH,EAAY,oBAAqBhH,EAAEtC,OAAO1G,OAC1CwR,EAAgB,qBAClB,EACA1R,MAAM,eACNE,MAAO+V,EACP3D,YAAY,oDACZnK,MAAO6H,EAAqC,oBAAK,QAGrDxP,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,mBACH2G,KAAK,mBACLpB,SAAU,SAACwC,GACTgH,EAAY,kBAAmBhH,EAAEtC,OAAO1G,OACxCwR,EAAgB,mBAClB,EACA1R,MAAM,aACNE,MAAOgW,EACP/N,MAAO6H,EAAmC,kBAAK,GAC/C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,gBACH2G,KAAK,gBACLpB,SAAU,SAACwC,GACTgH,EAAY,eAAgBhH,EAAEtC,OAAO1G,OACrCwR,EAAgB,gBAClB,EACA1R,MAAM,SACNE,MAAOiW,QAKjB,E,WC5MMpC,GAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXuU,WAAY,CACV/M,WAAY,GACZjI,QAAS,OACTM,OAAQ,GACR,WAAY,CACVD,WAAY,YAGhBuP,cAAe,CACb3H,WAAY,GACZ,QAAS,CACPI,SAAU,GACVzE,UAAW,IAEb,WAAY,CACVvD,WAAY,YAGhB6W,UAAW,CACTC,oBAAqB,sBACrBnX,QAAS,OACToX,QAAS,GACTtQ,aAAc,GACd,UAAW,CACTxD,WAAY,OAGb4L,EAAAA,IACAa,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACH,IA+JJ,EA5JmB,WACjB,IAAMtD,GAAWC,EAAAA,EAAAA,MACXvL,EAAU2T,IAEVI,GAAepI,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiBD,YAAY,IAExEoC,GAAaxK,EAAAA,EAAAA,KACjB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiBmC,UAAU,IAEtEC,GAAazK,EAAAA,EAAAA,KACjB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiBoC,UAAU,IAG5ElO,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,GAEtCkJ,EAAkB,SAACC,GACvB1B,GAAoB2B,EAAAA,EAAAA,IAAqB5B,EAAkB2B,GAC7D,EAsCA,OAnCAxF,EAAAA,EAAAA,YAAU,WACR,IAAI8I,EAAqC,GAEzC,GAAqB,aAAjBd,EAA6B,CAC/Bc,GAAmB9D,EAAAA,EAAAA,GAAO8D,GAC1B,IAAK,IAAItB,EAAI,EAAGA,EAAI4C,EAAWhR,OAAQoO,IACrCsB,EAAoBrB,KAAK,CACvBpD,SAAS,aAAD5H,OAAe+K,EAAE5J,YACzB9B,UAAU,EACV/H,MAAOqW,EAAW5C,GAClB1C,QAAS,uBACTC,qBAAsB,mCAExB+D,EAAoBrB,KAAK,CACvBpD,SAAS,aAAD5H,OAAe+K,EAAE5J,YACzB9B,UAAU,EACV/H,MAAOsW,EAAW7C,GAClB1C,QAAS,uBACTC,qBAAsB,kCAG5B,CAEA,IAAME,GAAYC,EAAAA,EAAAA,GAAqB4D,GAEvCvJ,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,mBACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CAAC+C,EAAcoC,EAAYC,EAAY9K,KAGxCrL,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,CAAC,uBAEPgW,EAAWlS,KAAI,SAACgR,EAAG9Q,GAClB,OACE/D,EAAAA,EAAAA,KAAC0U,EAAAA,SAAQ,CAAA3U,UACPF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQgW,UAAU7V,SAAA,EAChCC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAE,aAAAyH,OAAerE,EAAMwF,YACvB/J,MAAO,GACPsS,YAAa,aACbxK,KAAI,aAAAc,OAAerE,EAAMwF,YACzB7J,MAAOqW,EAAWhS,GAClBmC,SAAU,SAACwC,GACTwC,GACE+K,EAAAA,EAAAA,IAAiB,CACflS,MAAAA,EACAG,UAAWwE,EAAEtC,OAAO1G,SAGxBwR,EAAgB,aAAD9I,OAAcrE,EAAMwF,YACrC,EACAxF,MAAOA,EAEP4D,MAAO6H,EAAiB,aAADpH,OAAcrE,EAAMwF,cAAiB,IAAG,iBAAAnB,OADzCrE,EAAMwF,cAG9BvJ,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAE,aAAAyH,OAAerE,EAAMwF,YACvB/J,MAAO,GACPsS,YAAa,aACbxK,KAAI,aAAAc,OAAerE,EAAMwF,YACzB7J,MAAOsW,EAAWjS,GAClBmC,SAAU,SAACwC,GACTwC,GACEgL,EAAAA,EAAAA,IAAiB,CACfnS,MAAAA,EACAI,UAAWuE,EAAEtC,OAAO1G,SAGxBwR,EAAgB,aAAD9I,OAAcrE,EAAMwF,YACrC,EACAxF,MAAOA,EAEP4D,MAAO6H,EAAiB,aAADpH,OAAcrE,EAAMwF,cAAiB,IAAG,iBAAAnB,OADzCrE,EAAMwF,cAG9B1J,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ8T,WAAW3T,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAASiL,EAAAA,EAAAA,MACX,EACA3O,SAAUzD,IAAUgS,EAAWhR,OAAS,EAAEhF,UAE1CC,EAAAA,EAAAA,KAACmS,EAAAA,EAAO,SAGZnS,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAASkL,EAAAA,EAAAA,IAAwBrS,GACnC,EACAyD,SAAUuO,EAAWhR,QAAU,EAAEhF,UAEjCC,EAAAA,EAAAA,KAACqS,EAAAA,IAAU,SAGfrS,EAAAA,EAAAA,KAAC2F,EAAAA,EAAO,CAACxC,MAAM,wBAAwB,aAAW,MAAKpD,UACrDC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACT/I,QAAS,WACPsK,GACE+K,EAAAA,EAAAA,IAAiB,CACflS,MAAAA,EACAG,WAAWmS,EAAAA,EAAAA,IAAgB,OAG/BnL,GACEgL,EAAAA,EAAAA,IAAiB,CACfnS,MAAAA,EACAI,WAAWkS,EAAAA,EAAAA,IAAgB,MAGjC,EACAtM,KAAM,QAAQhK,UAEdC,EAAAA,EAAAA,KAACsW,EAAAA,EAAU,iBAKf,iBAAAlO,OAvFwBrE,EAAMwF,YA0F1C,MAGN,E,WCpMMgK,GAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXoX,qBAAsB,CACpB7X,QAAS,OACTC,SAAU,SACV6G,aAAc,GAEd,UAAW,CACTnG,SAAU,GACV2C,WAAY,KAEd,QAAS,CACPtD,QAAS,OACTC,SAAU,MACVmD,WAAY,SAGb8L,EAAAA,IACAW,EAAAA,IACAC,EAAAA,IACH,IA2CJ,EAxCyB,WACvB,IAAMtD,GAAWC,EAAAA,EAAAA,MACXvL,EAAU2T,IAEVI,GAAepI,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOgF,iBAAiBD,YAAY,IAG9E,OACE9T,EAAAA,EAAAA,MAACwR,EAAAA,EAAK,CAACvR,UAAWF,EAAQ0R,aAAavR,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ2R,cAAcxR,SAAA,EACpCC,EAAAA,EAAAA,KAACwR,EAAAA,EAAS,CAAAzR,SAAC,uBACXC,EAAAA,EAAAA,KAAA,QAAMF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,iFAK5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI5E,QAAQ,OAAMmB,UAC/BC,EAAAA,EAAAA,KAACwW,EAAAA,EAAkB,CACjBC,iBAAkB9C,EAClBhT,GAAG,cACH2G,KAAK,cACL9H,MAAM,WACN0G,SAAU,SAACwC,GACTwC,GAASwL,EAAAA,EAAAA,IAAOhO,EAAEtC,OAAO1G,OAC3B,EACAiX,gBAAiB,CACf,CAAEnX,OAAOQ,EAAAA,EAAAA,KAAC4W,EAAAA,GAAkB,IAAKlX,MAAO,YACxC,CAAEF,OAAOQ,EAAAA,EAAAA,KAAC6W,EAAAA,GAAe,IAAKnX,MAAO,UACrC,CAAEF,OAAOQ,EAAAA,EAAAA,KAAC8W,EAAAA,GAAe,IAAKpX,MAAO,WAIzB,aAAjBiU,IAA+B3T,EAAAA,EAAAA,KAAC+W,EAAU,IACzB,WAAjBpD,IAA6B3T,EAAAA,EAAAA,KAACgX,EAAS,IACtB,OAAjBrD,IAAyB3T,EAAAA,EAAAA,KAACiX,EAAkB,MAGnD,E,sBC8VA,GAAe3Y,EAAAA,EAAAA,IA7YA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACX+X,qBAAsB,CACpBxY,QAAS,OACToD,WAAY,SACZI,eAAgB,aAChB+L,aAAc,oBACd,eAAgB,CACdA,aAAc,GAEhB,4BAA6B,CAC3BC,KAAM,IAGVE,SAAU,CACRnP,YAAa,GACbP,QAAS,OACT,cAAe,CACbyP,SAAU,IAGZ,4BAA6B,CAC3BxP,SAAU,WAGdwY,oBAAqB,CACnB3R,aAAc,IAEhB4R,gBAAiB,CACf1Y,QAAS,OACToD,WAAY,SACZI,eAAgB,aAEhB+L,aAAc,oBACd,eAAgB,CACdA,aAAc,GAEhB,4BAA6B,CAC3BC,KAAM,EAEN,cAAe,CACbC,SAAU,MAIhBE,WAAY,CACV3P,QAAS,OACTwD,eAAgB,WAChB,4BAA6B,CAC3BgM,KAAM,IAGVI,cAAe,CACb3H,WAAY,GACZ,QAAS,CACPI,SAAU,GACVzE,UAAW,IAEb,WAAY,CACVvD,WAAY,aAIb6O,EAAAA,IACAW,EAAAA,IACAC,EAAAA,IACF,GA2UL,EAzUiB,SAAHlP,GAAqC,IAA/BM,EAAON,EAAPM,QACZsL,GAAWC,EAAAA,EAAAA,MAEXkM,GAAY9L,EAAAA,EAAAA,KAChB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAO0I,SAASD,SAAS,IAE7DE,GAAiBhM,EAAAA,EAAAA,KACrB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAO0I,SAASC,cAAc,IAElEC,GAAoBjM,EAAAA,EAAAA,KACxB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAO0I,SAASE,iBAAiB,IAErEC,GAAoBlM,EAAAA,EAAAA,KACxB,SAACC,GAAe,OAAKA,EAAMmD,aAAa+I,aAAaC,uBAAuB,IAExEC,GAA0BrM,EAAAA,EAAAA,KAC9B,SAACC,GAAe,OAAKA,EAAMmD,aAAa+I,aAAaE,uBAAuB,IAExEC,GAAiBtM,EAAAA,EAAAA,KACrB,SAACC,GAAe,OAAKA,EAAMmD,aAAa+I,aAAaI,oBAAoB,IAIrEpI,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CAAEC,SAAU,WAAYF,MAAOA,EAAOlQ,MAAOA,IAEhE,GACA,CAACwL,IAqBH,OAhBAS,EAAAA,EAAAA,YAAU,WAMNT,EALGmM,EAIDE,GAIAC,GAHO1G,EAAAA,EAAAA,IAAY,CAAEhB,SAAU,WAAYiB,OAAO,KAO7CD,EAAAA,EAAAA,IAAY,CAAEhB,SAAU,WAAYiB,OAAO,KAXzCD,EAAAA,EAAAA,IAAY,CAAEhB,SAAU,WAAYiB,OAAO,IAYxD,GAAG,CAACsG,EAAWE,EAAgBC,EAAmBtM,KAGhDrL,EAAAA,EAAAA,MAACwR,EAAAA,EAAK,CAACvR,UAAWF,EAAQ0R,aAAavR,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ2R,cAAcxR,UACpCC,EAAAA,EAAAA,KAACwR,EAAAA,EAAS,CAAAzR,SAAC,gBAEbF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAAC7E,WAAS,EAACsZ,QAAS,EAAEhY,SAAA,EACzBC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,YACNiB,GAAG,YACH2G,KAAK,YACLsK,QAASyF,EACTnR,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QAExBlC,EAAY,YAAakC,EAC3B,EACApS,MAAO,MACPwY,YACE,wFAILX,IACCxX,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,iBACNiB,GAAG,iBACH2G,KAAK,iBACLsK,QAAS2F,EACTrR,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QACxBlC,EAAY,iBAAkBkC,EAChC,EACApS,MAAO,WACPwY,YACE,kFAINhY,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,oBACNiB,GAAG,oBACH2G,KAAK,oBACLsK,QAAS4F,EACTtR,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QACxBlC,EAAY,oBAAqBkC,EACnC,EACApS,MAAO,sBACPwY,YAAa,mDAGhBR,IACC3X,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACLwX,IACAvX,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBC,EAAAA,EAAAA,KAACiY,EAAAA,EAAU,OAGfpY,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQuX,oBAAoBpX,SAAA,EACxDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BACH0X,EAAkB5T,KAAI,SAACqP,EAAkBnP,GAAK,OAC7ClE,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GAEJ1D,UAAWF,EAAQsX,qBAAqBnX,SAAA,EAExCF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQwO,SAASrO,SAAA,EAC7CC,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACEkN,EAAAA,EAAAA,IAAiB,CACfzX,GAAIuS,EAAQvS,GACZoS,IAAK,OACLpK,SAAUA,EACVjJ,MAAOyY,IAGb,EACAtQ,OAAO,uBACPlH,GAAG,UACH2G,KAAK,UACL9H,MAAM,OACNE,MAAOwT,EAAQmF,QAEjBrY,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACEkN,EAAAA,EAAAA,IAAiB,CACfzX,GAAIuS,EAAQvS,GACZoS,IAAK,MACLpK,SAAUA,EACVjJ,MAAOyY,IAGb,EACAtQ,OAAO,YACPlH,GAAG,SACH2G,KAAK,SACL9H,MAAM,MACNE,MAAOwT,EAAQH,UAInBlT,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAG1D,UAAWF,EAAQyO,WAAWtO,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAASoN,EAAAA,EAAAA,MACX,EACA9Q,SAAUzD,IAAU0T,EAAkB1S,OAAS,EAAEhF,UAEjDC,EAAAA,EAAAA,KAACmS,EAAAA,EAAO,SAGZnS,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAASqN,EAAAA,EAAAA,IAAcrF,EAAQvS,IACjC,EACA6G,SAAUiQ,EAAkB1S,QAAU,EAAEhF,UAExCC,EAAAA,EAAAA,KAACqS,EAAAA,IAAU,aAGV,eAAAjK,OA/Da8K,EAAQvS,IAgEvB,QAGXd,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQuX,oBAAoBpX,SAAA,EACxDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BACH6X,EAAwB/T,KAAI,SAACqP,EAAkBnP,GAAK,OACnDlE,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GAEJ1D,UAAWF,EAAQsX,qBAAqBnX,SAAA,EAExCF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQwO,SAASrO,SAAA,EAC7CC,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACEsN,EAAAA,EAAAA,IAAuB,CACrB7X,GAAIuS,EAAQvS,GACZoS,IAAK,OACLpK,SAAUA,EACVjJ,MAAOyY,IAGb,EACAtQ,OAAO,uBACPlH,GAAG,UACH2G,KAAK,UACL9H,MAAM,OACNE,MAAOwT,EAAQmF,QAEjBrY,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACEsN,EAAAA,EAAAA,IAAuB,CACrB7X,GAAIuS,EAAQvS,GACZoS,IAAK,MACLpK,SAAUA,EACVjJ,MAAOyY,IAGb,EACAtQ,OAAO,YACPlH,GAAG,SACH2G,KAAK,SACL9H,MAAM,MACNE,MAAOwT,EAAQH,UAInBlT,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAG1D,UAAWF,EAAQyO,WAAWtO,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAASuN,EAAAA,EAAAA,MACX,EACAjR,SACEzD,IAAU6T,EAAwB7S,OAAS,EAC5ChF,UAEDC,EAAAA,EAAAA,KAACmS,EAAAA,EAAO,SAGZnS,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAASwN,EAAAA,EAAAA,IAAoBxF,EAAQvS,IACvC,EACA6G,SAAUoQ,EAAwB7S,QAAU,EAAEhF,UAE9CC,EAAAA,EAAAA,KAACqS,EAAAA,IAAU,aAGV,eAAAjK,OAjEa8K,EAAQvS,IAkEvB,QAGXd,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQuX,oBAAoBpX,SAAA,EACxDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACH8X,EAAehU,KAAI,SAACqP,EAAkBnP,GAAK,OAC1ClE,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GAEJ1D,UAAWF,EAAQwX,gBAAgBrX,SAAA,EAEnCC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAEzD,UACfC,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACEyN,EAAAA,EAAAA,IAAwB,CACtBhY,GAAIuS,EAAQvS,GACZoS,IAAK,OACLpK,SAAUA,EACVjJ,MAAOyY,IAGb,EACAtQ,OAAO,uBACPlH,GAAG,UACH2G,KAAK,UACL9H,MAAM,OACNE,MAAOwT,EAAQmF,UAGnBrY,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAEzD,UACfF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQyO,WAAWtO,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAAS0N,EAAAA,EAAAA,MACX,EACApR,SAAUzD,IAAU8T,EAAe9S,OAAS,EAAEhF,UAE9CC,EAAAA,EAAAA,KAACmS,EAAAA,EAAO,SAGZnS,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAAS2N,EAAAA,EAAAA,IAAoB3F,EAAQvS,IACvC,EACA6G,SAAUqQ,EAAe9S,QAAU,EAAEhF,UAErCC,EAAAA,EAAAA,KAACqS,EAAAA,IAAU,eAIZ,kBAAAjK,OA/CgB8K,EAAQvS,IAgD1B,kBAU3B,ICnaA,EARmC,SAAHrB,GAAsB,IAAhBS,EAAQT,EAARS,SACpC,OACEC,EAAAA,EAAAA,KAAA,MAAIc,MAAO,CAAEe,OAAQ,EAAG2D,aAAc,QAASnG,SAAU,UAAWU,SACjEA,GAGP,ECUMwT,GAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTyO,EAAAA,IACAa,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACH,IAkQJ,EA/PoB,WAClB,IAAMtD,GAAWC,EAAAA,EAAAA,MACXvL,EAAU2T,IAEVuF,GAAgBvN,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWD,aAAa,IAEnEE,GAAgBzN,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWC,aAAa,IAEnEC,GAAc1N,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWE,WAAW,IAEjEC,GAAiB3N,EAAAA,EAAAA,KACrB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWG,cAAc,IAEpEC,GAAc5N,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWI,WAAW,IAEjEC,GAAqB7N,EAAAA,EAAAA,KACzB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWK,kBAAkB,IAExEC,GAAU9N,EAAAA,EAAAA,KACd,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWM,OAAO,IAE7DC,GAAc/N,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWO,WAAW,IAEjEC,GAAahO,EAAAA,EAAAA,KACjB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWQ,UAAU,IAEhEC,GAAYjO,EAAAA,EAAAA,KAChB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWS,SAAS,IAGrE1R,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,IAG5C2D,EAAAA,EAAAA,YAAU,WACR,IAAI8N,EAAsC,GAErCX,IACHW,EAAoB,GAAArR,QAAAuI,EAAAA,EAAAA,GACf8I,GAAoB,CACvB,CACEzJ,SAAU,iBACVvI,UAAU,EACV/H,MAAOsZ,GAET,CACEhJ,SAAU,WACVvI,UAAU,EACV/H,MAAO2Z,GAET,CACErJ,SAAU,eACVvI,UAAU,EACV/H,MAAO4Z,GAET,CACEtJ,SAAU,aACVvI,UAAU,EACV/H,MAAO8Z,EACPtJ,iBAAkBC,SAASqJ,GAAa,EACxCpJ,wBAAyB,kCAE3B,CACEJ,SAAU,cACVvI,UAAU,EACV/H,MAAO6Z,EACPrJ,iBAAkBC,SAASoJ,GAAc,EACzCnJ,wBAAyB,qCAK/B,IAAMQ,GAAYC,EAAAA,EAAAA,GAAqB4I,GAEvCvO,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,aACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CACDkI,EACAE,EACAC,EACAI,EACAC,EACAE,EACAD,EACArO,IAIF,IAAMwE,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CAAEC,SAAU,aAAcF,MAAOA,EAAOlQ,MAAOA,IAElE,GACA,CAACwL,IAGGgG,EAAkB,SAACC,GACvB1B,GAAoB2B,EAAAA,EAAAA,IAAqB5B,EAAkB2B,GAC7D,EAEA,OACEtR,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,iBACH2G,KAAK,iBACLpB,SAAU,SAACwC,GACTgH,EAAY,gBAAiBhH,EAAEtC,OAAO1G,OACtCwR,EAAgB,iBAClB,EACA1R,MAAM,WACNe,QAAQ,2CACRb,MAAOsZ,EACPrR,MAAO6H,EAAiC,gBAAK,GAC7C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,eACH2G,KAAK,eACLpB,SAAU,SAACwC,GACTgH,EAAY,cAAehH,EAAEtC,OAAO1G,OACpCwR,EAAgB,eAClB,EACA1R,MAAM,SACNe,QAAQ,4EACRb,MAAOuZ,OAGXjZ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,kBACH2G,KAAK,kBACLpB,SAAU,SAACwC,GACTgH,EAAY,iBAAkBhH,EAAEtC,OAAO1G,MACzC,EACAF,MAAM,YACNe,QAAQ,gHACRb,MAAOwZ,OAGXlZ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,eACH2G,KAAK,eACLpB,SAAU,SAACwC,GACTgH,EAAY,cAAehH,EAAEtC,OAAO1G,MACtC,EACAF,MAAM,SACNe,QAAQ,4HACRb,MAAOyZ,OAIXnZ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,cAC5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,uBACH2G,KAAK,uBACLpB,SAAU,SAACwC,GACTgH,EAAY,qBAAsBhH,EAAEtC,OAAO1G,MAC7C,EACAF,MAAM,SACNe,QAAQ,2FACRb,MAAO0Z,OAGXpZ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,WACH2G,KAAK,WACLpB,SAAU,SAACwC,GACTgH,EAAY,UAAWhH,EAAEtC,OAAO1G,OAChCwR,EAAgB,WAClB,EACA1R,MAAM,aACNe,QAAQ,0GACRb,MAAO2Z,EACP1R,MAAO6H,EAA2B,UAAK,GACvC/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,eACH2G,KAAK,eACLpB,SAAU,SAACwC,GACTgH,EAAY,cAAehH,EAAEtC,OAAO1G,OACpCwR,EAAgB,eAClB,EACA1R,MAAM,iBACNe,QAAQ,0GACRb,MAAO4Z,EACP3R,MAAO6H,EAA+B,cAAK,GAC3C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdjL,KAAK,SACL2L,IAAI,IACJ5R,GAAG,cACH2G,KAAK,cACLpB,SAAU,SAACwC,GACTgH,EAAY,aAAchH,EAAEtC,OAAO1G,OACnCwR,EAAgB,cAClB,EACA1R,MAAM,kBACNE,MAAO6Z,EACP5R,MAAO6H,EAA8B,aAAK,aAKlDxP,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJ1D,UAAWF,EAAQkT,aACnBhS,MAAO,CAAEqB,UAAW,IAAKpC,UAEzBF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,YAC5CC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdjL,KAAK,SACL2L,IAAI,IACJ5R,GAAG,aACH2G,KAAK,aACLpB,SAAU,SAACwC,GACTgH,EAAY,YAAahH,EAAEtC,OAAO1G,OAClCwR,EAAgB,aAClB,EACA1R,MAAM,iBACNE,MAAO8Z,EACP7R,MAAO6H,EAA6B,YAAK,YAMrD,ECvQM+D,GAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTyO,EAAAA,IACAa,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACH,IA2JJ,EAxJoB,WAClB,IAAMtD,GAAWC,EAAAA,EAAAA,MACXvL,EAAU2T,IAEVuF,GAAgBvN,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWD,aAAa,IAEnEY,GAAgBnO,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWW,aAAa,IAEnEC,GAAgBpO,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWY,aAAa,IAEnEC,GAAgBrO,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWa,aAAa,IAEnEC,GAAoBtO,EAAAA,EAAAA,KACxB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWc,iBAAiB,IAG7E/R,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,IAG5C2D,EAAAA,EAAAA,YAAU,WACR,IAAI8N,EAAsC,GAErCX,IACHW,EAAoB,GAAArR,QAAAuI,EAAAA,EAAAA,GACf8I,GAAoB,CACvB,CACEzJ,SAAU,iBACVvI,UAAU,EACV/H,MAAOga,GAET,CACE1J,SAAU,kBACVvI,UAAU,EACV/H,MAAOia,GAET,CACE3J,SAAU,kBACVvI,UAAU,EACV/H,MAAOka,GAET,CACE5J,SAAU,sBACVvI,UAAU,EACV/H,MAAOma,MAKb,IAAMjJ,GAAYC,EAAAA,EAAAA,GAAqB4I,GAEvCvO,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,aACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CACDkI,EACAY,EACAC,EACAC,EACAC,EACA3O,IAIF,IAAMwE,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CAAEC,SAAU,aAAcF,MAAOA,EAAOlQ,MAAOA,IAElE,GACA,CAACwL,IAGGgG,EAAkB,SAACC,GACvB1B,GAAoB2B,EAAAA,EAAAA,IAAqB5B,EAAkB2B,GAC7D,EAEA,OACEtR,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,iBACH2G,KAAK,iBACLpB,SAAU,SAACwC,GACTgH,EAAY,gBAAiBhH,EAAEtC,OAAO1G,OACtCwR,EAAgB,iBAClB,EACA1R,MAAM,WACNe,QAAQ,0CACRb,MAAOga,EACP/R,MAAO6H,EAAiC,gBAAK,QAGjDxP,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,iBAC5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,kBACH2G,KAAK,kBACLpB,SAAU,SAACwC,GACTgH,EAAY,gBAAiBhH,EAAEtC,OAAO1G,OACtCwR,EAAgB,kBAClB,EACA1R,MAAM,YACNe,QAAQ,kDACRb,MAAOia,EACPhS,MAAO6H,EAAkC,iBAAK,QAGlDxP,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,kBACH2G,KAAK,kBACLpB,SAAU,SAACwC,GACTgH,EAAY,gBAAiBhH,EAAEtC,OAAO1G,OACtCwR,EAAgB,kBAClB,EACA1R,MAAM,YACNe,QAAQ,4DACRb,MAAOka,EACPjS,MAAO6H,EAAkC,iBAAK,QAGlDxP,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,sBACH2G,KAAK,sBACLpB,SAAU,SAACwC,GACTgH,EAAY,oBAAqBhH,EAAEtC,OAAO1G,OAC1CwR,EAAgB,sBAClB,EACA1R,MAAM,gBACNe,QAAQ,iEACRb,MAAOma,EACPlS,MAAO6H,EAAsC,qBAAK,cAOhE,ECpKM+D,IAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTyO,EAAAA,IACAa,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACH,IAuHJ,GApHkB,WAChB,IAAM5O,EAAU2T,KACVrI,GAAWC,EAAAA,EAAAA,MAEX2O,GAAevO,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWe,YAAY,IAElEC,GAAcxO,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWgB,WAAW,IAEjEC,GAAiBzO,EAAAA,EAAAA,KACrB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWiB,cAAc,IAEpEC,GAAc1O,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWkB,WAAW,IAEjEC,GAAkB3O,EAAAA,EAAAA,KACtB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWmB,eAAe,IAErEC,GAAgB5O,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWoB,aAAa,IAInEzK,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CAAEC,SAAU,aAAcF,MAAOA,EAAOlQ,MAAOA,IAElE,GACA,CAACwL,IAGH,OACErL,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,iBACH2G,KAAK,iBACLpB,SAAU,SAACwC,GACTgH,EAAY,eAAgBhH,EAAEtC,OAAO1G,MACvC,EACAF,MAAM,aACNe,QAAQ,mCACRb,MAAOoa,OAGX9Z,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,eACH2G,KAAK,eACLpB,SAAU,SAACwC,GACTgH,EAAY,cAAehH,EAAEtC,OAAO1G,MACtC,EACAF,MAAM,WACNe,QAAQ,yFACRb,MAAOqa,OAGX/Z,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,iBAC5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,mBACH2G,KAAK,mBACLpB,SAAU,SAACwC,GACTgH,EAAY,iBAAkBhH,EAAEtC,OAAO1G,MACzC,EACAF,MAAM,eACNe,QAAQ,kFACRb,MAAOsa,OAGXha,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,gBACH2G,KAAK,gBACLpB,SAAU,SAACwC,GACTgH,EAAY,cAAehH,EAAEtC,OAAO1G,MACtC,EACAF,MAAM,YACNe,QAAQ,+EACRb,MAAOua,OAGXja,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,qBACH2G,KAAK,qBACLpB,SAAU,SAACwC,GACTgH,EAAY,kBAAmBhH,EAAEtC,OAAO1G,MAC1C,EACAF,MAAM,iBACNe,QAAQ,oFACRb,MAAOwa,OAGXla,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,kBACH2G,KAAK,kBACLpB,SAAU,SAACwC,GACTgH,EAAY,gBAAiBhH,EAAEtC,OAAO1G,MACxC,EACAF,MAAM,cACNe,QAAQ,iFACRb,MAAOya,aAOrB,ECtHM5G,IAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTyO,EAAAA,IACAa,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACH,IAuKJ,GApKsB,WACpB,IAAMtD,GAAWC,EAAAA,EAAAA,MACXvL,EAAU2T,KAEVuF,GAAgBvN,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWD,aAAa,IAEnEsB,GAAkB7O,EAAAA,EAAAA,KACtB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWqB,eAAe,IAErEC,GAAe9O,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWsB,YAAY,IAElEC,GAAgB/O,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWuB,aAAa,IAEnEC,GAAehP,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWwB,YAAY,IAGxEzS,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,IAG5C2D,EAAAA,EAAAA,YAAU,WACR,IAAI8N,EAAsC,GAErCX,IACHW,EAAoB,GAAArR,QAAAuI,EAAAA,EAAAA,GACf8I,GAAoB,CACvB,CACEzJ,SAAU,mBACVvI,UAAU,EACV/H,MAAO0a,GAET,CACEpK,SAAU,gBACVvI,UAAU,EACV/H,MAAO2a,GAET,CACErK,SAAU,iBACVvI,UAAU,EACV/H,MAAO4a,GAET,CACEtK,SAAU,gBACVvI,UAAU,EACV/H,MAAO6a,EACPrK,iBAAkBC,SAASoK,GAAgB,EAC3CnK,wBAAyB,qCAK/B,IAAMQ,GAAYC,EAAAA,EAAAA,GAAqB4I,GAEvCvO,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,aACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CACDkI,EACAsB,EACAC,EACAC,EACAC,EACArP,IAIF,IAAMwE,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CAAEC,SAAU,aAAcF,MAAOA,EAAOlQ,MAAOA,IAElE,GACA,CAACwL,IAGGgG,EAAkB,SAACC,GACvB1B,GAAoB2B,EAAAA,EAAAA,IAAqB5B,EAAkB2B,GAC7D,EAEA,OACEtR,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,mBACH2G,KAAK,mBACLpB,SAAU,SAACwC,GACTgH,EAAY,kBAAmBhH,EAAEtC,OAAO1G,OACxCwR,EAAgB,mBAClB,EACA1R,MAAM,WACNe,QAAQ,mDACRb,MAAO0a,EACPzS,MAAO6H,EAAmC,kBAAK,GAC/C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJ1C,MAAO,CACL0E,aAAc,IACdzF,UAEFF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,iBAC5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,gBACH2G,KAAK,gBACLpB,SAAU,SAACwC,GACTgH,EAAY,eAAgBhH,EAAEtC,OAAO1G,OACrCwR,EAAgB,gBAClB,EACA1R,MAAM,QACNe,QAAQ,2EACRb,MAAO2a,EACP1S,MAAO6H,EAAgC,eAAK,GAC5C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,iBACH2G,KAAK,iBACLpB,SAAU,SAACwC,GACTgH,EAAY,gBAAiBhH,EAAEtC,OAAO1G,OACtCwR,EAAgB,iBAClB,EACA1R,MAAM,SACNe,QAAQ,kHACRb,MAAO4a,EACP3S,MAAO6H,EAAiC,gBAAK,GAC7C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdjL,KAAK,SACL2L,IAAI,IACJ5R,GAAG,gBACH2G,KAAK,gBACLpB,SAAU,SAACwC,GACTgH,EAAY,eAAgBhH,EAAEtC,OAAO1G,OACrCwR,EAAgB,gBAClB,EACA1R,MAAM,kBACNE,MAAO6a,EACP5S,MAAO6H,EAAgC,eAAK,cAO1D,EC3KM+D,IAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTyO,EAAAA,IACAa,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACH,IA4LJ,GAzLkB,WAChB,IAAMtD,GAAWC,EAAAA,EAAAA,MACXvL,EAAU2T,KAEVuF,GAAgBvN,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWD,aAAa,IAEnE0B,GAAcjP,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWyB,WAAW,IAEjEC,GAAYlP,EAAAA,EAAAA,KAChB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAW0B,SAAS,IAE/DC,GAAYnP,EAAAA,EAAAA,KAChB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAW2B,SAAS,IAE/DC,GAAepP,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAW4B,YAAY,IAElEC,GAAerP,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAW6B,YAAY,IAElEC,GAAWtP,EAAAA,EAAAA,KACf,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAW8B,QAAQ,IAEpE/S,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,IAG5C2D,EAAAA,EAAAA,YAAU,WACR,IAAI8N,EAAsC,GAErCX,IACHW,EAAoB,GAAArR,QAAAuI,EAAAA,EAAAA,GACf8I,GAAoB,CACvB,CACEzJ,SAAU,eACVvI,UAAU,EACV/H,MAAO8a,GAET,CACExK,SAAU,aACVvI,UAAU,EACV/H,MAAO+a,GAET,CACEzK,SAAU,gBACVvI,UAAU,EACV/H,MAAOib,GAET,CACE3K,SAAU,gBACVvI,UAAU,EACV/H,MAAOkb,MAKb,IAAMhK,GAAYC,EAAAA,EAAAA,GAAqB4I,GAEvCvO,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,aACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CACDkI,EACA0B,EACAC,EACAG,EACAD,EACAzP,IAIF,IAAMwE,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CAAEC,SAAU,aAAcF,MAAOA,EAAOlQ,MAAOA,IAElE,GACA,CAACwL,IAGGgG,EAAkB,SAACC,GACvB1B,GAAoB2B,EAAAA,EAAAA,IAAqB5B,EAAkB2B,GAC7D,EAEA,OACEtR,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,eACH2G,KAAK,eACLpB,SAAU,SAACwC,GACTgH,EAAY,cAAehH,EAAEtC,OAAO1G,OACpCwR,EAAgB,eAClB,EACA1R,MAAM,WACNe,QAAQ,qJACRb,MAAO8a,EACP7S,MAAO6H,EAA+B,cAAK,GAC3C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,aACH2G,KAAK,aACLpB,SAAU,SAACwC,GACTgH,EAAY,YAAahH,EAAEtC,OAAO1G,OAClCwR,EAAgB,aAClB,EACA1R,MAAM,SACNe,QAAQ,yDACRb,MAAO+a,EACP9S,MAAO6H,EAA6B,YAAK,GACzC/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,aACH2G,KAAK,aACLpB,SAAU,SAACwC,GACTgH,EAAY,YAAahH,EAAEtC,OAAO1G,MACpC,EACAF,MAAM,UACNe,QAAQ,4IACRb,MAAOgb,OAGX1a,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,iBAC5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,gBACH2G,KAAK,gBACLpB,SAAU,SAACwC,GACTgH,EAAY,eAAgBhH,EAAEtC,OAAO1G,OACrCwR,EAAgB,gBAClB,EACA1R,MAAM,aACNe,QAAQ,wDACRb,MAAOib,EACPhT,MAAO6H,EAAgC,eAAK,GAC5C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,gBACH2G,KAAK,gBACLpB,SAAU,SAACwC,GACTgH,EAAY,eAAgBhH,EAAEtC,OAAO1G,OACrCwR,EAAgB,gBAClB,EACA1R,MAAM,aACNe,QAAQ,wDACRb,MAAOkb,EACPjT,MAAO6H,EAAgC,eAAK,GAC5C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,YACH2G,KAAK,YACL/G,QAAQ,qFACR2F,SAAU,SAACwC,GACTgH,EAAY,WAAYhH,EAAEtC,OAAO1G,MACnC,EACAF,MAAM,QACNE,MAAOmb,aAOrB,E,gDCsfA,IAAevc,EAAAA,EAAAA,IA3pBA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACX2b,sBAAuB,CACrBtV,aAAc,IAEhBuV,gBAAiB,CACf5Y,UAAW,GACX,aAAc,CACZ+L,KAAM,IAGV8M,YAAa,CACX/b,YAAa,IAEfgc,oBAAqB,CACnB,4BAA6B,CAC3Bvc,QAAS,OACTC,SAAU,YAGXiP,EAAAA,IACAa,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACF,GAmoBL,EAjoBmB,SAAHlP,GAAuC,IAAjCM,EAAON,EAAPM,QACdsL,GAAWC,EAAAA,EAAAA,MAEX+P,GAAW3P,EAAAA,EAAAA,KACf,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWmC,QAAQ,IAE9DC,GAAmB5P,EAAAA,EAAAA,KACvB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWoC,gBAAgB,IAEtErC,GAAgBvN,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWD,aAAa,IAEnEsC,GAAmB7P,EAAAA,EAAAA,KACvB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWqC,gBAAgB,IAEtEC,GAAiB9P,EAAAA,EAAAA,KACrB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWsC,cAAc,IAGpEvB,GAAevO,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWe,YAAY,IAElEC,GAAcxO,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWgB,WAAW,IAEjEC,GAAiBzO,EAAAA,EAAAA,KACrB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWiB,cAAc,IAEpEC,GAAc1O,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWkB,WAAW,IAEjEC,GAAkB3O,EAAAA,EAAAA,KACtB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWmB,eAAe,IAErEC,GAAgB5O,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAWoB,aAAa,IAEnEmB,GAA0B/P,EAAAA,EAAAA,KAC9B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOmK,WAAWuC,uBAAuB,IAE1D/D,GAAiBhM,EAAAA,EAAAA,KACrB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAO0I,SAASC,cAAc,IAElEF,GAAY9L,EAAAA,EAAAA,KAChB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAO0I,SAASD,SAAS,IAE7DM,GAA0BpM,EAAAA,EAAAA,KAC9B,SAACC,GAAe,OAAKA,EAAMmD,aAAa+I,aAAaC,uBAAuB,IAExE4D,GAAuBhQ,EAAAA,EAAAA,KAC3B,SAACC,GAAe,OAAKA,EAAMmD,aAAa+I,aAAa6D,oBAAoB,IAErEC,GAAuBjQ,EAAAA,EAAAA,KAC3B,SAACC,GAAe,OAAKA,EAAMmD,aAAa+I,aAAa8D,oBAAoB,IAErEC,GAAqBlQ,EAAAA,EAAAA,KACzB,SAACC,GAAe,OAAKA,EAAMmD,aAAa+I,aAAa+D,kBAAkB,IAEnEC,GAAQnQ,EAAAA,EAAAA,KACZ,SAACC,GAAe,OAAKA,EAAMmD,aAAa+I,aAAagE,KAAK,IAEtDlE,GAAoBjM,EAAAA,EAAAA,KACxB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAO0I,SAASE,iBAAiB,IAErEmE,GAAqBpQ,EAAAA,EAAAA,KACzB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOmK,WAAW4C,kBAAkB,IAG9E7T,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,GAExC4T,GAAsB,EAExBvE,IACCE,GACEI,GACCA,EAAwBtE,QACtB,SAAC9P,GAAI,OAAKA,EAAKsY,aAAetY,EAAKuY,YAAY,IAC/C/W,OAAS,KAEf6W,GAAsB,GAIxB,IAAMlM,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CAAEC,SAAU,aAAcF,MAAOA,EAAOlQ,MAAOA,IAElE,GACA,CAACwL,IAGGgG,EAAkB,SAACC,GACvB1B,GAAoB2B,EAAAA,EAAAA,IAAqB5B,EAAkB2B,GAC7D,EA2GA,OAxGAxF,EAAAA,EAAAA,YAAU,WACR,IAAI8N,EAAsC,GAEtC2B,IACF3B,EAAuB,CACrB,CACEzJ,SAAU,mBACVvI,SAAUqR,EAAgB,EAC1BpZ,MAAOyb,GAET,CACEnL,SAAU,WACVvI,UAAU,EACV/H,MAAOwb,EACPhL,iBAAkBC,SAAS+K,GAAY,EACvC9K,wBAAyB,qCAE3B,CACEJ,SAAU,gCACVvI,UAAU,EACV/H,MAAOic,EAAmB1L,UAC1BC,iBACmC,KAAjCyL,EAAmB1L,WACnBE,SAASwL,EAAmB1L,WAAa,EAC3CG,wBAAwB,8CAE1B,CACEJ,SAAU,iCACVvI,UAAU,EACV/H,MAAOic,EAAmBtL,WAC1BH,iBACoC,KAAlCyL,EAAmBtL,YACnBF,SAASwL,EAAmBtL,YAAc,EAC5CD,wBAAwB,+CAE1B,CACEJ,SAAU,8BACVvI,UAAU,EACV/H,MAAOic,EAAmBrL,QAC1BJ,iBACiC,KAA/ByL,EAAmBrL,SACnBH,SAASwL,EAAmBrL,SAAY,EAC1CF,wBAAwB,6CAIxBoH,IACFiC,EAAoB,GAAArR,QAAAuI,EAAAA,EAAAA,GACf8I,GAAoB,CACvB,CACEzJ,SAAU,YACVvI,UAAW8P,EACX7X,MAAO6b,EAAqBM,aAE9B,CACE7L,SAAU,aACVvI,UAAW8P,EACX7X,MAAO6b,EAAqBO,cAE9B,CACE9L,SAAU,YACVvI,UAAW8P,EACX7X,MAAO8b,EAAqBK,aAE9B,CACE7L,SAAU,aACVvI,UAAW8P,EACX7X,MAAO8b,EAAqBM,kBAMpC,IAAMlL,GAAYC,EAAAA,EAAAA,GAAqB4I,GACvCvO,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,aACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CACDuK,EACArC,EACAsC,EACAC,EACAvB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAjP,EACAqM,EACAC,EACA+D,EAAqBM,YACrBN,EAAqBO,aACrBN,EAAqBK,YACrBL,EAAqBM,aACrBH,EACAT,KAIArb,EAAAA,EAAAA,MAACwR,EAAAA,EAAK,CAACvR,UAAWF,EAAQ0R,aAAavR,SAAA,EACrCF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAAC7E,WAAS,EAACqD,WAAY,SAAS/B,SAAA,EACnCC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,IAAE,EAAAzD,UACXC,EAAAA,EAAAA,KAAC+b,EAAS,CAAAhc,SAAC,kBAEbC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAGtB,eAAgB,MAAO8Z,UAAW,QAAQjc,UAC1DC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBnS,MAAO,GACPyc,gBAAiB,CAAC,UAAW,YAC7BrK,QAASwJ,EACT1b,MAAO,oBACPiB,GAAG,oBACH2G,KAAK,oBACLpB,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QAExBlC,EAAY,mBAAoBkC,EAClC,EACAoG,YAAY,GACZxQ,UAAWoU,UAIjB/b,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAAC7E,WAAS,EAACsZ,QAAS,EAAEhY,SAAA,EACzBC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBC,EAAAA,EAAAA,KAAA,QAAMF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,oUAQ5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACE,GAAI,GAAGzD,UACXC,EAAAA,EAAAA,KAACqK,GAAAA,EAAM,MAGR+Q,IACCvb,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBF,EAAAA,EAAAA,MAACqc,GAAAA,EAAI,CACHxc,MAAOoZ,EACP5S,SAAU,SAACwC,EAA0BhJ,GACnCgQ,EAAY,gBAAiBhQ,EAC/B,EACAyc,eAAe,UACfC,UAAU,UACV,aAAW,eACXtX,QAAQ,aACRuX,cAAc,OAAMtc,SAAA,EAEpBC,EAAAA,EAAAA,KAACsc,GAAAA,EAAG,CAAC3b,GAAG,cAAcnB,MAAM,aAC5BQ,EAAAA,EAAAA,KAACsc,GAAAA,EAAG,CAAC3b,GAAG,wBAAwBnB,MAAM,kBAIzCsZ,GACC9Y,EAAAA,EAAAA,KAAC0U,EAAAA,SAAQ,CAAA3U,UACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBC,EAAAA,EAAAA,KAACuc,GAAAA,EAAiB,CAChB7c,MAAOyb,EACPhW,KAAM,OACNC,eAAgB,SAACoX,EAAQ9S,EAAMhK,GAC7BgQ,EAAY,mBAAoBhQ,EAClC,EACA4F,aAAc,eAKpBzF,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkb,sBAAsB/a,UAC1DC,EAAAA,EAAAA,KAACwW,EAAAA,EAAkB,CACjBC,iBAAkB4E,EAClB1a,GAAG,iBACH2G,KAAK,iBACL9H,MAAM,MACN0G,SAAU,SAACwC,GACTgH,EAAY,iBAAkBhH,EAAEtC,OAAO1G,MACzC,EACAiX,gBAAiB,CACf,CAAEnX,MAAO,QAASE,MAAO,SACzB,CAAEF,MAAO,MAAOE,MAAO,OACvB,CAAEF,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,MAAOE,MAAO,OACvB,CAAEF,MAAO,QAASE,MAAO,cAIX,UAAnB2b,IAA8Brb,EAAAA,EAAAA,KAACyc,EAAW,IACvB,UAAnBpB,IAA8Brb,EAAAA,EAAAA,KAAC0c,EAAW,IACvB,QAAnBrB,IAA4Brb,EAAAA,EAAAA,KAAC2c,GAAS,IACnB,QAAnBtB,IAA4Brb,EAAAA,EAAAA,KAAC4c,GAAS,IACnB,YAAnBvB,IAAgCrb,EAAAA,EAAAA,KAAC6c,GAAa,QAInD7c,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ2R,cAAcxR,UACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAWF,EAAQ8R,UAAU3R,SAAC,iCAEpCC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,0BACNiB,GAAG,0BACH2G,KAAK,0BACLsK,QAAS0J,IAA4B/D,EACrCrR,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QAExBlC,EAAY,0BAA2BkC,EACzC,EACApS,MAAO,sBACPgI,UAAW+P,OAGb+D,IAA4B/D,KAC5B1X,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC7E,WAAS,EAAAsB,UACbC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1C,MAAO,CAAE0E,aAAc,IAAKzF,UAC7CF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,oCAG5CC,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACE4R,EAAAA,EAAAA,IAAqB,CACnB/J,IAAK,MACLpK,SAAUA,EACVjJ,MAAOyY,KAGXjH,EAAgB,YAClB,EACArJ,OAAO,YACPlH,GAAG,YACH2G,KAAK,YACL9H,MAAM,MACNmI,MAAO6H,EAA4B,WAAK,GACxC9P,MAAO6b,EAAqBxI,IAC5BtL,UAAW8P,KAEbvX,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACE4R,EAAAA,EAAAA,IAAqB,CACnB/J,IAAK,OACLpK,SAAUA,EACVjJ,MAAOyY,KAGXjH,EAAgB,aAClB,EACArJ,OAAO,uBACPlH,GAAG,aACH2G,KAAK,aACL9H,MAAM,OACNmI,MAAO6H,EAA6B,YAAK,GACzC9P,MAAO6b,EAAqBlD,KAC5B5Q,UAAW8P,YAKnBvX,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC7E,WAAS,EAACqC,MAAO,CAAE0E,aAAc,IAAKzF,UAC1CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,kFAI5CC,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACE6R,EAAAA,EAAAA,IAAqB,CACnBhK,IAAK,MACLpK,SAAUA,EACVjJ,MAAOyY,KAGXjH,EAAgB,YAClB,EACArJ,OAAO,YACPlH,GAAG,YACH2G,KAAK,YACL9H,MAAM,MACNmI,MAAO6H,EAA4B,WAAK,GACxC9P,MAAO8b,EAAqBzI,IAC5BtL,UAAW8P,KAEbvX,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACE6R,EAAAA,EAAAA,IAAqB,CACnBhK,IAAK,OACLpK,SAAUA,EACVjJ,MAAOyY,KAGXjH,EAAgB,aAClB,EACArJ,OAAO,uBACPlH,GAAG,aACH2G,KAAK,aACL9H,MAAM,OACNmI,MAAO6H,EAA6B,YAAK,GACzC9P,MAAO8b,EAAqBnD,KAC5B5Q,UAAW8P,YAKnBvX,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC7E,WAAS,EAACqB,UAAWF,EAAQmb,gBAAgBhb,UACjDF,EAAAA,EAAAA,MAAA,YAAUC,UAAWF,EAAQ+N,WAAW5N,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,kFAI5CC,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACE8R,EAAAA,EAAAA,IAAmB,CACjBjK,IAAK,MACLpK,SAAUA,EACVjJ,MAAOyY,KAGXjH,EAAgB,YAClB,EACArJ,OAAO,YACPlH,GAAG,YACH2G,KAAK,YACL9H,MAAM,MACNE,MAAO+b,EAAmB1I,OAE5B/S,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACE8R,EAAAA,EAAAA,IAAmB,CACjBjK,IAAK,OACLpK,SAAUA,EACVjJ,MAAOyY,KAGXjH,EAAgB,aAClB,EACArJ,OAAO,uBACPlH,GAAG,aACH2G,KAAK,aACL9H,MAAM,OACNE,MAAO+b,EAAmBpD,QAE5BrY,EAAAA,EAAAA,KAACkY,EAAAA,EAAY,CACXhS,SAAU,SAACiS,EAAcxP,GACvBuC,GACE+R,EAAAA,EAAAA,IAAa,CACXtU,SAAUA,EACVjJ,MAAOyY,KAGXjH,EAAgB,WAClB,EACArJ,OAAO,uBACPlH,GAAG,WACH2G,KAAK,WACL9H,MAAM,KACNE,MAAOgc,EAAMrD,gBAMvBxY,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,SAAA,EAChBC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI5D,QAASA,EAAQkT,aAAa/S,UAC/CC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdjL,KAAK,SACL2L,IAAI,IACJ5R,GAAG,WACH2G,KAAK,WACLpB,SAAU,SAACwC,GACTgH,EAAY,WAAYhH,EAAEtC,OAAO1G,OACjCwR,EAAgB,WAClB,EACA1R,MAAM,WACNE,MAAOwb,EACPzT,UAAQ,EACRE,MAAO6H,EAA2B,UAAK,QAI3C3P,EAAAA,EAAAA,MAAA,YACEC,UAAWF,EAAQ+N,WACnB7M,MAAO,CAAEqB,UAAW,IAAKpC,SAAA,EAEzBC,EAAAA,EAAAA,KAAA,UAAQF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,kCAG5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ+b,mBAAmB5b,UACvDF,EAAAA,EAAAA,MAAA,OACEC,UAAS,GAAAsI,OAAKxI,EAAQ0S,eAAc,KAAAlK,OAAIxI,EAAQqb,qBAAsBlb,SAAA,EAEtEC,EAAAA,EAAAA,KAAA,OACEF,UAAS,GAAAsI,OAAKxI,EAAQkT,aAAY,KAAA1K,OAAIxI,EAAQob,aAAcjb,UAE5DC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdjL,KAAK,SACLjG,GAAG,gCACH2G,KAAK,gCACLpB,SAAU,SAACwC,GACTgH,EAAY,sBAAoBvQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3Bwc,GAAkB,IACrB1L,UAAWvH,EAAEtC,OAAO1G,SAEtBwR,EAAgB,gCAClB,EACA1R,MAAM,cACNE,MAAOic,EAAmB1L,UAC1BxI,UAAQ,EACRE,MACE6H,EAAgD,+BAChD,GAEF+C,IAAI,SAGRvS,EAAAA,EAAAA,KAAA,OACEF,UAAS,GAAAsI,OAAKxI,EAAQkT,aAAY,KAAA1K,OAAIxI,EAAQob,aAAcjb,UAE5DC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdjL,KAAK,SACLjG,GAAG,iCACH2G,KAAK,iCACLpB,SAAU,SAACwC,GACTgH,EAAY,sBAAoBvQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3Bwc,GAAkB,IACrBtL,WAAY3H,EAAEtC,OAAO1G,SAEvBwR,EAAgB,iCAClB,EACA1R,MAAM,eACNE,MAAOic,EAAmBtL,WAC1B5I,UAAQ,EACRE,MACE6H,EAAiD,gCACjD,GAEF+C,IAAI,cAKZvS,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ+b,mBAAmB5b,UACvDF,EAAAA,EAAAA,MAAA,OACEC,UAAS,GAAAsI,OAAKxI,EAAQ0S,eAAc,KAAAlK,OAAIxI,EAAQqb,qBAAsBlb,SAAA,EAEtEC,EAAAA,EAAAA,KAAA,OACEF,UAAS,GAAAsI,OAAKxI,EAAQkT,aAAY,KAAA1K,OAAIxI,EAAQob,aAAcjb,UAE5DC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdjL,KAAK,SACLjG,GAAG,8BACH2G,KAAK,8BACLpB,SAAU,SAACwC,GACTgH,EAAY,sBAAoBvQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3Bwc,GAAkB,IACrBrL,QAAS5H,EAAEtC,OAAO1G,SAEpBwR,EAAgB,8BAClB,EACA1R,MAAM,UACNE,MAAOic,EAAmBrL,QAC1B7I,UAAQ,EACRE,MACE6H,EAA8C,6BAAK,GAErD+C,IAAI,SAGRvS,EAAAA,EAAAA,KAAA,OACEF,UAAS,GAAAsI,OAAKxI,EAAQkT,aAAY,KAAA1K,OAAIxI,EAAQob,aAAcjb,UAE5DC,EAAAA,EAAAA,KAACwS,EAAAA,EAAa,CACZhT,MAAM,sBACNmB,GAAG,sCACH2G,KAAK,sCACL5H,MAAOic,EAAmBlJ,oBAC1BvM,SAAU,SAACwC,GACTgH,EAAY,sBAAoBvQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3Bwc,GAAkB,IACrBlJ,oBAAqB/J,EAAEtC,OAAO1G,QAElC,EACAgT,QAAS,CACP,CACElT,MAAO,SACPE,MAAO,UAET,CACEF,MAAO,iBACPE,MAAO,6BAOnBM,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0S,eAAevS,UACrCC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,iCACNiB,GAAG,mCACH2G,KAAK,mCACLsK,QAAS+J,EAAmBhJ,aAC5BzM,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QACxBlC,EAAY,sBAAoBvQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3Bwc,GAAkB,IACrBhJ,aAAcf,IAElB,EACApS,MAAO,yCAW7B,I,+CCnNA,IAAelB,EAAAA,EAAAA,IA9cA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXmP,cAAe,CACb3H,WAAY,GACZjI,QAAS,OACToD,WAAY,SACZ,QAAS,CACPiF,SAAU,GACVzE,UAAW,IAEb,WAAY,CACVvD,WAAY,YAGhBme,oBAAqB,CACnBxe,QAAS,QAEXye,mBAAoB,CAClBze,QAAS,OACTC,SAAU,SACVuP,KAAM,GAERkP,WAAY,CACV1e,QAAS,OACToD,WAAY,aACZK,UAAW,GACX,oBAAqB,CACnBzD,QAAS,OACTC,SAAU,SACVmD,WAAY,WACZka,UAAW,oBAGfqB,iBAAkB,CAChB,oBAAqB,CACnB7X,aAAc,IAGlB8X,mBAAoB,CAClB3W,WAAY,GACZ,oBAAqB,CACnBnB,aAAc,IAGlB6I,WAAY,CACV3P,QAAS,OACToD,WAAY,UAEdyb,YAAa,CACX/X,aAAc,GACd9G,QAAS,SAER6P,EAAAA,IACAC,EAAAA,IACF,GAwZL,EAjZiB,SAAHlP,GAAqC,IAA/BM,EAAON,EAAPM,QACZsL,GAAWC,EAAAA,EAAAA,MAEXqS,GAAcjS,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAO6O,SAASD,WAAW,IAE/DE,GAAqBnS,EAAAA,EAAAA,KACzB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAO6O,SAASC,kBAAkB,IAEtEC,GAAsBpS,EAAAA,EAAAA,KAC1B,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAO6O,SAASE,mBAAmB,IAEvEC,GAAgBrS,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAakP,iBAAiB,IAErDC,GAAcvS,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAamP,WAAW,IAGrDhW,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,GAC5C+V,GAA8BhW,EAAAA,EAAAA,WAAkB,GAAKiW,GAAA/V,EAAAA,EAAAA,GAAA8V,EAAA,GAA9CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAsCpW,EAAAA,EAAAA,UACpC,CAAC,GACFqW,GAAAnW,EAAAA,EAAAA,GAAAkW,EAAA,GAFME,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAGlCG,GAAoCxW,EAAAA,EAAAA,UAAuB,IAAGyW,GAAAvW,EAAAA,EAAAA,GAAAsW,EAAA,GAAvDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAG1B9O,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CACbC,SAAU,WACVF,MAAOA,EACPlQ,MAAOA,IAGb,GACA,CAACwL,KAGHS,EAAAA,EAAAA,YAAU,WACJsS,GACFxZ,GAAAA,EACGka,OAAO,MAAM,wBACbC,MAAK,SAACC,GACLX,GAAW,GACXI,EAAeO,GACf,IAAI5N,EAAqB,GACzB,IAAK,IAAI6N,KAAKD,EACZ5N,EAAKmC,KAAK,CACR5T,MAAOsf,EACPpf,MAAOof,IAGXJ,EAAczN,EAChB,IACC8N,OAAM,SAACC,GACNd,GAAW,GACXhT,GAAS+T,EAAAA,GAAAA,IAA0BD,IACnCV,EAAe,CAAC,EAClB,GAEN,GAAG,CAACpT,EAAU+S,KAEdtS,EAAAA,EAAAA,YAAU,WACR,GAAIiS,EAAe,CACjB,IAIMsB,EAJMtB,EACTvK,QAAO,SAAC8L,GAAG,MAAiB,KAAZA,EAAIpM,GAAU,IAC9BlP,KAAI,SAACsb,GAAG,SAAA/W,OAAQ+W,EAAIpM,IAAG,KAAA3K,OAAI+W,EAAIzf,MAAK,IACpC2T,QAAO,SAAC+L,EAAKjM,EAAGkM,GAAC,OAAKA,EAAEC,QAAQF,KAASjM,CAAC,IAC9BoM,KAAK,KACpB7P,EAAY,qBAAsBwP,EACpC,CACF,GAAG,CAACtB,EAAelO,KAGnB/D,EAAAA,EAAAA,YAAU,WACR,IAAIoE,EAAyC,GAE7C,GAAoB,iBAAhByN,EAAgC,CAClC,IAAIzM,GAAQ,EAENyO,EAAiB9B,EAAmBlU,MAAM,KAElB,IAA1BgW,EAAeza,QAAsC,KAAtBya,EAAe,KAChDzO,GAAQ,GAGVyO,EAAeC,SAAQ,SAAClc,EAAcQ,GACpC,IAAM2b,EAAYnc,EAAKiG,MAAM,KAEJ,IAArBkW,EAAU3a,SACZgM,GAAQ,GAGNhN,EAAQ,IAAMyb,EAAeza,SACV,KAAjB2a,EAAU,IAA8B,KAAjBA,EAAU,KACnC3O,GAAQ,GAGd,IAEAhB,EAAuB,GAAA3H,QAAAuI,EAAAA,EAAAA,GAClBZ,GAAuB,CAC1B,CACEC,SAAU,SACVvI,UAAU,EACV/H,MAAOge,EACPxN,kBAAmBa,EACnBX,wBACE,gDAGR,CAEA,IAAMQ,GAAYC,EAAAA,EAAAA,GAAqBd,GAEvC7E,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,WACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CAAC1F,EAAUsS,EAAaE,IAE3B,IAAMiC,EAAmB,SAAC5b,EAAe6L,EAAelQ,GACtD,IAAMkgB,GAAezgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ2e,EAAY/Z,IAAM,IAAA8b,EAAAA,GAAAA,GAAA,GAAGjQ,EAAQlQ,IAE1DwL,GACE4U,EAAAA,EAAAA,IAAkB,CAChB/b,MAAOA,EACPgc,gBAAiBH,IAGvB,EAEA,OACE/f,EAAAA,EAAAA,MAACwR,EAAAA,EAAK,CAACvR,UAAWF,EAAQ0R,aAAavR,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ2R,cAAcxR,SAAA,EACpCC,EAAAA,EAAAA,KAACwR,EAAAA,EAAS,CAAAzR,SAAC,mBACXC,EAAAA,EAAAA,KAAA,QAAMF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,qDAI5CC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQsd,oBAAoBnd,UACxDF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACzD,UAAWF,EAAQud,mBAAmBpd,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQJ,MAAMO,SAAC,UAC/BC,EAAAA,EAAAA,KAAA,OACEF,UAAS,GAAAsI,OAAKxI,EAAQ6R,gBAAe,KAAArJ,OAAIxI,EAAQogB,kBAAmBjgB,SACrE,6DAGDC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACzD,UAAWF,EAAQwd,WAAWrd,UACvCC,EAAAA,EAAAA,KAACwW,EAAAA,EAAkB,CACjBC,iBAAkB+G,EAClB7c,GAAG,mBACH2G,KAAK,mBACL9H,MAAO,IACP0G,SAAU,SAACwC,GACTgH,EAAY,cAAehH,EAAEtC,OAAO1G,MACtC,EACAiX,gBAAiB,CACf,CAAEnX,MAAO,OAAQE,MAAO,QACxB,CAAEF,MAAO,8BAA+BE,MAAO,WAC/C,CAAEF,MAAO,gBAAiBE,MAAO,0BAM1B,iBAAhB8d,IACC3d,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,yBACNiB,GAAG,yBACH2G,KAAK,yBACLsK,QAAS+L,EACTzX,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QAExBlC,EAAY,sBAAuBkC,EACrC,EACApS,MAAO,8BAGXK,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,SAAA,EAChBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,QAAMF,UAAWF,EAAQ+H,MAAM5H,SAAEyP,EAAyB,UAC1DxP,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC7E,WAAS,EAAAsB,SACZ6d,GACCA,EAAc/Z,KAAI,SAACsb,EAAKhM,GACtB,OACEtT,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJ1D,UAAWF,EAAQ2d,YAAYxd,SAAA,EAG/BF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAG1D,UAAWF,EAAQyd,iBAAiBtd,SAAA,CACnD0e,EAAW1Z,OAAS,IACnB/E,EAAAA,EAAAA,KAACwS,EAAAA,EAAa,CACZtM,SAAU,SAACwC,GACT,IAAMuX,EAASvX,EAAEtC,OAAO1G,MAClBwgB,EAAuB,CAC3BnN,IAAKkN,EACLvgB,MAAO2e,EAAY4B,GAAQ,IAEvBE,GAAqBxP,EAAAA,EAAAA,GAAOiN,GAClCuC,EAAMhN,GAAK+M,EACXhV,GAASkV,EAAAA,EAAAA,IAAiBD,GAC5B,EACAxf,GAAG,uBACH2G,KAAK,uBACL9H,MAAO,GACPE,MAAOyf,EAAIpM,IACXL,QAAS+L,IAGU,IAAtBA,EAAW1Z,SACV/E,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAE,oBAAAyH,OAAsB+K,EAAE5J,YAC1B/J,MAAO,GACP8H,KAAI,gBAAAc,OAAkB+K,EAAE5J,YACxB7J,MAAOyf,EAAIpM,IACX7M,SAAU,SAACwC,GACT,IAAMyX,GAAqBxP,EAAAA,EAAAA,GAAOiN,GAClCuC,EAAMhN,GAAK,CACTJ,IAAKoN,EAAMhN,GAAGJ,IACdrT,MAAOgJ,EAAEtC,OAAO1G,OAElBwL,GAASkV,EAAAA,EAAAA,IAAiBD,GAC5B,EACApc,MAAOoP,EACPrB,YAAa,YAInBjS,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAG1D,UAAWF,EAAQ0d,mBAAmBvd,SAAA,CACrD0e,EAAW1Z,OAAS,IACnB/E,EAAAA,EAAAA,KAACwS,EAAAA,EAAa,CACZtM,SAAU,SAACwC,GACT,IAAMyX,GAAqBxP,EAAAA,EAAAA,GAAOiN,GAClCuC,EAAMhN,GAAK,CACTJ,IAAKoN,EAAMhN,GAAGJ,IACdrT,MAAOgJ,EAAEtC,OAAO1G,OAElBwL,GAASkV,EAAAA,EAAAA,IAAiBD,GAC5B,EACAxf,GAAG,uBACH2G,KAAK,uBACL9H,MAAO,GACPE,MAAOyf,EAAIzf,MACXgT,QACE2L,EAAYc,EAAIpM,KACZsL,EAAYc,EAAIpM,KAAKlP,KAAI,SAACwc,GACxB,MAAO,CAAE7gB,MAAO6gB,EAAG3gB,MAAO2gB,EAC5B,IACA,KAIa,IAAtB5B,EAAW1Z,SACV/E,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAE,sBAAAyH,OAAwB+K,EAAE5J,YAC5B/J,MAAO,GACP8H,KAAI,gBAAAc,OAAkB+K,EAAE5J,YACxB7J,MAAOyf,EAAIzf,MACXwG,SAAU,SAACwC,GACT,IAAMyX,GAAqBxP,EAAAA,EAAAA,GAAOiN,GAClCuC,EAAMhN,GAAK,CACTJ,IAAKoN,EAAMhN,GAAGJ,IACdrT,MAAOgJ,EAAEtC,OAAO1G,OAElBwL,GAASkV,EAAAA,EAAAA,IAAiBD,GAC5B,EACApc,MAAOoP,EACPrB,YAAa,cAInBjS,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,EAAG1D,UAAWF,EAAQyO,WAAWtO,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACP,IAAMuf,GAAKxP,EAAAA,EAAAA,GAAOiN,GACda,EAAW1Z,OAAS,EACtBob,EAAM/M,KAAK,CACTL,IAAK0L,EAAW,GAAG/e,MACnBA,MAAO2e,EAAYI,EAAW,GAAG/e,OAAO,KAG1CygB,EAAM/M,KAAK,CAAEL,IAAK,GAAIrT,MAAO,KAG/BwL,GAASkV,EAAAA,EAAAA,IAAiBD,GAC5B,EACA3Y,SAAU2L,IAAMyK,EAAc7Y,OAAS,EAAEhF,UAEzCC,EAAAA,EAAAA,KAACmS,EAAAA,IAAO,SAGZnS,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACP,IAAMuf,EAAQvC,EAAcvK,QAC1B,SAAC9P,EAAMQ,GAAK,OAAKA,IAAUoP,CAAC,IAE9BjI,GAASkV,EAAAA,EAAAA,IAAiBD,GAC5B,EACA3Y,SAAUoW,EAAc7Y,QAAU,EAAEhF,UAEpCC,EAAAA,EAAAA,KAACqS,EAAAA,IAAU,aAGV,mBAAAjK,OAxHiB+K,EAAE5J,YA2HhC,aAKVvJ,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQsd,oBAAoBnd,UACxDF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACzD,UAAWF,EAAQud,mBAAmBpd,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJC,EAAAA,EAAAA,KAAA,QAAMF,UAAWF,EAAQ+H,MAAM5H,SAC5ByP,EAA8B,eAEjCxP,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAC7E,WAAS,EAAAsB,SACZ+d,GACCA,EAAYja,KAAI,SAACyc,EAAKnN,GAAO,IAADoN,EAC1B,OACE1gB,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CACHC,MAAI,EACJC,GAAI,GACJ1D,UAAWF,EAAQ2d,YAAYxd,SAAA,EAG/BC,EAAAA,EAAAA,KAACwgB,GAAAA,EAAkB,CACjBC,OAAQH,EAAIG,OACZC,eAAgB,SAAChhB,GACfigB,EAAiBxM,EAAG,SAAUzT,EAChC,EACAihB,cAAeL,EAAIvN,IACnB6N,sBAAuB,SAAClhB,GACtBigB,EAAiBxM,EAAG,MAAOzT,EAC7B,EACAmhB,SAAUP,EAAIO,SACdC,iBAAkB,SAACphB,GACjBigB,EAAiBxM,EAAG,WAAYzT,EAClC,EACAA,MAAO4gB,EAAI5gB,MACXqhB,cAAe,SAACrhB,GACdigB,EAAiBxM,EAAG,QAASzT,EAC/B,EACAshB,mBAAwC,QAArBT,EAAAD,EAAIU,yBAAiB,IAAAT,OAAA,EAArBA,EAAuBU,UAAW,EACrDC,gBAAiB,SAACxhB,GAChBigB,EAAiBxM,EAAG,oBAAqB,CACvC8N,QAASvhB,GAEb,EACAqE,MAAOoP,KAETnT,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,WACPsK,GAASiW,EAAAA,EAAAA,MACX,EACA3Z,SAAU2L,IAAM2K,EAAY/Y,OAAS,EAAEhF,UAEvCC,EAAAA,EAAAA,KAACmS,EAAAA,IAAO,SAIZnS,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ0O,cAAcvO,UACpCC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CACTI,KAAM,QACNnJ,QAAS,kBAAMsK,GAASkW,EAAAA,EAAAA,IAAiBjO,GAAG,EAC5C3L,SAAUsW,EAAY/Y,QAAU,EAAEhF,UAElCC,EAAAA,EAAAA,KAACqS,EAAAA,IAAU,UAET,mBAAAjK,OA/CkB+K,EAAE5J,YAkDhC,aAMd,ICpPA,IAAejL,EAAAA,EAAAA,IAvOA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTsP,EAAAA,IACAD,EAAAA,IACF,GAmOL,EAjOe,SAAHlP,GAAmC,IAA7BM,EAAON,EAAPM,QACVsL,GAAWC,EAAAA,EAAAA,MAEXkW,GAAc9V,EAAAA,EAAAA,KAClB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUwS,WAAW,IAEhEC,GAAY/V,EAAAA,EAAAA,KAChB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUyS,SAAS,IAE9DC,GAAkBhW,EAAAA,EAAAA,KACtB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAU0S,eAAe,IAEpEC,GAAgBjW,EAAAA,EAAAA,KACpB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAU2S,aAAa,IAElEC,GAAwBlW,EAAAA,EAAAA,KAC5B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOC,UAAU4S,qBAAqB,IAEvDC,GAAwBnW,EAAAA,EAAAA,KAC5B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOC,UAAU6S,qBAAqB,IAGvDxS,GAAe3D,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAUK,YAAY,IAGjEyS,GAAWpW,EAAAA,EAAAA,KACf,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOC,UAAU8S,QAAQ,IAGnE7Z,GAAgDC,EAAAA,EAAAA,UAAc,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D0H,EAAgBxH,EAAA,GAAEyH,EAAmBzH,EAAA,GAGtC0H,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CAAEC,SAAU,YAAaF,MAAOA,EAAOlQ,MAAOA,IAEjE,GACA,CAACwL,KAIHS,EAAAA,EAAAA,YAAU,WACR,IAAIoE,EAAyC,GAEzCsR,IACFtR,EAAuB,GAAA3H,QAAAuI,EAAAA,EAAAA,GAClBZ,GAAuB,CAC1B,CACEC,SAAU,QACVvI,UAAU,EACV/H,MAAO4hB,EACP7Q,QAAS,wBACTC,qBAAsB,iDAExB,CACEV,SAAU,WACVvI,UAAU,EACV/H,MAAOiiB,EACPlR,QAAS,wBACTC,qBAAsB,iDAGtB6Q,IACFxR,EAAuB,GAAA3H,QAAAuI,EAAAA,EAAAA,GAClBZ,GAAuB,CAC1B,CACEC,SAAU,WACVvI,UAAU,EACV/H,MAAO8hB,GAET,CACExR,SAAU,mBACVvI,UAAU,EACV/H,MAAO+hB,GAET,CACEzR,SAAU,mBACVvI,UAAU,EACV/H,MAAOgiB,OAMf,IAAM9Q,GAAYC,EAAAA,EAAAA,GAAqBd,GAEvC7E,GACE4F,EAAAA,EAAAA,IAAY,CACVhB,SAAU,YACViB,MAAyC,IAAlCC,OAAOC,KAAKL,GAAW7L,UAIlC0K,EAAoBmB,EACtB,GAAG,CACDyQ,EACAC,EACAK,EACAJ,EACAC,EACAC,EACAC,EACAxW,EACAgE,IAGF,IAAMgC,EAAkB,SAACC,GACvB1B,GAAoB2B,EAAAA,EAAAA,IAAqB5B,EAAkB2B,GAC7D,EAEA,OACEtR,EAAAA,EAAAA,MAACwR,EAAAA,EAAK,CAACvR,UAAWF,EAAQ0R,aAAavR,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ2R,cAAcxR,SAAA,EACpCC,EAAAA,EAAAA,KAACwR,EAAAA,EAAS,CAAAzR,SAAC,sBACXC,EAAAA,EAAAA,KAAA,QAAMF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,0EAK5CF,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,QACH2G,KAAK,QACLpB,SAAU,SAACwC,GACTgH,EAAY,YAAahH,EAAEtC,OAAO1G,OAClCwR,EAAgB,QAClB,EACA1R,MAAM,QACNE,MAAO4hB,EACP3Z,MAAO6H,EAAwB,OAAK,GACpCsC,YAAY,gDAIhB9R,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,WACH2G,KAAK,WACLpB,SAAU,SAACwC,GACTgH,EAAY,WAAYhH,EAAEtC,OAAO1G,OACjCwR,EAAgB,WAClB,EACA1R,MAAM,MACNE,MAAOiiB,EACPha,MAAO6H,EAA2B,UAAK,GACvCsC,YAAY,wCAKjBuP,IACCxhB,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iCAENC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC2R,EAAAA,EAAiB,CAChBjS,MAAM,oBACNiB,GAAG,oBACH2G,KAAK,oBACLsK,QAAS2P,EACTrb,SAAU,SAACwC,GACT,IACMkJ,EADUlJ,EAAEtC,OACMwL,QAExBlC,EAAY,kBAAmBkC,EACjC,EACApS,MAAO,0CAKd+hB,IACC1hB,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,WACH2G,KAAK,WACLpB,SAAU,SAACwC,GACTgH,EAAY,gBAAiBhH,EAAEtC,OAAO1G,MACxC,EACAF,MAAM,WACNE,MAAO8hB,EACP7Z,MAAO6H,EAA2B,UAAK,GACvCsC,YAAY,8BACZrK,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,mBACH2G,KAAK,mBACLpB,SAAU,SAACwC,GACTgH,EAAY,wBAAyBhH,EAAEtC,OAAO1G,MAChD,EACAF,MAAM,WACNE,MAAO+hB,EACP9Z,MAAO6H,EAAmC,kBAAK,GAC/C/H,UAAQ,OAGZzH,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,mBACH2G,KAAK,mBACLpB,SAAU,SAACwC,GACTgH,EAAY,wBAAyBhH,EAAEtC,OAAO1G,MAChD,EACAF,MAAM,WACNE,MAAOgiB,EACP/Z,MAAO6H,EAAmC,kBAAK,GAC/C/H,UAAQ,WAOtB,I,wEClCA,IAAenJ,EAAAA,EAAAA,IAtMA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXmN,KAAM,CACJzK,OAAQ,GAEV+f,MAAO,CACL,uBAAwB,CACtBviB,SAAU,MAGXkP,EAAAA,IACAC,EAAAA,IACF,GA0LL,EAxLoB,SAAHlP,GAAwC,IAAlCM,EAAON,EAAPM,QACfiiB,GAAQtW,EAAAA,EAAAA,KACZ,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOkT,WAAWD,KAAK,IAE3DE,GAAaxW,EAAAA,EAAAA,KACjB,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOkT,WAAWE,sBAAsB,IAEzDC,GAAW1W,EAAAA,EAAAA,KACf,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOkT,WAAWG,QAAQ,IAG9DC,GAAe3W,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOkT,WAAWI,YAAY,IAElEC,GAAe5W,EAAAA,EAAAA,KACnB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOkT,WAAWK,YAAY,IAGlEC,GAAW7W,EAAAA,EAAAA,KACf,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOkT,WAAWO,mBAAmB,IAEtDC,GAAuB/W,EAAAA,EAAAA,KAC3B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOkT,WAAWQ,oBAAoB,IAGvDC,EAAoBJ,EAAaK,eAAeC,MACpD,SAACthB,GAAO,OAAKA,EAAQuhB,cAAgBT,CAAQ,IAG/C,OACEpiB,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ0M,KAAKvM,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAC4S,EAAAA,EAAO,KACR5S,EAAAA,EAAAA,KAAC2iB,GAAAA,EAAK,CAAC7iB,UAAWF,EAAQgiB,MAAO,aAAW,eAAe7X,KAAM,QAAQhK,UACvEF,EAAAA,EAAAA,MAAC+iB,GAAAA,EAAS,CAAA7iB,SAAA,EACRF,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,uBACvBC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,SACrBoQ,SAAS0R,GAAS,EAAIA,EAAQ,SAGK,KAAvCS,EAAqBW,eACkB,KAAtCX,EAAqBY,eACnBrjB,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPF,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,uBACvBC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,SACrBmiB,EAAeA,EAAaiB,MAAQ,UAGzCtjB,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,oBACvBC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,SACrBmiB,GAAekB,EAAAA,GAAAA,IAAUlB,EAAamB,QAAU,aAM3DxjB,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,mBACvBC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,SACrBmiB,EAAeA,EAAaoB,kBAAoB,SAGb,KAAvChB,EAAqBW,eACkB,KAAtCX,EAAqBY,eACnBrjB,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPF,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,qBACvBF,EAAAA,EAAAA,MAACijB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,SAAA,CAAEgiB,EAAW,aAEvCliB,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAAChiB,MAAO,CAAEmN,aAAc,GAAK8U,MAAM,MAAKhjB,SAAC,mBAGnDC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAAChiB,MAAO,CAAEmN,aAAc,GAAK+U,MAAM,QAAOjjB,SACjDqiB,eAOS,IAAvBD,EAAaxa,OAAe4a,IAC3B1iB,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gCACJC,EAAAA,EAAAA,KAAC4S,EAAAA,EAAO,KACR5S,EAAAA,EAAAA,KAAC2iB,GAAAA,EAAK,CACJ7iB,UAAWF,EAAQgiB,MACnB,aAAW,eACX7X,KAAM,QAAQhK,UAEdF,EAAAA,EAAAA,MAAC+iB,GAAAA,EAAS,CAAA7iB,SAAA,EACRF,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,eACvBC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,SACR,KAAbkiB,EAAkBA,EAAW,UAGlCpiB,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,kBACvBC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,UACrBqjB,EAAAA,GAAAA,IAAUjB,EAAaoB,mBAG5B1jB,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,qBACvBC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,UACrBqjB,EAAAA,GAAAA,IAAUb,EAAkBiB,mBAGjC3jB,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAAChiB,MAAO,CAAEmN,aAAc,GAAK8U,MAAM,MAAKhjB,SAAC,+BAGnDC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAAChiB,MAAO,CAAEmN,aAAc,GAAK+U,MAAM,QAAOjjB,SACjDmiB,EACGuB,KAAKC,MACHnB,EAAkBoB,sBAChBzB,EAAaiB,OAEjB,iBAOwB,KAAvCb,EAAqBW,eACkB,KAAtCX,EAAqBY,eACnBrjB,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mCACJC,EAAAA,EAAAA,KAAC4S,EAAAA,EAAO,KACR5S,EAAAA,EAAAA,KAAC2iB,GAAAA,EAAK,CACJ7iB,UAAWF,EAAQgiB,MACnB,aAAW,eACX7X,KAAM,QAAQhK,UAEdF,EAAAA,EAAAA,MAAC+iB,GAAAA,EAAS,CAAA7iB,SAAA,EACRF,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,SACvBC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,SACQ,IAA7BuiB,EAAqBsB,IAClBtB,EAAqBsB,IACrB,UAGR/jB,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,YACvBC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,SACW,IAAhCuiB,EAAqBuB,OAAY,GAAAzb,OAC3Bka,EAAqBuB,OAAM,OAC9B,UAGRhkB,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACC,MAAM,MAAKhjB,SAAC,uBACvBC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAACE,MAAM,QAAOjjB,SACoB,IAAzCuiB,EAAqBwB,gBAAqB,GAAA1b,OACpCka,EAAqBwB,iBACxB,UAGRjkB,EAAAA,EAAAA,MAACgjB,GAAAA,EAAQ,CAAA9iB,SAAA,EACPC,EAAAA,EAAAA,KAAC8iB,GAAAA,EAAS,CAAChiB,MAAO,CAAEmN,aAAc,GAAK8U,MAAM,MAAKhjB,SAAC,gBAGnDF,EAAAA,EAAAA,MAACijB,GAAAA,EAAS,CAAChiB,MAAO,CAAEmN,aAAc,GAAK+U,MAAM,QAAOjjB,SAAA,CACjDuiB,EAAqByB,UAAUA,UAC/BzB,EAAqByB,UAAUC,yBASpD,I,wEC1MMzQ,IAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACX8kB,SAAU,CACRld,SAAU,QACVC,WAAY,SACZkd,SAAU,eAET3V,EAAAA,IACA9D,EAAAA,IACH,IA+CJ,GA5C0B,WACxB,IAAMS,GAAWC,EAAAA,EAAAA,MACXvL,EAAU2T,KAEV4Q,GAAY5Y,EAAAA,EAAAA,KAChB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOwV,WAAWD,SAAS,IAE/DE,GAAsB9Y,EAAAA,EAAAA,KAC1B,SAACC,GAAe,OAAKA,EAAMmD,aAAa2V,YAAY,IAEhDC,GAAmBhZ,EAAAA,EAAAA,KACvB,SAACC,GAAe,OAAKA,EAAMmD,aAAa6V,SAAS,IAGnD,OACExkB,EAAAA,EAAAA,KAACykB,GAAAA,EAAa,CACZthB,MAAK,gBACLuhB,YAAa,SACbC,mBAAoB,CAClB7f,QAAS,cAEX8f,OAAQL,EACRnhB,WAAWpD,EAAAA,EAAAA,KAAC6kB,EAAAA,IAAgB,IAC5BC,UAAWT,EACXU,UAAW,WACT7Z,GAAS8Z,EAAAA,GAAAA,MACX,EACA9hB,QAAS,WACPgI,GAAS+Z,EAAAA,EAAAA,MACX,EACAC,qBACErlB,EAAAA,EAAAA,MAAC6D,EAAAA,SAAc,CAAA3D,SAAA,CACZskB,IAAuBrkB,EAAAA,EAAAA,KAACmlB,EAAAA,EAAc,KACvCtlB,EAAAA,EAAAA,MAACulB,GAAAA,EAAiB,CAAArlB,SAAA,CAAC,mDAEjBC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAGF,UAAWF,EAAQqkB,SAASlkB,SAAEokB,IAAc,WAM3D,E,uBCDA,GA1D0B,SAAH7kB,GAAkBA,EAAZ+lB,aAAgD,IACrEna,GAAWC,EAAAA,EAAAA,MAEXgZ,GAAY5Y,EAAAA,EAAAA,KAChB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOwV,WAAWD,SAAS,IAG/DmB,GAAqB/Z,EAAAA,EAAAA,KACzB,SAACC,GAAe,OAAKA,EAAMmD,aAAa2W,kBAAkB,IAGtDC,GAAiBha,EAAAA,EAAAA,KACrB,SAACC,GAAe,OAAKA,EAAMmD,aAAaa,iBAA4B,SAAC,IAEjEgW,GAAmBja,EAAAA,EAAAA,KACvB,SAACC,GAAe,OAAKA,EAAMmD,aAAa6V,SAAS,IAG7CiB,GAAoBC,EAAAA,EAAAA,UACxB,kBACEC,MAAS,WACPza,GAAS0a,EAAAA,GAAAA,MACX,GAAG,IAAI,GACT,CAAC1a,KAGHS,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdwY,EAGF,OAFAsB,IAEOA,EAAkBI,MAE7B,GAAG,CAACJ,EAAmBtB,IAMvB,OACEtkB,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,CACNylB,IAAoBxlB,EAAAA,EAAAA,KAAC8lB,GAAiB,KACvC9lB,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,YACH2G,KAAK,YACLpB,SAAU,SAACwC,GACTwC,GAAS6a,EAAAA,EAAAA,IAAard,EAAEtC,OAAO1G,OACjC,EACAF,MAAM,YACNE,MAAOykB,EACPxc,MAAO4d,GAAkB,GACzBS,UAAW,gBACXC,YAAaX,GAAqBtlB,EAAAA,EAAAA,KAACmS,EAAAA,IAAO,IAAM,KAChD7D,cAlBe,WACnBpD,GAASgb,EAAAA,EAAAA,MACX,EAiBMze,UAAQ,MAIhB,ECzBM0e,GAAkB,WACtB,IAAMjb,GAAWC,EAAAA,EAAAA,MACXib,GAAa7a,EAAAA,EAAAA,KACjB,SAACC,GAAe,OAAKA,EAAMmD,aAAaC,OAAOwV,WAAWgC,UAAU,IAGhEC,GAAkB9a,EAAAA,EAAAA,KACtB,SAACC,GAAe,OAAKA,EAAMmD,aAAaa,iBAAiB,cAAc,IAGzE,OACExP,EAAAA,EAAAA,KAAC6R,EAAAA,EAAe,CACdlR,GAAG,cACH2G,KAAK,cACLpB,SAAU,SAACwC,GACTwC,GAASob,EAAAA,EAAAA,IAAc5d,EAAEtC,OAAO1G,OAClC,EACAF,MAAM,OACNE,MAAO0mB,EACP3e,UAAQ,EACRE,MAAO0e,GAAmB,IAGhC,EAgIA,IAAe/nB,EAAAA,EAAAA,IArKA,SAACC,GAAY,OAC1BC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXonB,YAAa,CACX5f,WAAY,GACZ5H,WAAY,UACZgH,OAAQ,oBACRnH,QAAS,EACTuD,UAAW,KAEVsM,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACF,GAyJL,EAzHuB,SAAHlP,GAA0D,IAApDM,EAAON,EAAPM,QAASylB,EAAY/lB,EAAZ+lB,aAC3Bna,GAAWC,EAAAA,EAAAA,MAEXqb,GAAuBjb,EAAAA,EAAAA,KAC3B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOwV,WAAWoC,oBAAoB,IAEvDC,GAAsBlb,EAAAA,EAAAA,KAC1B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOwV,WAAWqC,mBAAmB,IAEtDC,GAAiBnb,EAAAA,EAAAA,KACrB,SAACC,GAAe,OAAKA,EAAMmD,aAAa+X,cAAc,IAElDC,GAAWpb,EAAAA,EAAAA,IAAYqb,GAAAA,IAGvBlX,GAAcC,EAAAA,EAAAA,cAClB,SAACC,EAAelQ,GACdwL,GACE2E,EAAAA,EAAAA,IAAe,CAAEC,SAAU,aAAcF,MAAOA,EAAOlQ,MAAOA,IAElE,GACA,CAACwL,IAYH,OARAS,EAAAA,EAAAA,YAAU,WACR,IAAMkb,EACHxB,IAAiByB,GAAAA,GAAQC,SAAWL,EAAe3hB,OAAS,GAC5DsgB,IAAiByB,GAAAA,GAAQC,SAAmC,KAAxBN,EAEvCvb,GAAS4F,EAAAA,EAAAA,IAAY,CAAEhB,SAAU,aAAciB,MAAO8V,IACxD,GAAG,CAACH,EAAgBxb,EAAUub,EAAqBpB,KAGjDrlB,EAAAA,EAAAA,KAAC0U,EAAAA,SAAQ,CAAA3U,UACPF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAAC7E,WAAS,EAAAsB,SAAA,EACbC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACgC,GAAI,CAAEzG,MAAO,sBAAuBiB,UAC7CC,EAAAA,EAAAA,KAACqR,EAAAA,EAAK,CAACvR,UAAWF,EAAQ0R,aAAc/L,GAAI,CAAEgB,UAAW,KAAMxG,UAC7DF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAAC7E,WAAS,EAAAsB,SAAA,EACbF,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,SAAA,EAChBF,EAAAA,EAAAA,MAAA,OAAKC,UAAWF,EAAQ2R,cAAcxR,SAAA,EACpCC,EAAAA,EAAAA,KAACwR,EAAAA,EAAS,CAAAzR,SAAC,UACXC,EAAAA,EAAAA,KAAA,QAAMF,UAAWF,EAAQ6R,gBAAgB1R,SAAC,oDAI5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQkT,aAAa/S,UACnCC,EAAAA,EAAAA,KAACmmB,GAAe,UAGpBnmB,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAACgnB,GAAiB,CAAC3B,aAAcA,MAElCA,IAAiByB,GAAAA,GAAQC,SACxB/mB,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAACwS,EAAAA,EAAa,CACZ7R,GAAG,gBACH2G,KAAK,gBACLpB,SAAU,SAACwC,GACTgH,EACE,uBACAhH,EAAEtC,OAAO1G,MAEb,EACAF,MAAM,gBACNE,MAAO8mB,EACP9T,QAASgU,EACTlf,SAAUkf,EAAe3hB,OAAS,OAItC/E,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQkT,aAAa/S,UACjDC,EAAAA,EAAAA,KAACwS,EAAAA,EAAa,CACZ7R,GAAG,eACH2G,KAAK,eACLpB,SAAU,SAACwC,GACTwC,GACE+b,EAAAA,EAAAA,IAAe,CACbC,YAAaxe,EAAEtC,OAAO1G,MACtBinB,SAAUA,IAGhB,EACAnnB,MAAOsD,IACLqkB,GAAAA,GAAsB,GAAD/e,OAClBid,EAAY,yBACf,gBAEF3lB,MAAO+mB,EACP/T,QAAS5P,IACPqkB,GAAAA,GAAsB,GAAD/e,OAClBid,EAAY,0BACf,QAKPA,IAAiByB,GAAAA,GAAQC,SACxB/mB,EAAAA,EAAAA,KAAConB,GAAAA,EAAU,IAEXtkB,IACEqkB,GAAAA,GAAsB,GAAD/e,OAClBid,EAAY,oBACf,cAMVrlB,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAAAxD,UACRC,EAAAA,EAAAA,KAAA,OAAKF,UAAWF,EAAQ2mB,YAAYxmB,UAClCC,EAAAA,EAAAA,KAACqnB,GAAW,YAMxB,IC1JA,GA/BwB,WACtB,IAAMV,GAAWpb,EAAAA,EAAAA,IAAYqb,GAAAA,IAC7B9e,GAAoCC,EAAAA,EAAAA,UAAyB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3Dwf,EAAUtf,EAAA,GAAEuf,EAAavf,EAAA,GAsBhC,OApBA2D,EAAAA,EAAAA,YAAU,WACR,IAAI6b,EAAmBV,GAAAA,GAAQC,QAE3BJ,GAAgC,IAApBA,EAAS5hB,QACGiM,OAAOC,KAAKwW,GAAAA,IAEpBhI,SAAQ,SAACte,GACrBwlB,EAASe,SAASvmB,KACpBqmB,EAAmB1kB,IACjB2kB,GAAAA,GACAtmB,EACA2lB,GAAAA,GAAQC,SAGd,IAGFQ,EAAcC,EAChB,GAAG,CAACb,IAEe,OAAfW,EACK,MAGFtnB,EAAAA,EAAAA,KAAC2nB,GAAc,CAACtC,aAAciC,GACvC,ECrCaM,GAAgB,CAC3B,aACA,aACA,YACA,WACA,mBACA,WACA,c,YCqCF,GApC2B,WACzB,IAAM1c,GAAWC,EAAAA,EAAAA,MAEX0c,GAAatc,EAAAA,EAAAA,KACjB,SAACC,GAAe,OAAKA,EAAMmD,aAAamZ,YAAY,IAGhDC,GAAaxc,EAAAA,EAAAA,KACjB,SAACC,GAAe,OAAKA,EAAMmD,aAAaoZ,UAAU,IAG9CvB,GAAuBjb,EAAAA,EAAAA,KAC3B,SAACC,GAAe,OACdA,EAAMmD,aAAaC,OAAOwV,WAAWoC,oBAAoB,IAGvDwB,GACHH,GACwB,KAAzBrB,GACAoB,GAAcK,OAAM,SAAC5H,GAAC,OAAK0H,EAAWL,SAASrH,EAAE,IAEnD,OACErgB,EAAAA,EAAAA,KAACU,EAAAA,IAAM,CACLC,GAAI,uBACJmE,QAAQ,aACRlD,MAAM,UACNhB,QAAS,WACPsK,GAASgd,EAAAA,GAAAA,KACX,EACA1gB,UAAWwgB,EAEXxoB,MAAO,UAAS,0BAGtB,E,wBCNA,GA5B6B,WAC3B,IAAM0L,GAAWC,EAAAA,EAAAA,MACXgd,GAAWC,EAAAA,GAAAA,MAEXC,GAAqB9c,EAAAA,EAAAA,KACzB,SAACC,GAAe,OAAKA,EAAMmD,aAAa0Z,kBAAkB,IAEtDC,GAAiB/c,EAAAA,EAAAA,KACrB,SAACC,GAAe,OAAKA,EAAMmD,aAAa2Z,cAAc,IAGxD,OACEtoB,EAAAA,EAAAA,KAAC0U,EAAAA,SAAQ,CAAA3U,SACNsoB,IACCroB,EAAAA,EAAAA,KAACuoB,GAAAA,QAAiB,CAChB9lB,kBAAmB6lB,EACnB5lB,KAAM2lB,EACN1lB,WAAY,WACVuI,GAASsd,EAAAA,EAAAA,OACTL,EAAS,WACX,EACAvlB,OAAO,YAKjB,E,YCQM2Q,IAAYC,EAAAA,EAAAA,IAAW,SAACjV,GAAY,OACxCC,EAAAA,EAAAA,IAAYW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CACXspB,QAAS,CACP1iB,OAAQ,sBAEPwI,EAAAA,IACAC,EAAAA,IACAka,EAAAA,IACH,IAoJJ,GAjJkB,WAChB,IAAMxd,GAAWC,EAAAA,EAAAA,MACXgd,GAAWC,EAAAA,GAAAA,MACXxoB,EAAU2T,KAEVoT,GAAWpb,EAAAA,EAAAA,IAAYqb,GAAAA,IAGvBiB,GAAatc,EAAAA,EAAAA,KACjB,SAACC,GAAe,OAAKA,EAAMmD,aAAamZ,YAAY,IAEtDhgB,GAAoCC,EAAAA,EAAAA,UAAyB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3Dwf,EAAUtf,EAAA,GAAEuf,EAAavf,EAAA,IAEhC2D,EAAAA,EAAAA,YAAU,WACR,IAAI6b,EAAmBV,GAAAA,GAAQC,QAE3BJ,GAAgC,IAApBA,EAAS5hB,QACGiM,OAAOC,KAAKwW,GAAAA,IAEpBhI,SAAQ,SAACte,GACrBwlB,EAASe,SAASvmB,KACpBqmB,EAAmB1kB,IACjB2kB,GAAAA,GACAtmB,EACA2lB,GAAAA,GAAQC,SAGd,IAGFQ,EAAcC,EAChB,GAAG,CAACb,IAEJ,IAAMgC,EAAe,CACnBnpB,MAAO,SACPoH,KAAM,QACNohB,SAAS,EACTY,OAAQ,WACN1d,GAASsd,EAAAA,EAAAA,OACTL,EAAS,WACX,GAGIU,EAA8B,CAClCC,iBAAiB9oB,EAAAA,EAAAA,KAAC+oB,GAAkB,GAAM,kBA+CxCC,EA5CkC,CACpC,CACExpB,MAAO,QACPspB,iBAAiB9oB,EAAAA,EAAAA,KAACipB,GAAe,IACjCC,QAAS,CAACP,EAAcE,IAE1B,CACErpB,MAAO,YACP2pB,cAAc,EACdL,iBAAiB9oB,EAAAA,EAAAA,KAACopB,EAAS,IAC3BF,QAAS,CAACP,EAAcE,IAE1B,CACErpB,MAAO,SACP2pB,cAAc,EACdL,iBAAiB9oB,EAAAA,EAAAA,KAACqpB,GAAM,IACxBH,QAAS,CAACP,EAAcE,IAE1B,CACErpB,MAAO,gBACP2pB,cAAc,EACdL,iBAAiB9oB,EAAAA,EAAAA,KAACspB,GAAQ,IAC1BJ,QAAS,CAACP,EAAcE,IAE1B,CACErpB,MAAO,oBACP2pB,cAAc,EACdL,iBAAiB9oB,EAAAA,EAAAA,KAACupB,EAAgB,IAClCL,QAAS,CAACP,EAAcE,IAE1B,CACErpB,MAAO,WACP2pB,cAAc,EACdL,iBAAiB9oB,EAAAA,EAAAA,KAACwpB,EAAQ,IAC1BN,QAAS,CAACP,EAAcE,IAE1B,CACErpB,MAAO,aACP2pB,cAAc,EACdL,iBAAiB9oB,EAAAA,EAAAA,KAACypB,GAAU,IAC5BP,QAAS,CAACP,EAAcE,KAM5B,OACEhpB,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAAC0pB,GAAoB,KACrB1pB,EAAAA,EAAAA,KAAC2pB,GAAAA,EAAiB,CAChBnqB,OACEQ,EAAAA,EAAAA,KAAC4pB,EAAAA,IAAQ,CACPhpB,QAAS,WACPsK,GAASsd,EAAAA,EAAAA,OACTL,EAAS,WACX,EACA3oB,MAAO,eAKbK,EAAAA,EAAAA,MAACgqB,GAAAA,EAAU,CAAA9pB,SAAA,CACR8nB,IACC7nB,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGzD,UAChBC,EAAAA,EAAAA,KAACmlB,EAAAA,EAAc,OAGnBnlB,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1D,UAAWF,EAAQ6oB,QAAQ1oB,UAC5CC,EAAAA,EAAAA,KAAC8pB,EAAAA,EAAa,CAACC,YAAaf,MAE7B1B,IAAeR,GAAAA,GAAQkD,MACtBhqB,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAI1C,MAAO,CAAEqB,UAAW,IAAKpC,UAC1CC,EAAAA,EAAAA,KAACiqB,EAAAA,IAAO,CACN9mB,MAAO,4BACP+mB,eAAelqB,EAAAA,EAAAA,KAACmqB,EAAAA,IAAW,IAC3BC,MACEvqB,EAAAA,EAAAA,MAAC6U,EAAAA,SAAQ,CAAA3U,SAAA,EACPC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0BAAyB,eAAWC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,QAAO,gJAGvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,SAAQ,KACrBC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAAqB,eAAWC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,QAAO,2FAG7CC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,SAAQ,oEAU7B,C,4FC7LMsqB,EAAc,SAAH/qB,GAMV,IALLyB,EAAIzB,EAAJyB,KACAiX,EAAW1Y,EAAX0Y,YAKA,OACEnY,EAAAA,EAAAA,MAAC4G,EAAAA,EAAG,CACFlB,GAAI,CACF7G,QAAS,OACT,cAAe,CACbO,YAAa,OACbD,OAAQ,OACRF,MAAO,OACP0G,aAAc,SAEhBzF,SAAA,CAEDgB,EAAM,KACPf,EAAAA,EAAAA,KAAA,OAAKc,MAAO,CAAEzB,SAAU,OAAQirB,UAAW,SAAU1oB,MAAO,WAAY7B,SACrEiY,MAIT,EA+FA,IA9FmB,WACjB,IAAMuS,GAASC,EAAAA,EAAAA,MACTC,EAAkBF,EAAOnE,YAAc,GACvCsE,EAAuBH,EAAOI,iBAAmB,GACjDxG,GAAY5Y,EAAAA,EAAAA,KAAY,SAACC,GAE7B,MAA6B,KAAzBkf,EACKA,EAE8C,KAAnDlf,EAAMmD,aAAaC,OAAOwV,WAAWD,UAChC3Y,EAAMmD,aAAaC,OAAOwV,WAAWD,UALvB,aAQzB,IAEMiC,GAAa7a,EAAAA,EAAAA,KAAY,SAACC,GAE9B,MAAwB,KAApBif,EACKA,EAG+C,KAApDjf,EAAMmD,aAAaC,OAAOwV,WAAWgC,WAChC5a,EAAMmD,aAAaC,OAAOwV,WAAWgC,WANtB,eAS1B,IAEA,OACEpmB,EAAAA,EAAAA,KAACyG,EAAAA,EAAG,CACFlB,GAAI,CACF2I,KAAM,EACNnI,OAAQ,oBACR6kB,aAAc,MACdlsB,QAAS,OACTC,SAAU,SACVC,QAAS,OACTuD,UAAW,CACTqB,GAAI,QAENzD,UAEFF,EAAAA,EAAAA,MAAC4G,EAAAA,EAAG,CACFlB,GAAI,CACF7G,QAAS,OACTC,SAAU,UACVoB,SAAA,EAEFC,EAAAA,EAAAA,KAACqqB,EAAW,CACVtpB,MAAMf,EAAAA,EAAAA,KAAC6qB,EAAAA,IAAe,IACtB7S,YAAW,8BAEbnY,EAAAA,EAAAA,MAAC4G,EAAAA,EAAG,CAAClB,GAAI,CAAElG,SAAU,OAAQmG,aAAc,QAASzF,SAAA,CAAC,oDAEnDC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,sCAC4BA,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBAAuB,0EAE5DC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,OACEiB,MAAO,CAAEzB,SAAU,OAAQirB,UAAW,SAAU1oB,MAAO,WAAY7B,SAAA,CACpE,SACQokB,GACPnkB,EAAAA,EAAAA,KAAA,SAAM,SACCmkB,EAAU,QACjBnkB,EAAAA,EAAAA,KAAA,SAAM,SACCmkB,EAAU,yBACjBnkB,EAAAA,EAAAA,KAAA,SAAM,KACHomB,EAAW,OAAKjC,EAAU,yBAC7BnkB,EAAAA,EAAAA,KAAA,SAAM,KACHmkB,EAAU,4BAEfnkB,EAAAA,EAAAA,KAAA,SAAM,YACEA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAA6B,IAAC,KAC1CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBAA0B,QAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBAA+B,kDAEnCC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,4BACoB,KAC1BA,EAAAA,EAAAA,KAAA,KACE8qB,KAAK,8FACL1kB,OAAO,SACP2kB,IAAI,WAAUhrB,SACf,kBAEG,WAMd,C,8ICzHa8W,EAAkB,WAC7B,OACEhX,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAAC7E,WAAS,EAACusB,UAAW,EAAEjrB,SAAA,EAC3BC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAAvD,UACHC,EAAAA,EAAAA,KAACirB,EAAAA,IAAQ,CAACnsB,MAAO,OAAQE,OAAQ,YAEnCgB,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAAAxD,SAAC,cAGjB,EAEa+W,EAAkB,WAC7B,OACEjX,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAAC7E,WAAS,EAACusB,UAAW,EAAEjrB,SAAA,EAC3BC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAAvD,UACHC,EAAAA,EAAAA,KAACkrB,EAAAA,IAAQ,CAACpsB,MAAO,OAAQE,OAAQ,YAEnCgB,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAAAxD,SAAC,8BAGjB,EAEa6W,EAAqB,WAChC,OACE/W,EAAAA,EAAAA,MAACyD,EAAAA,GAAI,CAAC7E,WAAS,EAACusB,UAAW,EAAEjrB,SAAA,EAC3BC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAAAvD,UACHC,EAAAA,EAAAA,KAACmrB,EAAAA,IAAS,CAACrsB,MAAO,OAAQE,OAAQ,YAEpCgB,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,MAAI,EAAAxD,SAAC,eAGjB,C,mFCfA,KAAezB,EAAAA,EAAAA,IA5BA,SAACC,GAAY,IAAA6sB,EAAA,OAC1B5sB,EAAAA,EAAAA,GAAa,CACX6sB,WAAY,CACVzpB,OAAoB,QAAbwpB,EAAA7sB,EAAM+sB,eAAO,IAAAF,OAAA,EAAbA,EAAezjB,MAAM4jB,OAAQ,YAErC,GAuBL,EAfmB,SAAHjsB,GAIS,IAHvBM,EAAON,EAAPM,QACAsK,EAAY5K,EAAZ4K,aAAYshB,EAAAlsB,EACZmsB,UAAAA,OAAS,IAAAD,GAAOA,EAEhB,OACE3rB,EAAAA,EAAAA,MAAC6D,EAAAA,SAAc,CAAA3D,SAAA,CACZ0rB,IAAazrB,EAAAA,EAAAA,KAAA,UACdA,EAAAA,EAAAA,KAAC2U,EAAAA,EAAU,CAAC/K,UAAU,IAAI9E,QAAQ,QAAQhF,UAAWF,EAAQyrB,WAAWtrB,SACrEmK,MAIT,G,4BC/BIwhB,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAe9E,UAAuB,EAAI+E,EAAYE,KAAK,OAAQ,CACpFC,EAAG,wCACD,OACJL,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAe9E,UAAuB,EAAI+E,EAAYE,KAAK,OAAQ,CACpFC,EAAG,iQACD,cACJL,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAe9E,UAAuB,EAAI+E,EAAYE,KAAK,OAAQ,CACpFC,EAAG,oLACD,UACJL,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAe9E,UAAuB,EAAI+E,EAAYE,KAAK,OAAQ,CACpFC,EAAG,ocACD,UACJL,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAe9E,UAAuB,EAAI+E,EAAYE,KAAK,OAAQ,CACpFC,EAAG,kFACD,UACJL,EAAQ,EAAUG,C,0ICVZG,EAAY,CAAC,WAAY,WAAY,YAAa,YAAa,WAAY,QAAS,cAAe,OAAQ,YAAa,WA2BxHC,GAAc7hB,EAAAA,EAAAA,IAAO,MAAO,CAChChD,KAAM,aACN8kB,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOjgB,KAAMkgB,EAAWC,UAAYF,EAAOE,SAAUF,EAAOC,EAAW1nB,SAAU0nB,EAAWE,OAASH,EAAOG,MAAkC,aAA3BF,EAAWG,aAA8BJ,EAAOK,SAAUJ,EAAWK,UAAYN,EAAOM,SAAUL,EAAWzsB,UAAYwsB,EAAOO,aAAcN,EAAWzsB,UAAuC,aAA3BysB,EAAWG,aAA8BJ,EAAOQ,qBAA+C,UAAzBP,EAAWxQ,WAAoD,aAA3BwQ,EAAWG,aAA8BJ,EAAOS,eAAyC,SAAzBR,EAAWxQ,WAAmD,aAA3BwQ,EAAWG,aAA8BJ,EAAOU,cAC/hB,GARkB3iB,EASjB,SAAAhL,GAAA,IACDf,EAAKe,EAALf,MACAiuB,EAAUltB,EAAVktB,WAAU,OACNU,EAAAA,EAAAA,GAAS,CACbrrB,OAAQ,EAERsrB,WAAY,EACZC,YAAa,EACbC,YAAa,QACbC,aAAc/uB,EAAMgvB,MAAQhvB,GAAO+sB,QAAQkC,QAC3CC,kBAAmB,QAClBjB,EAAWC,UAAY,CACxBpsB,SAAU,WACVqtB,OAAQ,EACRC,KAAM,EACN7uB,MAAO,QACN0tB,EAAWE,OAAS,CACrBY,YAAa/uB,EAAMgvB,KAAO,QAAHnlB,OAAW7J,EAAMgvB,KAAKjC,QAAQsC,eAAc,aAAaC,EAAAA,EAAAA,IAAMtvB,EAAM+sB,QAAQkC,QAAS,MACrF,UAAvBhB,EAAW1nB,SAAuB,CACnC6B,WAAY,IACY,WAAvB6lB,EAAW1nB,SAAmD,eAA3B0nB,EAAWG,aAAgC,CAC/EhmB,WAAYpI,EAAMwZ,QAAQ,GAC1B9Y,YAAaV,EAAMwZ,QAAQ,IACH,WAAvByU,EAAW1nB,SAAmD,aAA3B0nB,EAAWG,aAA8B,CAC7ExqB,UAAW5D,EAAMwZ,QAAQ,GACzBvS,aAAcjH,EAAMwZ,QAAQ,IACA,aAA3ByU,EAAWG,aAA8B,CAC1C3tB,OAAQ,OACRyuB,kBAAmB,EACnBK,iBAAkB,QACjBtB,EAAWK,UAAY,CACxBkB,UAAW,UACX/uB,OAAQ,QACR,IAAE,SAAAgvB,GAAA,IACFxB,EAAUwB,EAAVxB,WAAU,OACNU,EAAAA,EAAAA,GAAS,CAAC,EAAGV,EAAWzsB,UAAY,CACxCrB,QAAS,OACTsI,WAAY,SACZgV,UAAW,SACXjW,OAAQ,EACR,sBAAuB,CACrB2E,QAAS,KACTqjB,UAAW,WAEb,IAAE,SAAAE,GAAA,IACF1vB,EAAK0vB,EAAL1vB,MACAiuB,EAAUyB,EAAVzB,WAAU,OACNU,EAAAA,EAAAA,GAAS,CAAC,EAAGV,EAAWzsB,UAAuC,aAA3BysB,EAAWG,aAA8B,CACjF,sBAAuB,CACrB7tB,MAAO,OACP0H,UAAW,cAAF4B,QAAiB7J,EAAMgvB,MAAQhvB,GAAO+sB,QAAQkC,WAEzD,IAAE,SAAAU,GAAA,IACF3vB,EAAK2vB,EAAL3vB,MACAiuB,EAAU0B,EAAV1B,WAAU,OACNU,EAAAA,EAAAA,GAAS,CAAC,EAAGV,EAAWzsB,UAAuC,aAA3BysB,EAAWG,aAA8B,CACjFwB,cAAe,SACf,sBAAuB,CACrBnvB,OAAQ,OACRovB,WAAY,cAAFhmB,QAAiB7J,EAAMgvB,MAAQhvB,GAAO+sB,QAAQkC,WAE1D,IAAE,SAAAa,GAAA,IACF7B,EAAU6B,EAAV7B,WAAU,OACNU,EAAAA,EAAAA,GAAS,CAAC,EAA4B,UAAzBV,EAAWxQ,WAAoD,aAA3BwQ,EAAWG,aAA8B,CAC9F,YAAa,CACX7tB,MAAO,OAET,WAAY,CACVA,MAAO,QAEiB,SAAzB0tB,EAAWxQ,WAAmD,aAA3BwQ,EAAWG,aAA8B,CAC7E,YAAa,CACX7tB,MAAO,OAET,WAAY,CACVA,MAAO,QAET,IACIwvB,GAAiBhkB,EAAAA,EAAAA,IAAO,OAAQ,CACpChD,KAAM,aACN8kB,KAAM,UACNC,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOgC,QAAoC,aAA3B/B,EAAWG,aAA8BJ,EAAOiC,gBAC1E,GARqBlkB,EASpB,SAAAmkB,GAAA,IACDlwB,EAAKkwB,EAALlwB,MACAiuB,EAAUiC,EAAVjC,WAAU,OACNU,EAAAA,EAAAA,GAAS,CACbxuB,QAAS,eACT2I,YAAa,QAAFe,OAAU7J,EAAMwZ,QAAQ,GAAE,WACrCrR,aAAc,QAAF0B,OAAU7J,EAAMwZ,QAAQ,GAAE,YACV,aAA3ByU,EAAWG,aAA8B,CAC1C9e,WAAY,QAAFzF,OAAU7J,EAAMwZ,QAAQ,GAAE,WACpCpN,cAAe,QAAFvC,OAAU7J,EAAMwZ,QAAQ,GAAE,YACvC,IACInF,EAAuBlP,EAAAA,YAAiB,SAAiBgrB,EAASC,GACtE,IAAMrC,GAAQsC,EAAAA,EAAAA,GAAc,CAC1BtC,MAAOoC,EACPpnB,KAAM,eAERunB,EAWMvC,EAVFG,SAAAA,OAAQ,IAAAoC,GAAQA,EAChB9uB,EASEusB,EATFvsB,SACAD,EAQEwsB,EARFxsB,UAASgvB,EAQPxC,EAPF1iB,UAAAA,OAAS,IAAAklB,EAAG/uB,EAAW,MAAQ,KAAI+uB,EAAAC,EAOjCzC,EANFO,SAAAA,OAAQ,IAAAkC,GAAQA,EAAAC,EAMd1C,EALFI,MAAAA,OAAK,IAAAsC,GAAQA,EAAAC,EAKX3C,EAJFK,YAAAA,OAAW,IAAAsC,EAAG,aAAYA,EAAAC,EAIxB5C,EAHF6C,KAAAA,OAAI,IAAAD,EAAiB,OAAdtlB,EAAqB,iBAAcxF,EAAS8qB,EAAAE,EAGjD9C,EAFFtQ,UAAAA,OAAS,IAAAoT,EAAG,SAAQA,EAAAC,EAElB/C,EADFxnB,QAAAA,OAAO,IAAAuqB,EAAG,YAAWA,EAEvBC,GAAQC,EAAAA,EAAAA,GAA8BjD,EAAOJ,GACzCM,GAAaU,EAAAA,EAAAA,GAAS,CAAC,EAAGZ,EAAO,CACrCG,SAAAA,EACA7iB,UAAAA,EACAijB,SAAAA,EACAH,MAAAA,EACAC,YAAAA,EACAwC,KAAAA,EACAnT,UAAAA,EACAlX,QAAAA,IAEIlF,EAxJkB,SAAA4sB,GACxB,IACEC,EAQED,EARFC,SACA1sB,EAOEysB,EAPFzsB,SACAH,EAME4sB,EANF5sB,QACAitB,EAKEL,EALFK,SACAH,EAIEF,EAJFE,MACAC,EAGEH,EAHFG,YACA3Q,EAEEwQ,EAFFxQ,UAGIwT,EAAQ,CACZljB,KAAM,CAAC,OAAQmgB,GAAY,WAFzBD,EADF1nB,QAGgD4nB,GAAS,QAAyB,aAAhBC,GAA8B,WAAYE,GAAY,WAAY9sB,GAAY,eAAgBA,GAA4B,aAAhB4sB,GAA8B,uBAAsC,UAAd3Q,GAAyC,aAAhB2Q,GAA8B,iBAAgC,SAAd3Q,GAAwC,aAAhB2Q,GAA8B,iBACjW4B,QAAS,CAAC,UAA2B,aAAhB5B,GAA8B,oBAErD,OAAO8C,EAAAA,EAAAA,GAAeD,EAAOE,EAAAA,EAAwB9vB,EACvD,CAwIkB+vB,CAAkBnD,GAClC,OAAoBxsB,EAAAA,EAAAA,KAAKmsB,GAAae,EAAAA,EAAAA,GAAS,CAC7C0C,GAAIhmB,EACJ9J,WAAW+vB,EAAAA,EAAAA,GAAKjwB,EAAQ0M,KAAMxM,GAC9BqvB,KAAMA,EACNR,IAAKA,EACLnC,WAAYA,GACX8C,EAAO,CACRvvB,SAAUA,GAAwBC,EAAAA,EAAAA,KAAKsuB,EAAgB,CACrDxuB,UAAWF,EAAQ2uB,QACnB/B,WAAYA,EACZzsB,SAAUA,IACP,OAET,IA+DA,K,0MC/OO,SAAS+vB,EAA8B1D,GAC5C,OAAO2D,EAAAA,EAAAA,GAAqB,oBAAqB3D,EACnD,CACA,ICHI4D,EDIJ,GAD8BC,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,OAAQ,SAAU,WAAY,WAAY,gBAAiB,cAAe,uBAAwB,cAAe,c,sBCFtL/D,EAAY,CAAC,WAAY,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,WAkC5GgE,GAAqB5lB,EAAAA,EAAAA,IAAO,MAAO,CACvChD,KAAM,oBACN8kB,KAAM,OACNC,kBAvBwB,SAACC,EAAOC,GAChC,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOjgB,KAAMigB,EAAO,WAADnkB,QAAY+nB,EAAAA,EAAAA,GAAW3D,EAAWnsB,aAAkD,IAApCmsB,EAAW4D,sBAAiC7D,EAAO6D,qBAAsB7D,EAAOC,EAAW1nB,SACxK,GAe2BwF,EAIxB,SAAAhL,GAAA,IACDf,EAAKe,EAALf,MACAiuB,EAAUltB,EAAVktB,WAAU,OACNU,EAAAA,EAAAA,GAAS,CACbxuB,QAAS,OACTM,OAAQ,SAERsD,UAAW,MACXR,WAAY,SACZkF,WAAY,SACZpF,OAAQrD,EAAMgvB,MAAQhvB,GAAO+sB,QAAQ1C,OAAOyH,QACpB,WAAvB7D,EAAW1nB,UAAoB+a,EAAAA,EAAAA,GAAA,QAAAzX,OAE1BkoB,EAAsBC,cAAa,WAAAnoB,OAAUkoB,EAAsBE,YAAW,KAAM,CACxFruB,UAAW,KAEY,UAAxBqqB,EAAWnsB,UAAwB,CAEpCpB,YAAa,GACY,QAAxButB,EAAWnsB,UAAsB,CAElCsG,WAAY,IACyB,IAApC6lB,EAAW4D,sBAAiC,CAE7CK,cAAe,QACf,IAwGF,EAvGoC/sB,EAAAA,YAAiB,SAAwBgrB,EAASC,GACpF,IAAMrC,GAAQsC,EAAAA,EAAAA,GAAc,CAC1BtC,MAAOoC,EACPpnB,KAAM,sBAGJvH,EAOEusB,EAPFvsB,SACAD,EAMEwsB,EANFxsB,UAASgvB,EAMPxC,EALF1iB,UAAAA,OAAS,IAAAklB,EAAG,MAAKA,EAAA4B,EAKfpE,EAJF8D,qBAAAA,OAAoB,IAAAM,GAAQA,EAAAC,EAI1BrE,EAHFsE,kBAAAA,OAAiB,IAAAD,GAAQA,EACzBtwB,EAEEisB,EAFFjsB,SACSwwB,EACPvE,EADFxnB,QAEFwqB,GAAQC,EAAAA,EAAAA,GAA8BjD,EAAOJ,GACzC4E,GAAiBC,EAAAA,EAAAA,MAAoB,CAAC,EACxCjsB,EAAU+rB,EACVA,GAAeC,EAAehsB,QAO9BgsB,IAAmBhsB,IACrBA,EAAUgsB,EAAehsB,SAE3B,IAAM0nB,GAAaU,EAAAA,EAAAA,GAAS,CAAC,EAAGZ,EAAO,CACrCkE,YAAaM,EAAeN,YAC5BzmB,KAAM+mB,EAAe/mB,KACrBqmB,qBAAAA,EACA/vB,SAAAA,EACAyE,QAAAA,IAEIlF,EA9EkB,SAAA4sB,GACxB,IACE5sB,EAME4sB,EANF5sB,QACAwwB,EAKE5D,EALF4D,qBACAI,EAIEhE,EAJFgE,YACAnwB,EAGEmsB,EAHFnsB,SACA0J,EAEEyiB,EAFFziB,KACAjF,EACE0nB,EADF1nB,QAEI0qB,EAAQ,CACZljB,KAAM,CAAC,OAAQ8jB,GAAwB,uBAAwB/vB,GAAY,WAAJ+H,QAAe+nB,EAAAA,EAAAA,GAAW9vB,IAAayE,EAAS0rB,GAAe,cAAezmB,GAAQ,OAAJ3B,QAAW+nB,EAAAA,EAAAA,GAAWpmB,MAEjL,OAAO0lB,EAAAA,EAAAA,GAAeD,EAAOM,EAA+BlwB,EAC9D,CAiEkB+vB,CAAkBnD,GAClC,OAAoBxsB,EAAAA,EAAAA,KAAKgxB,EAAAA,EAAmBC,SAAU,CACpDvxB,MAAO,KACPK,UAAuBC,EAAAA,EAAAA,KAAKkwB,GAAoBhD,EAAAA,EAAAA,GAAS,CACvD0C,GAAIhmB,EACJ4iB,WAAYA,EACZ1sB,WAAW+vB,EAAAA,EAAAA,GAAKjwB,EAAQ0M,KAAMxM,GAC9B6uB,IAAKA,GACJW,EAAO,CACRvvB,SAA8B,kBAAbA,GAA0B6wB,GAGzB/wB,EAAAA,EAAAA,MAAM6D,EAAAA,SAAgB,CACtC3D,SAAU,CAAc,UAAbM,EAA0G2vB,IAAUA,GAAqBhwB,EAAAA,EAAAA,KAAK,OAAQ,CAC/JF,UAAW,cACXC,SAAU,YACN,KAAMA,MAP8DC,EAAAA,EAAAA,KAAK2U,EAAAA,EAAY,CAC3F/S,MAAO,iBACP7B,SAAUA,QASlB,G","sources":["screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/FormHr.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/TooltipWrapper/TooltipWrapper.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPActiveDirectory.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPOpenID.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPBuiltIn.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Common/SectionH1.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/VaultKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AzureKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GCPKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GemaltoKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AWSKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NamespaceSelector.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/common.ts","screens/Console/Tenants/AddTenant/CreateTenantButton.tsx","screens/Console/Tenants/AddTenant/NewTenantCredentials.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/Console/Tenants/HelpBox/TLSHelpBox.tsx","screens/Console/Tenants/LogoComponents.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/Casino.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/Divider/Divider.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button, CopyIcon } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <TooltipWrapper tooltip={\"Copy\"}>\n                <CopyToClipboard text={value}>\n                  <Button\n                    id={\"copy-clipboard\"}\n                    aria-label=\"copy\"\n                    onClick={() => {}}\n                    onMouseDown={() => {}}\n                    style={{\n                      width: \"28px\",\n                      height: \"28px\",\n                      padding: \"0px\",\n                    }}\n                    icon={<CopyIcon />}\n                  />\n                </CopyToClipboard>\n              </TooltipWrapper>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  Button,\n  DownloadIcon,\n  ServiceAccountCredentialsIcon,\n  WarnIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  const downloadImport = () => {\n    let consoleExtras = {};\n\n    if (consoleCreds) {\n      if (!Array.isArray(consoleCreds)) {\n        consoleExtras = {\n          url: consoleCreds.url,\n          accessKey: consoleCreds.accessKey,\n          secretKey: consoleCreds.secretKey,\n          api: \"s3v4\",\n          path: \"auto\",\n        };\n      } else {\n        const cCreds = consoleCreds.map((itemMap) => {\n          return {\n            url: itemMap.url,\n            accessKey: itemMap.accessKey,\n            secretKey: itemMap.secretKey,\n            api: \"s3v4\",\n            path: \"auto\",\n          };\n        });\n        consoleExtras = cCreds[0];\n      }\n    } else {\n      consoleExtras = {\n        url: newServiceAccount.url,\n        accessKey: newServiceAccount.accessKey,\n        secretKey: newServiceAccount.secretKey,\n        api: \"s3v4\",\n        path: \"auto\",\n      };\n    }\n\n    download(\n      \"credentials.json\",\n      JSON.stringify({\n        ...consoleExtras,\n      })\n    );\n  };\n\n  const downloaddAllCredentials = () => {\n    let allCredentials = {};\n    if (\n      consoleCreds &&\n      Array.isArray(consoleCreds) &&\n      consoleCreds.length > 1\n    ) {\n      const cCreds = consoleCreds.map((itemMap) => {\n        return {\n          accessKey: itemMap.accessKey,\n          secretKey: itemMap.secretKey,\n        };\n      });\n      allCredentials = cCreds;\n    }\n    download(\n      \"all_credentials.json\",\n      JSON.stringify({\n        ...allCredentials,\n      })\n    );\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <TooltipWrapper\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n              >\n                <Button\n                  id={\"download-button\"}\n                  label={\"Download for import\"}\n                  className={classes.buttonSpacer}\n                  onClick={downloadImport}\n                  icon={<DownloadIcon />}\n                  variant=\"callAction\"\n                />\n              </TooltipWrapper>\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <TooltipWrapper\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                >\n                  <Button\n                    id={\"download-all-button\"}\n                    label={\"Download all access credentials\"}\n                    className={classes.buttonSpacer}\n                    onClick={downloaddAllCredentials}\n                    icon={<DownloadIcon />}\n                    variant=\"callAction\"\n                    color=\"primary\"\n                  />\n                </TooltipWrapper>\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, CopyIcon, HelpIcon } from \"mds\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport { HelpIcon } from \"mds\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Operator\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport styled from \"@emotion/styled\";\n\nconst FormHr = styled(\"hr\")`\n  border-top: 0;\n  border-left: 0;\n  border-right: 0;\n  border-color: #999999;\n  background-color: transparent;\n`;\n\nexport default FormHr;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { cloneElement } from \"react\";\nimport { Tooltip } from \"@mui/material\";\n\ninterface ITooltipWrapperProps {\n  tooltip: string;\n  children: any;\n  errorProps?: any;\n  placement?:\n    | \"bottom-end\"\n    | \"bottom-start\"\n    | \"bottom\"\n    | \"left-end\"\n    | \"left-start\"\n    | \"left\"\n    | \"right-end\"\n    | \"right-start\"\n    | \"right\"\n    | \"top-end\"\n    | \"top-start\"\n    | \"top\";\n}\n\nconst TooltipWrapper = ({\n  tooltip,\n  children,\n  errorProps = null,\n  placement,\n}: ITooltipWrapperProps) => {\n  return (\n    <Tooltip title={tooltip} placement={placement}>\n      <span>\n        {errorProps ? cloneElement(children, { ...errorProps }) : children}\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default TooltipWrapper;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  Divider,\n  Grid,\n  IconButton,\n  Paper,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport {\n  addNewMinIODomain,\n  isPageValid,\n  removeMinIODomain,\n  setEnvVars,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    wrapperContainer: {\n      display: \"flex\",\n      marginBottom: 15,\n    },\n    envVarRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...formFieldStyles,\n  });\n\nconst Configure = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const exposeMinIO = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeMinIO\n  );\n  const exposeConsole = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeConsole\n  );\n  const setDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.setDomains\n  );\n  const consoleDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.consoleDomain\n  );\n  const minioDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.minioDomains\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const tenantEnvVars = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.envVars\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const customRuntime = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customRuntime\n  );\n  const runtimeClassName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.runtimeClassName\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup!,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup!) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (setDomains) {\n      const minioExtraValidations = minioDomains.map((validation, index) => {\n        return {\n          fieldKey: `minio-domain-${index.toString()}`,\n          required: false,\n          value: validation,\n          pattern: /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?$/,\n          customPatternMessage:\n            \"MinIO domain is not in the form of http|https://subdomain.domain\",\n        };\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        ...minioExtraValidations,\n        {\n          fieldKey: \"console_domain\",\n          required: false,\n          value: consoleDomain,\n          pattern:\n            /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?(\\/[a-zA-Z0-9\\-./]*)?$/,\n          customPatternMessage:\n            \"Console domain is not in the form of http|https://subdomain.domain:port/subpath1/subpath2\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    dispatch,\n    tenantCustom,\n    tenantSecurityContext,\n    setDomains,\n    consoleDomain,\n    minioDomains,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const updateMinIODomain = (value: string, index: number) => {\n    const copyDomains = [...minioDomains];\n    copyDomains[index] = value;\n\n    updateField(\"minioDomains\", copyDomains);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Configure</H3Section>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h4 className={classes.h3Section}>Services</h4>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP via\n          LoadBalancer service type.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MinIO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"custom_domains\"\n          id=\"custom_domains\"\n          name=\"custom_domains\"\n          checked={setDomains}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"setDomains\", checked);\n          }}\n          label={\"Set Custom Domains\"}\n        />\n      </Grid>\n      {setDomains && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Domains for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"console_domain\"\n                  name=\"console_domain\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"consoleDomain\", e.target.value);\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\n                  }}\n                  label=\"Console Domain\"\n                  value={consoleDomain}\n                  placeholder={\n                    \"Eg. http://subdomain.domain:port/subpath1/subpath2\"\n                  }\n                  error={validationErrors[\"console_domain\"] || \"\"}\n                />\n              </div>\n              <div>\n                <h4>MinIO Domains</h4>\n                <div className={`${classes.responsiveSectionItem}`}>\n                  {minioDomains.map((domain, index) => {\n                    return (\n                      <div\n                        className={`${classes.containerItem} ${classes.wrapperContainer}`}\n                        key={`minio-domain-key-${index.toString()}`}\n                      >\n                        <InputBoxWrapper\n                          id={`minio-domain-${index.toString()}`}\n                          name={`minio-domain-${index.toString()}`}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            updateMinIODomain(e.target.value, index);\n                          }}\n                          label={`MinIO Domain ${index + 1}`}\n                          value={domain}\n                          placeholder={\"Eg. http://subdomain.domain\"}\n                          error={\n                            validationErrors[\n                              `minio-domain-${index.toString()}`\n                            ] || \"\"\n                          }\n                        />\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(addNewMinIODomain())}\n                            disabled={index !== minioDomains.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(removeMinIODomain(index))}\n                            disabled={minioDomains.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup!}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={tenantSecurityContext.fsGroupChangePolicy!}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"tenantSecurityContext\", {\n                          ...tenantSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"customRuntime\"\n          id=\"tenant_custom_runtime\"\n          name=\"tenant_custom_runtime\"\n          checked={customRuntime}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"customRuntime\", checked);\n          }}\n          label={\"Custom Runtime Configurations\"}\n        />\n      </Grid>\n      {customRuntime && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Runtime Configurations\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"tenant_runtime_runtimeClassName\"\n                  name=\"tenant_runtime_runtimeClassName\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"runtimeClassName\", e.target.value);\n                    cleanValidation(\"tenant_runtime_runtimeClassName\");\n                  }}\n                  label=\"Runtime Class Name\"\n                  value={runtimeClassName}\n                  error={\n                    validationErrors[\"tenant_runtime_runtimeClassName\"] || \"\"\n                  }\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Divider />\n\n      <div className={classes.headerElement}>\n        <H3Section>Additional Environment Variables</H3Section>\n        <span className={classes.descriptionText}>\n          Define additional environment variables to be used by your MinIO pods\n        </span>\n      </div>\n      <Grid container>\n        {tenantEnvVars.map((envVar, index) => (\n          <Grid\n            item\n            xs={12}\n            className={`${classes.formFieldRow} ${classes.envVarRow}`}\n            key={`tenant-envVar-${index.toString()}`}\n          >\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_key\"\n                name=\"env_var_key\"\n                label=\"Key\"\n                value={envVar.key}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: e.target.value, value: keyPair.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_key_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_value\"\n                name=\"env_var_value\"\n                label=\"Value\"\n                value={envVar.value}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: keyPair.key, value: e.target.value }\n                          : keyPair\n                      )\n                    )\n                  );\n                }}\n                index={index}\n                key={`env_var_value_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={2} className={classes.rowActions}>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = [...tenantEnvVars];\n                    existingEnvVars.push({ key: \"\", value: \"\" });\n\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={index !== tenantEnvVars.length - 1}\n                >\n                  <AddIcon />\n                </IconButton>\n              </div>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = tenantEnvVars.filter(\n                      (item, fIndex) => fIndex !== index\n                    );\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={tenantEnvVars.length <= 1}\n                >\n                  <RemoveIcon />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Configure);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addIDPADGroupAtIndex,\n  addIDPADUsrAtIndex,\n  isPageValid,\n  removeIDPADGroupAtIndex,\n  removeIDPADUsrAtIndex,\n  setIDPADGroupAtIndex,\n  setIDPADUsrAtIndex,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { clearValidationError } from \"../../../utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    adUserDnRows: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPActiveDirectory = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const ADURL = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADURL\n  );\n  const ADSkipTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADSkipTLS\n  );\n  const ADServerInsecure = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerInsecure\n  );\n  const ADGroupSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchBaseDN\n  );\n  const ADGroupSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchFilter\n  );\n  const ADUserDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADUserDNs\n  );\n  const ADGroupDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADGroupDNs\n  );\n  const ADLookupBindDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindDN\n  );\n  const ADLookupBindPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindPassword\n  );\n  const ADUserDNSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchBaseDN\n  );\n  const ADUserDNSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchFilter\n  );\n  const ADServerStartTLS = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerStartTLS\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n        {\n          fieldKey: \"ad_lookupBindDN\",\n          required: true,\n          value: ADLookupBindDN,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    ADLookupBindDN,\n    idpSelection,\n    ADURL,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADUserDNs,\n    ADGroupDNs,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"AD_URL\"\n          name=\"AD_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADURL\", e.target.value);\n            cleanValidation(\"AD_URL\");\n          }}\n          label=\"LDAP Server Address\"\n          value={ADURL}\n          placeholder=\"ldap-server:636\"\n          error={validationErrors[\"AD_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_skipTLS\"\n          id=\"ad_skipTLS\"\n          name=\"ad_skipTLS\"\n          checked={ADSkipTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADSkipTLS\", checked);\n          }}\n          label={\"Skip TLS Verification\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverInsecure\"\n          id=\"ad_serverInsecure\"\n          name=\"ad_serverInsecure\"\n          checked={ADServerInsecure}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerInsecure\", checked);\n          }}\n          label={\"Server Insecure\"}\n        />\n      </Grid>\n      {ADServerInsecure ? (\n        <Grid item xs={12}>\n          <Typography\n            className={classes.error}\n            variant=\"caption\"\n            display=\"block\"\n            gutterBottom\n          >\n            Warning: All traffic with Active Directory will be unencrypted\n          </Typography>\n          <br />\n        </Grid>\n      ) : null}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverStartTLS\"\n          id=\"ad_serverStartTLS\"\n          name=\"ad_serverStartTLS\"\n          checked={ADServerStartTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerStartTLS\", checked);\n          }}\n          label={\"Start TLS connection to AD/LDAP server\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindDN\"\n          name=\"ad_lookupBindDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindDN\", e.target.value);\n            cleanValidation(\"ad_lookupBindDN\");\n          }}\n          label=\"Lookup Bind DN\"\n          value={ADLookupBindDN}\n          placeholder=\"cn=admin,dc=min,dc=io\"\n          error={validationErrors[\"ad_lookupBindDN\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindPassword\"\n          name=\"ad_lookupBindPassword\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindPassword\", e.target.value);\n          }}\n          label=\"Lookup Bind Password\"\n          value={ADLookupBindPassword}\n          placeholder=\"admin\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchBaseDN\"\n          name=\"ad_userDNSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n          }}\n          label=\"User DN Search Base DN\"\n          value={ADUserDNSearchBaseDN}\n          placeholder=\"dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchFilter\"\n          name=\"ad_userDNSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchFilter\", e.target.value);\n          }}\n          label=\"User DN Search Filter\"\n          value={ADUserDNSearchFilter}\n          placeholder=\"(sAMAcountName=%s)\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchBaseDN\"\n          name=\"ad_groupSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchBaseDN\", e.target.value);\n          }}\n          label=\"Group Search Base DN\"\n          value={ADGroupSearchBaseDN}\n          placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchFilter\"\n          name=\"ad_groupSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchFilter\", e.target.value);\n          }}\n          label=\"Group Search Filter\"\n          value={ADGroupSearchFilter}\n          placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n        />\n      </Grid>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of user DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADUserDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-userdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-userdn-${index.toString()}`}\n                    value={ADUserDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADUsrAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-userdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-userdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-userdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add User\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADUsrAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADUserDNs.length > 1) {\n                            dispatch(removeIDPADUsrAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of group DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADGroupDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-groupdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-groupdn-${index.toString()}`}\n                    value={ADGroupDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADGroupAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-groupdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-groupdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-groupdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add Group\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADGroupAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADGroupDNs.length > 1) {\n                            dispatch(removeIDPADGroupAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default IDPActiveDirectory;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPOpenID = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const openIDConfigurationURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDConfigurationURL\n  );\n  const openIDClientID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClientID\n  );\n  const openIDSecretID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDSecretID\n  );\n  const openIDCallbackURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDCallbackURL\n  );\n  const openIDClaimName = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClaimName\n  );\n  const openIDScopes = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.openIDScopes\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    openIDClientID,\n    openIDSecretID,\n    openIDConfigurationURL,\n    openIDClaimName,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_CONFIGURATION_URL\"\n          name=\"openID_CONFIGURATION_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDConfigurationURL\", e.target.value);\n            cleanValidation(\"openID_CONFIGURATION_URL\");\n          }}\n          label=\"Configuration URL\"\n          value={openIDConfigurationURL}\n          placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n          error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_clientID\"\n          name=\"openID_clientID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClientID\", e.target.value);\n            cleanValidation(\"openID_clientID\");\n          }}\n          label=\"Client ID\"\n          value={openIDClientID}\n          error={validationErrors[\"openID_clientID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_secretID\"\n          name=\"openID_secretID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDSecretID\", e.target.value);\n            cleanValidation(\"openID_secretID\");\n          }}\n          label=\"Secret ID\"\n          value={openIDSecretID}\n          error={validationErrors[\"openID_secretID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_callbackURL\"\n          name=\"openID_callbackURL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDCallbackURL\", e.target.value);\n            cleanValidation(\"openID_callbackURL\");\n          }}\n          label=\"Callback URL\"\n          value={openIDCallbackURL}\n          placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n          error={validationErrors[\"openID_callbackURL\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_claimName\"\n          name=\"openID_claimName\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClaimName\", e.target.value);\n            cleanValidation(\"openID_claimName\");\n          }}\n          label=\"Claim Name\"\n          value={openIDClaimName}\n          error={validationErrors[\"openID_claimName\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_scopes\"\n          name=\"openID_scopes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDScopes\", e.target.value);\n            cleanValidation(\"openID_scopes\");\n          }}\n          label=\"Scopes\"\n          value={openIDScopes}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IDPOpenID;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  addIDPNewKeyPair,\n  isPageValid,\n  removeIDPKeyPairAtIndex,\n  setIDPPwdAtIndex,\n  setIDPUsrAtIndex,\n} from \"../../createTenantSlice\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport { clearValidationError, getRandomString } from \"../../../utils\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPBuiltIn = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const accessKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.accessKeys\n  );\n  const secretKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.secretKeys\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [idpSelection, accessKeys, secretKeys, dispatch]);\n\n  return (\n    <Fragment>\n      Add additional users\n      {accessKeys.map((_, index) => {\n        return (\n          <Fragment key={`identityField-${index.toString()}`}>\n            <div className={classes.shortened}>\n              <InputBoxWrapper\n                id={`accesskey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Access Key\"}\n                name={`accesskey-${index.toString()}`}\n                value={accessKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPUsrAtIndex({\n                      index,\n                      accessKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`accesskey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-accesskey-${index.toString()}`}\n                error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n              />\n              <InputBoxWrapper\n                id={`secretkey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Secret Key\"}\n                name={`secretkey-${index.toString()}`}\n                value={secretKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPPwdAtIndex({\n                      index,\n                      secretKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`secretkey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-secretkey-${index.toString()}`}\n                error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n              />\n              <div className={classes.buttonTray}>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(addIDPNewKeyPair());\n                    }}\n                    disabled={index !== accessKeys.length - 1}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </div>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(removeIDPKeyPairAtIndex(index));\n                    }}\n                    disabled={accessKeys.length <= 1}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n                <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      onClick={() => {\n                        dispatch(\n                          setIDPUsrAtIndex({\n                            index,\n                            accessKey: getRandomString(16),\n                          })\n                        );\n                        dispatch(\n                          setIDPPwdAtIndex({\n                            index,\n                            secretKey: getRandomString(16),\n                          })\n                        );\n                      }}\n                      size={\"small\"}\n                    >\n                      <CasinoIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default IDPBuiltIn;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { setIDP } from \"../createTenantSlice\";\nimport IDPActiveDirectory from \"./IdentityProvider/IDPActiveDirectory\";\nimport IDPOpenID from \"./IdentityProvider/IDPOpenID\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport IDPBuiltIn from \"./IdentityProvider/IDPBuiltIn\";\nimport {\n  BuiltInLogoElement,\n  LDAPLogoElement,\n  OIDCLogoElement,\n} from \"../../LogoComponents\";\nimport H3Section from \"../../../Common/H3Section\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 16,\n        fontWeight: 600,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"row\",\n        alignItems: \"top\",\n      },\n    },\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IdentityProvider = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Identity Provider</H3Section>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} padding=\"10px\">\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\"Protocol\"\n          onChange={(e) => {\n            dispatch(setIDP(e.target.value));\n          }}\n          selectorOptions={[\n            { label: <BuiltInLogoElement />, value: \"Built-in\" },\n            { label: <OIDCLogoElement />, value: \"OpenID\" },\n            { label: <LDAPLogoElement />, value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && <IDPBuiltIn />}\n      {idpSelection === \"OpenID\" && <IDPOpenID />}\n      {idpSelection === \"AD\" && <IDPActiveDirectory />}\n    </Paper>\n  );\n};\n\nexport default IdentityProvider;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport {\n  addCaCertificate,\n  addClientKeyPair,\n  addFileToCaCertificates,\n  addFileToClientKeyPair,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteCaCertificate,\n  deleteClientKeyPair,\n  deleteKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport TLSHelpBox from \"../../HelpBox/TLSHelpBox\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface ISecurityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({ classes }: ISecurityProps) => {\n  const dispatch = useAppDispatch();\n\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const minioClientCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioClientCertificates\n  );\n  const caCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCAsCertificates\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"security\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableAutoCert) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableCustomCerts) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    dispatch(isPageValid({ pageName: \"security\", valid: false }));\n  }, [enableTLS, enableAutoCert, enableCustomCerts, dispatch]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Security</H3Section>\n      </div>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <FormSwitchWrapper\n            value=\"enableTLS\"\n            id=\"enableTLS\"\n            name=\"enableTLS\"\n            checked={enableTLS}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableTLS\", checked);\n            }}\n            label={\"TLS\"}\n            description={\n              \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n            }\n          />\n        </Grid>\n        {enableTLS && (\n          <Fragment>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableAutoCert\", checked);\n                }}\n                label={\"AutoCert\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableCustomCerts\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                description={\"Certificates used to terminated TLS at MinIO\"}\n              />\n            </Grid>\n            {enableCustomCerts && (\n              <Fragment>\n                {!enableAutoCert && (\n                  <Grid item xs={12}>\n                    <TLSHelpBox />\n                  </Grid>\n                )}\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Server Certificates</h5>\n                  {minioCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addKeyPair());\n                            }}\n                            disabled={index !== minioCertificates.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteKeyPair(keyPair.id));\n                            }}\n                            disabled={minioCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Client Certificates</h5>\n                  {minioClientCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addClientKeyPair());\n                            }}\n                            disabled={\n                              index !== minioClientCertificates.length - 1\n                            }\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteClientKeyPair(keyPair.id));\n                            }}\n                            disabled={minioClientCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO CA Certificates</h5>\n                  {caCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-CA-certs-${keyPair.id}`}\n                      className={classes.minioCACertsRow}\n                    >\n                      <Grid item xs={6}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToCaCertificates({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <div className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(addCaCertificate());\n                              }}\n                              disabled={index !== caCertificates.length - 1}\n                            >\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(deleteCaCertificate(keyPair.id));\n                              }}\n                              disabled={caCertificates.length <= 1}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Security);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\ntype Props = {\n  children: string;\n};\n\nconst SectionH1: React.FC<Props> = ({ children }) => {\n  return (\n    <h1 style={{ margin: 0, marginBottom: \".8rem\", fontSize: \"1.3rem\" }}>\n      {children}\n    </h1>\n  );\n};\n\nexport default SectionH1;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst VaultKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const vaultEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEndpoint\n  );\n  const vaultEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEngine\n  );\n  const vaultNamespace = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultNamespace\n  );\n  const vaultPrefix = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPrefix\n  );\n  const vaultAppRoleEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultAppRoleEngine\n  );\n  const vaultId = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultId\n  );\n  const vaultSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultSecret\n  );\n  const vaultRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultRetry\n  );\n  const vaultPing = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPing\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"vault_endpoint\",\n          required: true,\n          value: vaultEndpoint,\n        },\n        {\n          fieldKey: \"vault_id\",\n          required: true,\n          value: vaultId,\n        },\n        {\n          fieldKey: \"vault_secret\",\n          required: true,\n          value: vaultSecret,\n        },\n        {\n          fieldKey: \"vault_ping\",\n          required: false,\n          value: vaultPing,\n          customValidation: parseInt(vaultPing) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n        {\n          fieldKey: \"vault_retry\",\n          required: false,\n          value: vaultRetry,\n          customValidation: parseInt(vaultRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_endpoint\"\n          name=\"vault_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEndpoint\", e.target.value);\n            cleanValidation(\"vault_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the Hashicorp Vault endpoint\"\n          value={vaultEndpoint}\n          error={validationErrors[\"vault_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_engine\"\n          name=\"vault_engine\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEngine\", e.target.value);\n            cleanValidation(\"vault_engine\");\n          }}\n          label=\"Engine\"\n          tooltip=\"Engine is the Hashicorp Vault K/V engine path. If empty, defaults to 'kv'\"\n          value={vaultEngine}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_namespace\"\n          name=\"vault_namespace\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultNamespace\", e.target.value);\n          }}\n          label=\"Namespace\"\n          tooltip=\"Namespace is an optional Hashicorp Vault namespace. An empty namespace means no particular namespace is used.\"\n          value={vaultNamespace}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_prefix\"\n          name=\"vault_prefix\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultPrefix\", e.target.value);\n          }}\n          label=\"Prefix\"\n          tooltip=\"Prefix is an optional prefix / directory within the K/V engine. If empty, keys will be stored at the K/V engine top level\"\n          value={vaultPrefix}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>App Role</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_approle_engine\"\n              name=\"vault_approle_engine\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultAppRoleEngine\", e.target.value);\n              }}\n              label=\"Engine\"\n              tooltip=\"AppRoleEngine is the AppRole authentication engine path. If empty, defaults to 'approle'\"\n              value={vaultAppRoleEngine}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_id\"\n              name=\"vault_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultId\", e.target.value);\n                cleanValidation(\"vault_id\");\n              }}\n              label=\"AppRole ID\"\n              tooltip=\"AppRoleSecret is the AppRole access secret for authenticating to Hashicorp Vault via the AppRole method\"\n              value={vaultId}\n              error={validationErrors[\"vault_id\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_secret\"\n              name=\"vault_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultSecret\", e.target.value);\n                cleanValidation(\"vault_secret\");\n              }}\n              label=\"AppRole Secret\"\n              tooltip=\"AppRoleSecret is the AppRole access secret for authenticating to Hashicorp Vault via the AppRole method\"\n              value={vaultSecret}\n              error={validationErrors[\"vault_secret\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"vault_retry\"\n              name=\"vault_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultRetry\", e.target.value);\n                cleanValidation(\"vault_retry\");\n              }}\n              label=\"Retry (Seconds)\"\n              value={vaultRetry}\n              error={validationErrors[\"vault_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        className={classes.formFieldRow}\n        style={{ marginTop: 15 }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Status</legend>\n          <InputBoxWrapper\n            type=\"number\"\n            min=\"0\"\n            id=\"vault_ping\"\n            name=\"vault_ping\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"vaultPing\", e.target.value);\n              cleanValidation(\"vault_ping\");\n            }}\n            label=\"Ping (Seconds)\"\n            value={vaultPing}\n            error={validationErrors[\"vault_ping\"] || \"\"}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default VaultKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AzureKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const azureEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureEndpoint\n  );\n  const azureTenantID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureTenantID\n  );\n  const azureClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientID\n  );\n  const azureClientSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientSecret\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"azure_endpoint\",\n          required: true,\n          value: azureEndpoint,\n        },\n        {\n          fieldKey: \"azure_tenant_id\",\n          required: true,\n          value: azureTenantID,\n        },\n        {\n          fieldKey: \"azure_client_id\",\n          required: true,\n          value: azureClientID,\n        },\n        {\n          fieldKey: \"azure_client_secret\",\n          required: true,\n          value: azureClientSecret,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"azure_endpoint\"\n          name=\"azure_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"azureEndpoint\", e.target.value);\n            cleanValidation(\"azure_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the Azure KeyVault endpoint\"\n          value={azureEndpoint}\n          error={validationErrors[\"azure_endpoint\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_tenant_id\"\n              name=\"azure_tenant_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureTenantID\", e.target.value);\n                cleanValidation(\"azure_tenant_id\");\n              }}\n              label=\"Tenant ID\"\n              tooltip=\"TenantID is the ID of the Azure KeyVault tenant\"\n              value={azureTenantID}\n              error={validationErrors[\"azure_tenant_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_id\"\n              name=\"azure_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientID\", e.target.value);\n                cleanValidation(\"azure_client_id\");\n              }}\n              label=\"Client ID\"\n              tooltip=\"ClientID is the ID of the client accessing Azure KeyVault\"\n              value={azureClientID}\n              error={validationErrors[\"azure_client_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_secret\"\n              name=\"azure_client_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientSecret\", e.target.value);\n                cleanValidation(\"azure_client_secret\");\n              }}\n              label=\"Client Secret\"\n              tooltip=\"ClientSecret is the client secret accessing the Azure KeyVault\"\n              value={azureClientSecret}\n              error={validationErrors[\"azure_client_secret\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AzureKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { updateAddField } from \"../../createTenantSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GCPKMSAdd = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_project_id\"\n          name=\"gcp_project_id\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpProjectID\", e.target.value);\n          }}\n          label=\"Project ID\"\n          tooltip=\"ProjectID is the GCP project ID.\"\n          value={gcpProjectID}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_endpoint\"\n          name=\"gcp_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpEndpoint\", e.target.value);\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the GCP project ID. If empty defaults to: secretmanager.googleapis.com:443\"\n          value={gcpEndpoint}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_email\"\n              name=\"gcp_client_email\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientEmail\", e.target.value);\n              }}\n              label=\"Client Email\"\n              tooltip=\"Is the Client email of the GCP service account used to access the SecretManager\"\n              value={gcpClientEmail}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_id\"\n              name=\"gcp_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientID\", e.target.value);\n              }}\n              label=\"Client ID\"\n              tooltip=\"Is the Client ID of the GCP service account used to access the SecretManager\"\n              value={gcpClientID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key_id\"\n              name=\"gcp_private_key_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKeyID\", e.target.value);\n              }}\n              label=\"Private Key ID\"\n              tooltip=\"Is the private key ID of the GCP service account used to access the SecretManager\"\n              value={gcpPrivateKeyID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key\"\n              name=\"gcp_private_key\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKey\", e.target.value);\n              }}\n              label=\"Private Key\"\n              tooltip=\"Is the private key of the GCP service account used to access the SecretManager\"\n              value={gcpPrivateKey}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GCPKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GemaltoKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const gemaltoEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoEndpoint\n  );\n  const gemaltoToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoToken\n  );\n  const gemaltoDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoDomain\n  );\n  const gemaltoRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoRetry\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"gemalto_endpoint\",\n          required: true,\n          value: gemaltoEndpoint,\n        },\n        {\n          fieldKey: \"gemalto_token\",\n          required: true,\n          value: gemaltoToken,\n        },\n        {\n          fieldKey: \"gemalto_domain\",\n          required: true,\n          value: gemaltoDomain,\n        },\n        {\n          fieldKey: \"gemalto_retry\",\n          required: false,\n          value: gemaltoRetry,\n          customValidation: parseInt(gemaltoRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    gemaltoEndpoint,\n    gemaltoToken,\n    gemaltoDomain,\n    gemaltoRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gemalto_endpoint\"\n          name=\"gemalto_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gemaltoEndpoint\", e.target.value);\n            cleanValidation(\"gemalto_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the endpoint to the KeySecure server\"\n          value={gemaltoEndpoint}\n          error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_token\"\n              name=\"gemalto_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoToken\", e.target.value);\n                cleanValidation(\"gemalto_token\");\n              }}\n              label=\"Token\"\n              tooltip=\"Token is the refresh authentication token to access the KeySecure server\"\n              value={gemaltoToken}\n              error={validationErrors[\"gemalto_token\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_domain\"\n              name=\"gemalto_domain\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoDomain\", e.target.value);\n                cleanValidation(\"gemalto_domain\");\n              }}\n              label=\"Domain\"\n              tooltip=\"Domain is the isolated namespace within the KeySecure server. If empty, defaults to the top-level / root domain\"\n              value={gemaltoDomain}\n              error={validationErrors[\"gemalto_domain\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"gemalto_retry\"\n              name=\"gemalto_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoRetry\", e.target.value);\n                cleanValidation(\"gemalto_retry\");\n              }}\n              label=\"Retry (seconds)\"\n              value={gemaltoRetry}\n              error={validationErrors[\"gemalto_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GemaltoKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AWSKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const awsEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsEndpoint\n  );\n  const awsRegion = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsRegion\n  );\n  const awsKMSKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsKMSKey\n  );\n  const awsAccessKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsAccessKey\n  );\n  const awsSecretKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsSecretKey\n  );\n  const awsToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsToken\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"aws_endpoint\",\n          required: true,\n          value: awsEndpoint,\n        },\n        {\n          fieldKey: \"aws_region\",\n          required: true,\n          value: awsRegion,\n        },\n        {\n          fieldKey: \"aws_accessKey\",\n          required: true,\n          value: awsAccessKey,\n        },\n        {\n          fieldKey: \"aws_secretKey\",\n          required: true,\n          value: awsSecretKey,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    awsEndpoint,\n    awsRegion,\n    awsSecretKey,\n    awsAccessKey,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_endpoint\"\n          name=\"aws_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsEndpoint\", e.target.value);\n            cleanValidation(\"aws_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the AWS SecretsManager endpoint. AWS SecretsManager endpoints have the following schema: secrestmanager[-fips].<region>.amanzonaws.com\"\n          value={awsEndpoint}\n          error={validationErrors[\"aws_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_region\"\n          name=\"aws_region\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsRegion\", e.target.value);\n            cleanValidation(\"aws_region\");\n          }}\n          label=\"Region\"\n          tooltip=\"Region is the AWS region the SecretsManager is located\"\n          value={awsRegion}\n          error={validationErrors[\"aws_region\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_kmsKey\"\n          name=\"aws_kmsKey\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsKMSKey\", e.target.value);\n          }}\n          label=\"KMS Key\"\n          tooltip=\"KMSKey is the AWS-KMS key ID (CMK-ID) used to en/decrypt secrets managed by the SecretsManager. If empty, the default AWS KMS key is used\"\n          value={awsKMSKey}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_accessKey\"\n              name=\"aws_accessKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsAccessKey\", e.target.value);\n                cleanValidation(\"aws_accessKey\");\n              }}\n              label=\"Access Key\"\n              tooltip=\"AccessKey is the access key for authenticating to AWS\"\n              value={awsAccessKey}\n              error={validationErrors[\"aws_accessKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_secretKey\"\n              name=\"aws_secretKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsSecretKey\", e.target.value);\n                cleanValidation(\"aws_secretKey\");\n              }}\n              label=\"Secret Key\"\n              tooltip=\"SecretKey is the secret key for authenticating to AWS\"\n              value={awsSecretKey}\n              error={validationErrors[\"aws_secretKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_token\"\n              name=\"aws_token\"\n              tooltip=\"SessionToken is an optional session token for authenticating to AWS when using STS\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsToken\", e.target.value);\n              }}\n              label=\"Token\"\n              value={awsToken}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AWSKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport {\n  addFileKESServerCert,\n  addFileKMSCa,\n  addFileKMSMTLSCert,\n  addFileMinIOMTLSCert,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport VaultKMSAdd from \"./Encryption/VaultKMSAdd\";\nimport AzureKMSAdd from \"./Encryption/AzureKMSAdd\";\nimport GCPKMSAdd from \"./Encryption/GCPKMSAdd\";\nimport GemaltoKMSAdd from \"./Encryption/GemaltoKMSAdd\";\nimport AWSKMSAdd from \"./Encryption/AWSKMSAdd\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport CodeMirrorWrapper from \"../../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport FormHr from \"../../../Common/FormHr\";\n\ninterface IEncryptionProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({ classes }: IEncryptionProps) => {\n  const dispatch = useAppDispatch();\n\n  const replicas = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.replicas\n  );\n  const rawConfiguration = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.rawConfiguration\n  );\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab\n  );\n  const enableEncryption = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.enableEncryption\n  );\n  const encryptionType = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionType\n  );\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n  const enableCustomCertsForKES = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.enableCustomCertsForKES\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const minioServerCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\n  );\n  const kesServerCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kesServerCertificate\n  );\n  const minioMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioMTLSCertificate\n  );\n  const kmsMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsMTLSCertificate\n  );\n  const kmsCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsCA\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const kesSecurityContext = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.kesSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioServerCertificates &&\n        minioServerCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        {\n          fieldKey: \"rawConfiguration\",\n          required: encryptionTab > 0,\n          value: rawConfiguration,\n        },\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup!,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup!) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_cert,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    rawConfiguration,\n    encryptionTab,\n    enableEncryption,\n    encryptionType,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    dispatch,\n    enableAutoCert,\n    enableCustomCerts,\n    kesServerCertificate.encoded_key,\n    kesServerCertificate.encoded_cert,\n    minioMTLSCertificate.encoded_key,\n    minioMTLSCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Encryption</SectionH1>\n        </Grid>\n        <Grid item xs={4} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enableEncryption}\n            value={\"tenant_encryption\"}\n            id=\"tenant-encryption\"\n            name=\"tenant-encryption\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableEncryption\", checked);\n            }}\n            description=\"\"\n            disabled={!encryptionAvailable}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            MinIO Server-Side Encryption (SSE) protects objects as part of write\n            operations, allowing clients to take advantage of server processing\n            power to secure objects at the storage layer (encryption-at-rest).\n            SSE also provides key functionality to regulatory and compliance\n            requirements around secure locking and erasure.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <FormHr />\n        </Grid>\n\n        {enableEncryption && (\n          <Fragment>\n            <Grid item xs={12}>\n              <Tabs\n                value={encryptionTab}\n                onChange={(e: React.ChangeEvent<{}>, value: number) => {\n                  updateField(\"encryptionTab\", value);\n                }}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                aria-label=\"cluster-tabs\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab id=\"kms-options\" label=\"Options\" />\n                <Tab id=\"kms-raw-configuration\" label=\"Raw Edit\" />\n              </Tabs>\n            </Grid>\n\n            {encryptionTab ? (\n              <Fragment>\n                <Grid item xs={12}>\n                  <CodeMirrorWrapper\n                    value={rawConfiguration}\n                    mode={\"yaml\"}\n                    onBeforeChange={(editor, data, value) => {\n                      updateField(\"rawConfiguration\", value);\n                    }}\n                    editorHeight={\"550px\"}\n                  />\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.encryptionTypeOptions}>\n                  <RadioGroupSelector\n                    currentSelection={encryptionType}\n                    id=\"encryptionType\"\n                    name=\"encryptionType\"\n                    label=\"KMS\"\n                    onChange={(e) => {\n                      updateField(\"encryptionType\", e.target.value);\n                    }}\n                    selectorOptions={[\n                      { label: \"Vault\", value: \"vault\" },\n                      { label: \"AWS\", value: \"aws\" },\n                      { label: \"Gemalto\", value: \"gemalto\" },\n                      { label: \"GCP\", value: \"gcp\" },\n                      { label: \"Azure\", value: \"azure\" },\n                    ]}\n                  />\n                </Grid>\n                {encryptionType === \"vault\" && <VaultKMSAdd />}\n                {encryptionType === \"azure\" && <AzureKMSAdd />}\n                {encryptionType === \"gcp\" && <GCPKMSAdd />}\n                {encryptionType === \"aws\" && <AWSKMSAdd />}\n                {encryptionType === \"gemalto\" && <GemaltoKMSAdd />}\n              </Fragment>\n            )}\n\n            <div className={classes.headerElement}>\n              <h4 className={classes.h3Section}>Additional Configurations</h4>\n            </div>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCertsForKES\"\n                id=\"enableCustomCertsForKES\"\n                name=\"enableCustomCertsForKES\"\n                checked={enableCustomCertsForKES || !enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n\n                  updateField(\"enableCustomCertsForKES\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                disabled={!enableAutoCert}\n              />\n            </Grid>\n            {(enableCustomCertsForKES || !enableAutoCert) && (\n              <Fragment>\n                <Grid container>\n                  <Grid item xs={12} style={{ marginBottom: 15 }}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Encryption server certificates\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"serverKey\"\n                        name=\"serverKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"serverKey\"] || \"\"}\n                        value={kesServerCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"serverCert\"\n                        name=\"serverCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"serverCert\"] || \"\"}\n                        value={kesServerCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container style={{ marginBottom: 15 }}>\n                  <Grid item xs={12}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        MinIO mTLS certificates (connection between MinIO and\n                        the Encryption server)\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"clientKey\"\n                        name=\"clientKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"clientKey\"] || \"\"}\n                        value={minioMTLSCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"clientCert\"\n                        name=\"clientCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"clientCert\"] || \"\"}\n                        value={minioMTLSCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container className={classes.mutualTlsConfig}>\n                  <fieldset className={classes.fieldGroup}>\n                    <legend className={classes.descriptionText}>\n                      KMS mTLS certificates (connection between the Encryption\n                      server and the KMS)\n                    </legend>\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"key\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_key\");\n                      }}\n                      accept=\".key,.pem\"\n                      id=\"vault_key\"\n                      name=\"vault_key\"\n                      label=\"Key\"\n                      value={kmsMTLSCertificate.key}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"cert\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_cert\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_cert\"\n                      name=\"vault_cert\"\n                      label=\"Cert\"\n                      value={kmsMTLSCertificate.cert}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSCa({\n                            fileName: fileName,\n                            value: encodedValue,\n                          })\n                        );\n                        cleanValidation(\"vault_ca\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_ca\"\n                      name=\"vault_ca\"\n                      label=\"CA\"\n                      value={kmsCA.cert}\n                    />\n                  </fieldset>\n                </Grid>\n              </Fragment>\n            )}\n            <Grid item xs={12}>\n              <Grid item xs={12} classes={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"1\"\n                  id=\"replicas\"\n                  name=\"replicas\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"replicas\", e.target.value);\n                    cleanValidation(\"replicas\");\n                  }}\n                  label=\"Replicas\"\n                  value={replicas}\n                  required\n                  error={validationErrors[\"replicas\"] || \"\"}\n                />\n              </Grid>\n\n              <fieldset\n                className={classes.fieldGroup}\n                style={{ marginTop: 15 }}\n              >\n                <legend className={classes.descriptionText}>\n                  SecurityContext for KES pods\n                </legend>\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsUser\"\n                        name=\"kes_securityContext_runAsUser\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsUser: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsUser\");\n                        }}\n                        label=\"Run As User\"\n                        value={kesSecurityContext.runAsUser}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsUser\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsGroup\"\n                        name=\"kes_securityContext_runAsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsGroup\");\n                        }}\n                        label=\"Run As Group\"\n                        value={kesSecurityContext.runAsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsGroup\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_fsGroup\"\n                        name=\"kes_securityContext_fsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_fsGroup\");\n                        }}\n                        label=\"FsGroup\"\n                        value={kesSecurityContext.fsGroup!}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <SelectWrapper\n                        label=\"FsGroupChangePolicy\"\n                        id=\"securityContext_fsGroupChangePolicy\"\n                        name=\"securityContext_fsGroupChangePolicy\"\n                        value={kesSecurityContext.fsGroupChangePolicy!}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroupChangePolicy: e.target.value,\n                          });\n                        }}\n                        options={[\n                          {\n                            label: \"Always\",\n                            value: \"Always\",\n                          },\n                          {\n                            label: \"OnRootMismatch\",\n                            value: \"OnRootMismatch\",\n                          },\n                        ]}\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12}>\n                  <div className={classes.multiContainer}>\n                    <FormSwitchWrapper\n                      value=\"kesSecurityContextRunAsNonRoot\"\n                      id=\"kes_securityContext_runAsNonRoot\"\n                      name=\"kes_securityContext_runAsNonRoot\"\n                      checked={kesSecurityContext.runAsNonRoot}\n                      onChange={(e) => {\n                        const targetD = e.target;\n                        const checked = targetD.checked;\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsNonRoot: checked,\n                        });\n                      }}\n                      label={\"Do not run as Root\"}\n                    />\n                  </div>\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Encryption);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { LabelKeyPair } from \"../../types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { AddIcon, RemoveIcon } from \"mds\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../systemSlice\";\nimport {\n  addNewToleration,\n  isPageValid,\n  removeToleration,\n  setKeyValuePairs,\n  setTolerationInfo,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.podAffinity\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.nodeSelectorLabels\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.withPodAntiAffinity\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.createTenant.nodeSelectorPairs\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.createTenant.tolerations\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"affinity\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"affinity\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      })\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Pod Placement</H3Section>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={i !== keyValuePairs.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = keyValuePairs.filter(\n                                (item, index) => index !== i\n                              );\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={keyValuePairs.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removeToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IImagesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...wizardCommon,\n  });\n\nconst Images = ({ classes }: IImagesProps) => {\n  const dispatch = useAppDispatch();\n\n  const customImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customImage\n  );\n  const imageName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageName\n  );\n  const customDockerhub = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customDockerhub\n  );\n  const imageRegistry = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageRegistry\n  );\n  const imageRegistryUsername = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryUsername\n  );\n  const imageRegistryPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryPassword\n  );\n\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n\n  const kesImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.kesImage\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    kesImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    dispatch,\n    tenantCustom,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Container Images</H3Section>\n        <span className={classes.descriptionText}>\n          Specify the container images used by the Tenant and its features.\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"minio/minio:RELEASE.2023-05-27T05-56-19Z\"\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"minio/kes:2023-05-02T22-48-10Z\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <h4>Custom Container Registry</h4>\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Use a private container registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Images);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({ classes }: ISizePreviewProps) => {\n  const nodes = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.nodes\n  );\n  const memoryNode = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesMemoryRequest\n  );\n  const ecParity = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParity\n  );\n\n  const distribution = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.distribution\n  );\n  const ecParityCalc = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParityCalc\n  );\n\n  const cpuToUse = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesCPURequest\n  );\n  const integrationSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.integrationSelection\n  );\n\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? distribution.disks : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    CPU Selection\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {cpuToUse}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n      {integrationSelection.typeSelection !== \"\" &&\n        integrationSelection.storageClass !== \"\" && (\n          <Fragment>\n            <h4>Single Instance Configuration</h4>\n            <Divider />\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size={\"small\"}\n            >\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">CPU</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.CPU !== 0\n                      ? integrationSelection.CPU\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.memory !== 0\n                      ? `${integrationSelection.memory} Gi`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.drivesPerServer !== 0\n                      ? `${integrationSelection.drivesPerServer}`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    Drive Size\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {integrationSelection.driveSize.driveSize}\n                    {integrationSelection.driveSize.sizeUnit}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Fragment>\n        )}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SizePreview);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"mds\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { closeAddNSModal } from \"../../createTenantSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { createNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  })\n);\n\nconst AddNamespaceModal = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n  const addNamespaceLoading = useSelector(\n    (state: AppState) => state.createTenant.addNSLoading\n  );\n  const addNamespaceOpen = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        variant: \"callAction\",\n      }}\n      isOpen={addNamespaceOpen}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={addNamespaceLoading}\n      onConfirm={() => {\n        dispatch(createNamespaceAsync());\n      }}\n      onClose={() => {\n        dispatch(closeAddNSModal());\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default AddNamespaceModal;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useMemo } from \"react\";\nimport { AddIcon } from \"mds\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { openAddNSModal, setNamespace } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\nimport debounce from \"lodash/debounce\";\nimport { IMkEnvs } from \"./utils\";\nimport { validateNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst NamespaceSelector = ({ formToRender }: { formToRender?: IMkEnvs }) => {\n  const dispatch = useAppDispatch();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n\n  const showNSCreateButton = useSelector(\n    (state: AppState) => state.createTenant.showNSCreateButton\n  );\n\n  const namespaceError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"namespace\"]\n  );\n  const openAddNSConfirm = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  const debounceNamespace = useMemo(\n    () =>\n      debounce(() => {\n        dispatch(validateNamespaceAsync());\n      }, 500),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  const addNamespace = () => {\n    dispatch(openAddNSModal());\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && <AddNamespaceModal />}\n      <InputBoxWrapper\n        id=\"namespace\"\n        name=\"namespace\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          dispatch(setNamespace(e.target.value));\n        }}\n        label=\"Namespace\"\n        value={namespace}\n        error={namespaceError || \"\"}\n        overlayId={\"add-namespace\"}\n        overlayIcon={showNSCreateButton ? <AddIcon /> : null}\n        overlayAction={addNamespace}\n        required\n      />\n    </Fragment>\n  );\n};\nexport default NamespaceSelector;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport SizePreview from \"../SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\nimport {\n  isPageValid,\n  setStorageType,\n  setTenantName,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { selFeatures } from \"../../../../consoleSlice\";\nimport NamespaceSelector from \"./NamespaceSelector\";\nimport H3Section from \"../../../../Common/H3Section\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n      marginTop: 20,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst NameTenantField = () => {\n  const dispatch = useAppDispatch();\n  const tenantName = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.tenantName\n  );\n\n  const tenantNameError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"tenant-name\"]\n  );\n\n  return (\n    <InputBoxWrapper\n      id=\"tenant-name\"\n      name=\"tenant-name\"\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setTenantName(e.target.value));\n      }}\n      label=\"Name\"\n      value={tenantName}\n      required\n      error={tenantNameError || \"\"}\n    />\n  );\n};\n\ninterface INameTenantMainScreen {\n  classes: any;\n  formToRender?: IMkEnvs;\n}\n\nconst NameTenantMain = ({ classes, formToRender }: INameTenantMainScreen) => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const selectedStorageType = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageType\n  );\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const features = useSelector(selFeatures);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      dispatch(\n        updateAddField({ pageName: \"nameTenant\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    const isValid =\n      (formToRender === IMkEnvs.default && storageClasses.length > 0) ||\n      (formToRender !== IMkEnvs.default && selectedStorageType !== \"\");\n\n    dispatch(isPageValid({ pageName: \"nameTenant\", valid: isValid }));\n  }, [storageClasses, dispatch, selectedStorageType, formToRender]);\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item sx={{ width: \"calc(100% - 320px)\" }}>\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <H3Section>Name</H3Section>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <NameTenantField />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <NamespaceSelector formToRender={formToRender} />\n              </Grid>\n              {formToRender === IMkEnvs.default ? (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_class\"\n                    name=\"storage_class\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageClass\",\n                        e.target.value as string\n                      );\n                    }}\n                    label=\"Storage Class\"\n                    value={selectedStorageClass}\n                    options={storageClasses}\n                    disabled={storageClasses.length < 1}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_type\"\n                    name=\"storage_type\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      dispatch(\n                        setStorageType({\n                          storageType: e.target.value as string,\n                          features: features,\n                        })\n                      );\n                    }}\n                    label={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorLabel`,\n                      \"Storage Type\"\n                    )}\n                    value={selectedStorageType}\n                    options={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorValues`,\n                      []\n                    )}\n                  />\n                </Grid>\n              )}\n              {formToRender === IMkEnvs.default ? (\n                <TenantSize />\n              ) : (\n                get(\n                  mkPanelConfigurations,\n                  `${formToRender}.sizingComponent`,\n                  null\n                )\n              )}\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NameTenantMain);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash/get\";\nimport NameTenantMain from \"./NameTenantMain\";\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\nimport { selFeatures } from \"../../../../consoleSlice\";\n\nconst TenantResources = () => {\n  const features = useSelector(selFeatures);\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  if (formRender === null) {\n    return null;\n  }\n\n  return <NameTenantMain formToRender={formRender} />;\n};\n\nexport default TenantResources;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nexport const requiredPages = [\n  \"nameTenant\",\n  \"tenantSize\",\n  \"configure\",\n  \"affinity\",\n  \"identityProvider\",\n  \"security\",\n  \"encryption\",\n];\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"mds\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { requiredPages } from \"./common\";\nimport { createTenantAsync } from \"./thunks/createTenantThunk\";\n\nconst CreateTenantButton = () => {\n  const dispatch = useAppDispatch();\n\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n\n  const validPages = useSelector(\n    (state: AppState) => state.createTenant.validPages\n  );\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n\n  const enabled =\n    !addSending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"callAction\"\n      color=\"primary\"\n      onClick={() => {\n        dispatch(createTenantAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n      label={\"Create\"}\n    />\n  );\n};\n\nexport default CreateTenantButton;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewTenantCredentials = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const showNewCredentials = useSelector(\n    (state: AppState) => state.createTenant.showNewCredentials\n  );\n  const createdAccount = useSelector(\n    (state: AppState) => state.createTenant.createdAccount\n  );\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            dispatch(resetAddTenantForm());\n            navigate(\"/tenants\");\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default NewTenantCredentials;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport {\n  IWizardButton,\n  IWizardElement,\n} from \"../../Common/GenericWizard/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\n\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\nimport {\n  IMkEnvs,\n  resourcesConfigurations,\n} from \"./Steps/TenantResources/utils\";\nimport { BackLink, HelpBox, StorageIcon } from \"mds\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport CreateTenantButton from \"./CreateTenantButton\";\nimport NewTenantCredentials from \"./NewTenantCredentials\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  })\n);\n\nconst AddTenant = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const features = useSelector(selFeatures);\n\n  // Fields\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetAddTenantForm());\n      navigate(\"/tenants\");\n    },\n  };\n\n  const createButton: IWizardButton = {\n    componentRender: <CreateTenantButton key={\"create-tenant\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <TenantResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  return (\n    <Fragment>\n      <NewTenantCredentials />\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            onClick={() => {\n              dispatch(resetAddTenantForm());\n              navigate(\"/tenants\");\n            }}\n            label={\"Tenants\"}\n          />\n        }\n      />\n\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n        {formRender === IMkEnvs.aws && (\n          <Grid item xs={12} style={{ marginTop: 16 }}>\n            <HelpBox\n              title={\"EBS Volume Configuration.\"}\n              iconComponent={<StorageIcon />}\n              help={\n                <Fragment>\n                  <b>Performance Optimized</b>: Uses the <i>gp3</i> EBS storage\n                  class class configured at 1,000Mi/s throughput and 16,000\n                  IOPS, however the minimum volume size for this type of EBS\n                  volume is <b>32Gi</b>.\n                  <br />\n                  <br />\n                  <b>Storage Optimized</b>: Uses the <i>sc1</i> EBS storage\n                  class, however the minimum volume size for this type of EBS\n                  volume is &nbsp;\n                  <b>16Ti</b> to unlock their maximum throughput speed of\n                  250Mi/s.\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddTenant;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport { CertificateIcon } from \"mds\";\nimport { useParams } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst TLSHelpBox = () => {\n  const params = useParams();\n  const tenantNameParam = params.tenantName || \"\";\n  const tenantNamespaceParam = params.tenantNamespace || \"\";\n  const namespace = useSelector((state: AppState) => {\n    var defaultNamespace = \"<namespace>\";\n    if (tenantNamespaceParam !== \"\") {\n      return tenantNamespaceParam;\n    }\n    if (state.createTenant.fields.nameTenant.namespace !== \"\") {\n      return state.createTenant.fields.nameTenant.namespace;\n    }\n    return defaultNamespace;\n  });\n\n  const tenantName = useSelector((state: AppState) => {\n    var defaultTenantName = \"<tenant-name>\";\n    if (tenantNameParam !== \"\") {\n      return tenantNameParam;\n    }\n\n    if (state.createTenant.fields.nameTenant.tenantName !== \"\") {\n      return state.createTenant.fields.nameTenant.tenantName;\n    }\n    return defaultTenantName;\n  });\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CertificateIcon />}\n          description={`TLS Certificates Warning`}\n        />\n        <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n          Automatic certificate generation is not enabled.\n          <br />\n          <br />\n          If you wish to continue only with <b>custom certificates</b> make sure\n          they are valid for the following internode hostnames, i.e.:\n          <br />\n          <br />\n          <div\n            style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}\n          >\n            minio.{namespace}\n            <br />\n            minio.{namespace}.svc\n            <br />\n            minio.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{tenantName}-hl.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{namespace}.svc.&#x3C;cluster domain&#x3E;\n          </div>\n          <br />\n          Replace <em>&#x3C;tenant-name&#x3E;</em>,{\" \"}\n          <em>&#x3C;namespace&#x3E;</em> and\n          <em>&#x3C;cluster domain&#x3E;</em> with the actual values for your\n          MinIO tenant.\n          <br />\n          <br />\n          You can learn more at our{\" \"}\n          <a\n            href=\"https://min.io/docs/minio/kubernetes/upstream/operations/network-encryption.html?ref=op#id5\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            documentation\n          </a>\n          .\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TLSHelpBox;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport { LDAPIcon, OIDCIcon, UsersIcon } from \"mds\";\n\nexport const OIDCLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <OIDCIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Open ID</Grid>\n    </Grid>\n  );\n};\n\nexport const LDAPLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <LDAPIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>LDAP / Active Directory</Grid>\n    </Grid>\n  );\n};\n\nexport const BuiltInLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <UsersIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Built-in</Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z\"\n}), 'Casino');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    content: '\"\"',\n    alignSelf: 'center'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation !== 'vertical' && {\n  '&::before, &::after': {\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n      absolute = false,\n      children,\n      className,\n      component = children ? 'div' : 'hr',\n      flexItem = false,\n      light = false,\n      orientation = 'horizontal',\n      role = component !== 'hr' ? 'separator' : undefined,\n      textAlign = 'center',\n      variant = 'fullWidth'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["withStyles","theme","createStyles","container","display","flexFlow","padding","inputWithCopy","width","background","height","marginRight","inputLabel","_objectSpread","fieldBasic","fontSize","_ref","_ref$label","label","_ref$value","value","_ref$classes","classes","_jsxs","className","children","_jsx","OutlinedInput","readOnly","endAdornment","InputAdornment","position","TooltipWrapper","tooltip","CopyToClipboard","text","Button","id","onClick","onMouseDown","style","icon","CopyIcon","download","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","warningBlock","color","margin","alignItems","credentialTitle","fontWeight","buttonContainer","justifyContent","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","title","titleIcon","ServiceAccountCredentialsIcon","Grid","item","xs","formScrollable","React","Array","isArray","map","credentialsPair","index","_Fragment","CredentialItem","accessKey","secretKey","undefined","WarnIcon","consoleExtras","itemMap","url","api","path","JSON","stringify","DownloadIcon","variant","length","allCredentials","_ref$tooltip","_ref$mode","mode","onBeforeChange","_ref$editorHeight","editorHeight","sx","marginBottom","InputLabel","tooltipContainer","Tooltip","placement","HelpIcon","overflow","border","CodeEditor","language","onChange","evn","target","backgroundColor","fontFamily","minHeight","borderTop","Box","paddingRight","marginLeft","type","tooltipHelper","valueString","maxWidth","whiteSpace","textOverflow","fileInputField","fileInputStyles","textBoxContainer","paddingLeft","name","_ref$disabled","disabled","required","_ref$error","error","_ref$accept","accept","_useState","useState","_useState2","_slicedToArray","showFileSelector","setShowSelector","concat","fieldBottom","fieldContainer","errorInField","htmlFor","fieldLabelError","e","fileName","evt","callback","file","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","IconButton","component","disableRipple","disableFocusRipple","size","CancelIcon","ErrorBlock","errorMessage","fileReselect","AttachFileIcon","FormHr","styled","_templateObject","_taggedTemplateLiteral","deleteDialogStyles","content","paddingBottom","customDialogSize","snackBarCommon","_ref$wideLimit","wideLimit","noContentPadding","_ref$titleIcon","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","Dialog","scroll","event","reason","root","DialogTitle","titleText","closeContainer","closeButton","CloseIcon","MainError","isModal","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","_ref$errorProps","errorProps","cloneElement","configSectionItem","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","paddingTop","responsiveSectionItem","wrapperContainer","envVarRow","borderBottom","flex","minWidth","fileItem","rowActions","overlayAction","modalBasic","wizardCommon","formFieldStyles","exposeMinIO","createTenant","fields","configure","exposeConsole","setDomains","consoleDomain","minioDomains","tenantCustom","tenantEnvVars","envVars","tenantSecurityContext","customRuntime","runtimeClassName","validationErrors","setValidationErrors","updateField","useCallback","field","updateAddField","pageName","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","minioExtraValidations","validation","pattern","customPatternMessage","_toConsumableArray","commonVal","commonFormValidation","isPageValid","valid","Object","keys","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","H3Section","descriptionText","h3Section","FormSwitchWrapper","checked","InputBoxWrapper","placeholder","domain","copyDomains","updateMinIODomain","addNewMinIODomain","AddIcon","removeMinIODomain","RemoveIcon","multiContainer","min","SelectWrapper","fsGroupChangePolicy","options","runAsNonRoot","Divider","envVar","formFieldRow","key","existingEnvVars","setEnvVars","keyPair","i","push","filter","fIndex","useStyles","makeStyles","adUserDnRows","buttonTray","idpSelection","identityProvider","ADURL","ADSkipTLS","ADServerInsecure","ADGroupSearchBaseDN","ADGroupSearchFilter","ADUserDNs","ADGroupDNs","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","customIDPValidation","Fragment","Typography","gutterBottom","_","setIDPADUsrAtIndex","userDN","addIDPADUsrAtIndex","removeIDPADUsrAtIndex","DeleteIcon","setIDPADGroupAtIndex","addIDPADGroupAtIndex","removeIDPADGroupAtIndex","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","shortened","gridTemplateColumns","gridGap","accessKeys","secretKeys","setIDPUsrAtIndex","setIDPPwdAtIndex","addIDPNewKeyPair","removeIDPKeyPairAtIndex","getRandomString","CasinoIcon","protocolRadioOptions","RadioGroupSelector","currentSelection","setIDP","selectorOptions","BuiltInLogoElement","OIDCLogoElement","LDAPLogoElement","IDPBuiltIn","IDPOpenID","IDPActiveDirectory","minioCertificateRows","minioCertsContainer","minioCACertsRow","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","minioServerCertificates","minioClientCertificates","caCertificates","minioCAsCertificates","spacing","description","TLSHelpBox","FileSelector","encodedValue","addFileToKeyPair","cert","addKeyPair","deleteKeyPair","addFileToClientKeyPair","addClientKeyPair","deleteClientKeyPair","addFileToCaCertificates","addCaCertificate","deleteCaCertificate","encryptionTab","encryption","vaultEndpoint","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","encryptionValidation","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","encryptionTypeOptions","mutualTlsConfig","rightSpacer","responsiveContainer","replicas","rawConfiguration","enableEncryption","encryptionType","enableCustomCertsForKES","kesServerCertificate","minioMTLSCertificate","kmsMTLSCertificate","kmsCA","kesSecurityContext","encryptionAvailable","encoded_key","encoded_cert","SectionH1","textAlign","indicatorLabels","Tabs","indicatorColor","textColor","scrollButtons","Tab","CodeMirrorWrapper","editor","VaultKMSAdd","AzureKMSAdd","GCPKMSAdd","AWSKMSAdd","GemaltoKMSAdd","addFileKESServerCert","addFileMinIOMTLSCert","addFileKMSMTLSCert","addFileKMSCa","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","_useState3","_useState4","loading","setLoading","_useState5","_useState6","keyValueMap","setKeyValueMap","_useState7","_useState8","keyOptions","setKeyOptions","invoke","then","res","k","catch","err","setModalErrorSnackMessage","vl","kvp","kvs","a","indexOf","join","splittedLabels","forEach","splitItem","updateToleration","alterToleration","_defineProperty","setTolerationInfo","tolerationValue","affinityHelpText","newKey","newLKP","arrCp","setKeyValuePairs","v","tol","_tol$tolerationSecond","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewToleration","removeToleration","customImage","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","kesImage","table","nodes","tenantSize","memoryNode","resourcesMemoryRequest","ecParity","distribution","ecParityCalc","cpuToUse","resourcesCPURequest","integrationSelection","usableInformation","storageFactors","find","erasureCode","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","drivesPerServer","driveSize","sizeUnit","wrapText","wordWrap","namespace","nameTenant","addNamespaceLoading","addNSLoading","addNamespaceOpen","addNSOpen","ConfirmDialog","confirmText","confirmButtonProps","isOpen","ConfirmModalIcon","isLoading","onConfirm","createNamespaceAsync","closeAddNSModal","confirmationContent","LinearProgress","DialogContentText","formToRender","showNSCreateButton","namespaceError","openAddNSConfirm","debounceNamespace","useMemo","debounce","validateNamespaceAsync","cancel","AddNamespaceModal","setNamespace","overlayId","overlayIcon","openAddNSModal","NameTenantField","tenantName","tenantNameError","setTenantName","sizePreview","selectedStorageClass","selectedStorageType","storageClasses","features","selFeatures","isValid","IMkEnvs","default","NamespaceSelector","setStorageType","storageType","mkPanelConfigurations","TenantSize","SizePreview","formRender","setFormRender","setConfiguration","resourcesConfigurations","includes","NameTenantMain","requiredPages","addSending","addingTenant","validPages","enabled","every","createTenantAsync","navigate","useNavigate","showNewCredentials","createdAccount","CredentialsPrompt","resetAddTenantForm","pageBox","settingsCommon","cancelButton","action","createButton","componentRender","CreateTenantButton","filteredWizardSteps","TenantResources","buttons","advancedOnly","Configure","Images","Affinity","IdentityProvider","Security","Encryption","NewTenantCredentials","PageHeaderWrapper","BackLink","PageLayout","GenericWizard","wizardSteps","aws","HelpBox","iconComponent","StorageIcon","help","FeatureItem","fontStyle","params","useParams","tenantNameParam","tenantNamespaceParam","tenantNamespace","borderRadius","CertificateIcon","href","rel","columnGap","OIDCIcon","LDAPIcon","UsersIcon","_theme$palette","errorBlock","palette","main","_ref$withBreak","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","_excluded","DividerRoot","slot","overridesResolver","props","styles","ownerState","absolute","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","_extends","flexShrink","borderWidth","borderStyle","borderColor","vars","divider","borderBottomWidth","bottom","left","dividerChannel","alpha","borderRightWidth","alignSelf","_ref2","_ref3","_ref4","flexDirection","borderLeft","_ref5","DividerWrapper","wrapper","wrapperVertical","_ref6","inProps","ref","useThemeProps","_props$absolute","_props$component","_props$flexItem","_props$light","_props$orientation","_props$role","role","_props$textAlign","_props$variant","other","_objectWithoutPropertiesLoose","slots","composeClasses","getDividerUtilityClass","useUtilityClasses","as","clsx","getInputAdornmentUtilityClass","generateUtilityClass","_span","generateUtilityClasses","InputAdornmentRoot","capitalize","disablePointerEvents","active","inputAdornmentClasses","positionStart","hiddenLabel","pointerEvents","_props$disablePointer","_props$disableTypogra","disableTypography","variantProp","muiFormControl","useFormControl","FormControlContext","Provider"],"sourceRoot":""}