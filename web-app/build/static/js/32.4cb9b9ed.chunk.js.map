{"version":3,"file":"static/js/32.4cb9b9ed.chunk.js","mappings":"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","sources":["screens/Console/Common/Hooks/useApi.tsx","screens/Console/Common/WarningMessage/WarningMessage.tsx","screens/Console/Tenants/ListTenants/DeleteTenant.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction,\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any, headers?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data, headers)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\ninterface IWarningMessage {\n  classes: any;\n  label: any;\n  title: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      backgroundColor: \"#e78794\",\n      borderRadius: 3,\n      marginBottom: 20,\n      padding: 1,\n      paddingBottom: 15,\n    },\n    labelHeadline: {\n      color: \"#000000\",\n      fontSize: 14,\n      marginLeft: 20,\n    },\n    labelText: {\n      color: \"#000000\",\n      fontSize: 14,\n      marginLeft: 20,\n      marginRight: 40,\n    },\n  });\n\nconst WarningMessage = ({ classes, label, title }: IWarningMessage) => {\n  return (\n    <div className={classes.headerContainer}>\n      <h4 className={classes.labelHeadline}>{title}</h4>\n      <div className={classes.labelText}>{label}</div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(WarningMessage);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport WarningMessage from \"../../Common/WarningMessage/WarningMessage\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { Tenant } from \"../../../../api/operatorApi\";\n\ninterface IDeleteTenant {\n  deleteOpen: boolean;\n  selectedTenant: Tenant;\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\n}\n\nconst DeleteTenant = ({\n  deleteOpen,\n  selectedTenant,\n  closeDeleteModalAndRefresh,\n}: IDeleteTenant) => {\n  const dispatch = useAppDispatch();\n  const [retypeTenant, setRetypeTenant] = useState(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteVolumes, setDeleteVolumes] = useState<boolean>(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const onConfirmDelete = () => {\n    if (retypeTenant !== selectedTenant.name) {\n      setErrorSnackMessage({\n        errorMessage: \"Tenant name is incorrect\",\n        detailedError: \"\",\n      });\n      return;\n    }\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/namespaces/${selectedTenant.namespace}/tenants/${selectedTenant.name}`,\n      { delete_pvcs: deleteVolumes },\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Tenant`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypeTenant !== selectedTenant.name || deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          {deleteVolumes && (\n            <Grid item xs={12}>\n              <WarningMessage\n                title={\"WARNING\"}\n                label={\n                  \"Delete Volumes: Data will be permanently deleted. Please proceed with caution.\"\n                }\n              />\n            </Grid>\n          )}\n          To continue please type <b>{selectedTenant.name}</b> in the box.\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"retype-tenant\"\n              name=\"retype-tenant\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypeTenant(event.target.value);\n              }}\n              label=\"\"\n              value={retypeTenant}\n            />\n            <br />\n            <FormSwitchWrapper\n              checked={deleteVolumes}\n              id={`delete-volumes`}\n              label={\"Delete Volumes\"}\n              name={`delete-volumes`}\n              onChange={() => {\n                setDeleteVolumes(!deleteVolumes);\n              }}\n              value={deleteVolumes}\n            />\n          </Grid>\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteTenant;\n"],"names":["useApi","onSuccess","onError","isLoading","setIsLoading","useState","callApi","method","url","data","headers","api","invoke","then","res","catch","err","withStyles","theme","createStyles","headerContainer","backgroundColor","borderRadius","marginBottom","padding","paddingBottom","labelHeadline","color","fontSize","marginLeft","labelText","marginRight","_ref","classes","label","title","_jsxs","className","children","_jsx","deleteOpen","selectedTenant","closeDeleteModalAndRefresh","dispatch","useAppDispatch","retypeTenant","setRetypeTenant","deleteVolumes","setDeleteVolumes","deleteLoading","invokeDeleteApi","onDelSuccess","setErrorSnackMessage","ConfirmDialog","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","onConfirm","onConfirmDelete","name","concat","namespace","delete_pvcs","errorMessage","detailedError","onClose","confirmButtonProps","disabled","confirmationContent","DialogContentText","Grid","item","xs","WarningMessage","InputBoxWrapper","id","onChange","event","target","value","FormSwitchWrapper","checked"],"sourceRoot":""}