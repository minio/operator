{"version":3,"file":"static/js/145.be7fdd7f.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/SubnetLicenseTenant.tsx","screens/Console/Tenants/TenantDetails/TenantLicense.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { containerForHeader } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { Typography } from \"@mui/material\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport Paper from \"@mui/material/Paper\";\nimport { Button } from \"mds\";\nimport { SubnetInfo } from \"../../License/types\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport { Tenant } from \"../../../../api/operatorApi\";\n\ninterface ISubnetLicenseTenant {\n  classes: any;\n  tenant: Tenant | null;\n  loadingActivateProduct: any;\n  loadingLicenseInfo: boolean;\n  licenseInfo: SubnetInfo | undefined;\n  activateProduct: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paperContainer: {\n      padding: \"15px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    licenseInfoValue: {\n      textTransform: \"none\",\n      fontSize: 14,\n      fontWeight: \"bold\",\n    },\n    licenseContainer: {\n      position: \"relative\",\n      padding: \"20px 52px 0px 28px\",\n      background: \"#032F51\",\n      boxShadow: \"0px 3px 7px #00000014\",\n      \"& h2\": {\n        color: \"#FFF\",\n        marginBottom: 67,\n      },\n      \"& a\": {\n        textDecoration: \"none\",\n      },\n      \"& h3\": {\n        color: \"#FFFFFF\",\n        marginBottom: \"30px\",\n        fontWeight: \"bold\",\n      },\n      \"& h6\": {\n        color: \"#FFFFFF !important\",\n      },\n    },\n    licenseInfo: { color: \"#FFFFFF\", position: \"relative\" },\n    licenseInfoTitle: {\n      textTransform: \"none\",\n      color: \"#BFBFBF\",\n      fontSize: 11,\n    },\n    verifiedIcon: {\n      width: 96,\n      position: \"absolute\",\n      right: 0,\n      bottom: 29,\n    },\n    noUnderLine: {\n      textDecoration: \"none\",\n    },\n    ...containerForHeader,\n  });\n\nconst SubnetLicenseTenant = ({\n  classes,\n  tenant,\n  loadingActivateProduct,\n  loadingLicenseInfo,\n  licenseInfo,\n  activateProduct,\n}: ISubnetLicenseTenant) => {\n  const expiryTime = tenant?.subnet_license\n    ? DateTime.fromISO(tenant.subnet_license?.expires_at!)\n    : DateTime.now();\n\n  return (\n    <Paper\n      className={\n        tenant && tenant.subnet_license ? classes.licenseContainer : \"\"\n      }\n    >\n      {tenant && tenant.subnet_license ? (\n        <React.Fragment>\n          <Grid container className={classes.licenseInfo}>\n            <Grid item xs={6}>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                License\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                Commercial License\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Organization\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {tenant.subnet_license.organization}\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Registered Capacity\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {niceBytes(\n                  (\n                    (tenant.subnet_license?.storage_capacity || 0) *\n                    1099511627776\n                  ) // 1 Terabyte = 1099511627776 Bytes\n                    .toString(10),\n                )}\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Expiry Date\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {expiryTime.toFormat(\"yyyy-MM-dd\")}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Subscription Plan\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {tenant.subnet_license.plan}\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Requestor\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {tenant.subnet_license.email}\n              </Typography>\n            </Grid>\n            <img\n              className={classes.verifiedIcon}\n              src={\"/verified.svg\"}\n              alt=\"verified\"\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        !loadingLicenseInfo && (\n          <Grid className={classes.paperContainer}>\n            {!licenseInfo && (\n              <Link\n                to={\"/license\"}\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n                className={classes.noUnderLine}\n              >\n                <TooltipWrapper tooltip={\"Activate Product\"}>\n                  <Button\n                    id={\"activate-product\"}\n                    label={\"Activate Product\"}\n                    onClick={() => false}\n                    variant={\"callAction\"}\n                  />\n                </TooltipWrapper>\n              </Link>\n            )}\n            {licenseInfo && tenant && (\n              <TooltipWrapper tooltip={\"Attach License\"}>\n                <Button\n                  id={\"attach-license\"}\n                  disabled={loadingActivateProduct}\n                  label={\"Attach License\"}\n                  onClick={() => activateProduct(tenant.namespace, tenant.name)}\n                  variant={\"callAction\"}\n                />\n              </TooltipWrapper>\n            )}\n          </Grid>\n        )\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(SubnetLicenseTenant);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { SubnetInfo } from \"../../License/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport SubnetLicenseTenant from \"./SubnetLicenseTenant\";\nimport api from \"../../../../common/api\";\nimport { Loader } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { setTenantDetailsLoad } from \"../tenantsSlice\";\n\ninterface ITenantLicense {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    ...containerForHeader,\n  });\n\nconst TenantLicense = ({ classes }: ITenantLicense) => {\n  const dispatch = useAppDispatch();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant,\n  );\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n\n  const [licenseInfo, setLicenseInfo] = useState<SubnetInfo>();\n  const [loadingLicenseInfo, setLoadingLicenseInfo] = useState<boolean>(true);\n  const [loadingActivateProduct, setLoadingActivateProduct] =\n    useState<boolean>(false);\n\n  const activateProduct = (namespace: string, tenant: string) => {\n    if (loadingActivateProduct) {\n      return;\n    }\n    setLoadingActivateProduct(true);\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/subscription/namespaces/${namespace}/tenants/${tenant}/activate`,\n        {},\n      )\n      .then(() => {\n        setLoadingActivateProduct(false);\n        dispatch(setTenantDetailsLoad(true));\n        setLoadingLicenseInfo(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoadingActivateProduct(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  useEffect(() => {\n    if (loadingLicenseInfo) {\n      api\n        .invoke(\"GET\", `/api/v1/subscription/info`)\n        .then((res: SubnetInfo) => {\n          setLicenseInfo(res);\n          setLoadingLicenseInfo(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingLicenseInfo(false);\n        });\n    }\n  }, [loadingLicenseInfo]);\n\n  return (\n    <Fragment>\n      <h1 className={classes.sectionTitle}>License</h1>\n      {loadingTenant ? (\n        <div className={classes.loaderAlign}>\n          <Loader />\n        </div>\n      ) : (\n        <Fragment>\n          {tenant && (\n            <Grid container>\n              <Grid item xs={12}>\n                <SubnetLicenseTenant\n                  tenant={tenant}\n                  loadingLicenseInfo={loadingLicenseInfo}\n                  loadingActivateProduct={loadingActivateProduct}\n                  licenseInfo={licenseInfo}\n                  activateProduct={activateProduct}\n                />\n              </Grid>\n            </Grid>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TenantLicense);\n"],"names":["withStyles","theme","createStyles","paperContainer","padding","display","alignItems","justifyContent","licenseInfoValue","textTransform","fontSize","fontWeight","licenseContainer","position","background","boxShadow","color","marginBottom","textDecoration","licenseInfo","licenseInfoTitle","verifiedIcon","width","right","bottom","noUnderLine","containerForHeader","_ref","_tenant$subnet_licens","_tenant$subnet_licens2","classes","tenant","loadingActivateProduct","loadingLicenseInfo","activateProduct","expiryTime","subnet_license","DateTime","fromISO","expires_at","now","_jsx","Paper","className","children","React","_jsxs","Grid","container","item","xs","Typography","variant","gutterBottom","organization","niceBytes","storage_capacity","toString","toFormat","plan","email","src","alt","Link","to","onClick","e","stopPropagation","TooltipWrapper","tooltip","Button","id","label","disabled","namespace","name","tenantDetailsStyles","loaderAlign","textAlign","dispatch","useAppDispatch","loadingTenant","useSelector","state","tenants","tenantInfo","setLicenseInfo","useState","setLoadingLicenseInfo","setLoadingActivateProduct","useEffect","api","invoke","then","res","catch","err","Fragment","sectionTitle","Loader","SubnetLicenseTenant","concat","setTenantDetailsLoad","setErrorSnackMessage"],"sourceRoot":""}