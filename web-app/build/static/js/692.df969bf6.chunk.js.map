{"version":3,"file":"static/js/692.df969bf6.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolResources.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolConfiguration.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolPodPlacement.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/AddPoolCreateButton.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/AddPool.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  formFieldStyles,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport { niceBytes } from \"../../../../../../common/utils\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport api from \"../../../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { IQuotaElement, IQuotas } from \"../../../ListTenants/utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport InputUnitMenu from \"../../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport {\n  isPoolPageValid,\n  setPoolField,\n  setPoolStorageClasses,\n} from \"./addPoolSlice\";\nimport H3Section from \"../../../../Common/H3Section\";\n\ninterface IPoolResourcesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      margin: \"auto\",\n      justifyContent: \"center\",\n      \"& div\": {\n        width: 150,\n        \"@media (max-width: 900px)\": {\n          flexFlow: \"column\",\n        },\n      },\n    },\n    factorElements: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      marginLeft: 30,\n    },\n    sizeNumber: {\n      fontSize: 35,\n      fontWeight: 700,\n      textAlign: \"center\",\n    },\n    sizeDescription: {\n      fontSize: 14,\n      color: \"#777\",\n      textAlign: \"center\",\n    },\n    ...formFieldStyles,\n    ...wizardCommon,\n  });\n\nconst PoolResources = ({ classes }: IPoolResourcesProps) => {\n  const dispatch = useAppDispatch();\n\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n  const storageClasses = useSelector(\n    (state: AppState) => state.addPool.storageClasses,\n  );\n  const numberOfNodes = useSelector((state: AppState) =>\n    state.addPool.setup.numberOfNodes.toString(),\n  );\n  const storageClass = useSelector(\n    (state: AppState) => state.addPool.setup.storageClass,\n  );\n  const volumeSize = useSelector((state: AppState) =>\n    state.addPool.setup.volumeSize.toString(),\n  );\n  const volumesPerServer = useSelector((state: AppState) =>\n    state.addPool.setup.volumesPerServer.toString(),\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const instanceCapacity: number =\n    parseInt(volumeSize) * 1073741824 * parseInt(volumesPerServer);\n  const totalCapacity: number = instanceCapacity * parseInt(numberOfNodes);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [\n      {\n        fieldKey: \"number_of_nodes\",\n        required: true,\n        value: numberOfNodes.toString(),\n        customValidation:\n          parseInt(numberOfNodes) < 1 || isNaN(parseInt(numberOfNodes)),\n        customValidationMessage: \"Number of servers must be at least 1\",\n      },\n      {\n        fieldKey: \"pool_size\",\n        required: true,\n        value: volumeSize.toString(),\n        customValidation:\n          parseInt(volumeSize) < 1 || isNaN(parseInt(volumeSize)),\n        customValidationMessage: \"Pool Size cannot be 0\",\n      },\n      {\n        fieldKey: \"volumes_per_server\",\n        required: true,\n        value: volumesPerServer.toString(),\n        customValidation:\n          parseInt(volumesPerServer) < 1 || isNaN(parseInt(volumesPerServer)),\n        customValidationMessage: \"1 volume or more are required\",\n      },\n    ];\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPoolPageValid({\n        page: \"setup\",\n        status: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, numberOfNodes, volumeSize, volumesPerServer, storageClass]);\n\n  useEffect(() => {\n    if (storageClasses.length === 0 && tenant) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenant.namespace}/resourcequotas/${tenant.namespace}-storagequota`,\n        )\n        .then((res: IQuotas) => {\n          const elements: IQuotaElement[] = get(res, \"elements\", []);\n\n          const newStorage = elements.map((storageClass: any) => {\n            const name = get(storageClass, \"name\", \"\").split(\n              \".storageclass.storage.k8s.io/requests.storage\",\n            )[0];\n\n            return { label: name, value: name };\n          });\n\n          dispatch(\n            setPoolField({\n              page: \"setup\",\n              field: \"storageClass\",\n              value: newStorage[0].value,\n            }),\n          );\n\n          dispatch(setPoolStorageClasses(newStorage));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          console.error(err);\n        });\n    }\n  }, [tenant, storageClasses, dispatch]);\n\n  const setFieldInfo = (fieldName: string, value: any) => {\n    dispatch(\n      setPoolField({\n        page: \"setup\",\n        field: fieldName,\n        value: value,\n      }),\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>New Pool Configuration</H3Section>\n        <span className={classes.descriptionText}>\n          Configure a new Pool to expand MinIO storage\n        </span>\n      </div>\n\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"number_of_nodes\"\n          name=\"number_of_nodes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            const intValue = parseInt(e.target.value);\n\n            if (e.target.validity.valid && !isNaN(intValue)) {\n              setFieldInfo(\"numberOfNodes\", intValue);\n            } else if (isNaN(intValue)) {\n              setFieldInfo(\"numberOfNodes\", 0);\n            }\n          }}\n          label=\"Number of Servers\"\n          value={numberOfNodes}\n          error={validationErrors[\"number_of_nodes\"] || \"\"}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"pool_size\"\n          name=\"pool_size\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            const intValue = parseInt(e.target.value);\n\n            if (e.target.validity.valid && !isNaN(intValue)) {\n              setFieldInfo(\"volumeSize\", intValue);\n            } else if (isNaN(intValue)) {\n              setFieldInfo(\"volumeSize\", 0);\n            }\n          }}\n          label=\"Volume Size\"\n          value={volumeSize}\n          error={validationErrors[\"pool_size\"] || \"\"}\n          pattern={\"[0-9]*\"}\n          overlayObject={\n            <InputUnitMenu\n              id={\"quota_unit\"}\n              onUnitChange={() => {}}\n              unitSelected={\"Gi\"}\n              unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n              disabled={true}\n            />\n          }\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"volumes_per_sever\"\n          name=\"volumes_per_sever\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            const intValue = parseInt(e.target.value);\n\n            if (e.target.validity.valid && !isNaN(intValue)) {\n              setFieldInfo(\"volumesPerServer\", intValue);\n            } else if (isNaN(intValue)) {\n              setFieldInfo(\"volumesPerServer\", 0);\n            }\n          }}\n          label=\"Volumes per Server\"\n          value={volumesPerServer}\n          error={validationErrors[\"volumes_per_server\"] || \"\"}\n          pattern={\"[0-9]*\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <SelectWrapper\n          id=\"storage_class\"\n          name=\"storage_class\"\n          onChange={(e: SelectChangeEvent<string>) => {\n            setFieldInfo(\"storageClass\", e.target.value as string);\n          }}\n          label=\"Storage Class\"\n          value={storageClass}\n          options={storageClasses}\n          disabled={storageClasses.length < 1}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.bottomContainer}>\n        <div className={classes.factorElements}>\n          <div>\n            <div className={classes.sizeNumber}>\n              {niceBytes(instanceCapacity.toString(10))}\n            </div>\n            <div className={classes.sizeDescription}>Instance Capacity</div>\n          </div>\n          <div>\n            <div className={classes.sizeNumber}>\n              {niceBytes(totalCapacity.toString(10))}\n            </div>\n            <div className={classes.sizeDescription}>Total Capacity</div>\n          </div>\n        </div>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(PoolResources);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPoolPageValid, setPoolField } from \"./addPoolSlice\";\nimport H3Section from \"../../../../Common/H3Section\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst PoolConfiguration = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const securityContextEnabled = useSelector(\n    (state: AppState) => state.addPool.configuration.securityContextEnabled,\n  );\n  const securityContext = useSelector(\n    (state: AppState) => state.addPool.configuration.securityContext,\n  );\n  const customRuntime = useSelector(\n    (state: AppState) => state.addPool.configuration.customRuntime,\n  );\n  const runtimeClassName = useSelector(\n    (state: AppState) => state.addPool.configuration.runtimeClassName,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        setPoolField({\n          page: \"configuration\",\n          field: field,\n          value: value,\n        }),\n      );\n    },\n    [dispatch],\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (securityContextEnabled) {\n      customAccountValidation = [\n        {\n          fieldKey: \"pool_securityContext_runAsUser\",\n          required: true,\n          value: securityContext.runAsUser,\n          customValidation:\n            securityContext.runAsUser === \"\" ||\n            parseInt(securityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"pool_securityContext_runAsGroup\",\n          required: true,\n          value: securityContext.runAsGroup,\n          customValidation:\n            securityContext.runAsGroup === \"\" ||\n            parseInt(securityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"pool_securityContext_fsGroup\",\n          required: true,\n          value: securityContext.fsGroup!,\n          customValidation:\n            securityContext.fsGroup === \"\" ||\n            parseInt(securityContext.fsGroup!) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPoolPageValid({\n        page: \"configure\",\n        status: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, securityContextEnabled, securityContext]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Configure</H3Section>\n        <span className={classes.descriptionText}>\n          Aditional Configurations for the new Pool\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"pool_configuration\"\n          name=\"pool_configuration\"\n          checked={securityContextEnabled}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"securityContextEnabled\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {securityContextEnabled && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Pool's Security Context\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"pool_securityContext_runAsUser\"\n                    name=\"pool_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"securityContext\", {\n                        ...securityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"pool_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={securityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"pool_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"pool_securityContext_runAsGroup\"\n                    name=\"pool_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"securityContext\", {\n                        ...securityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"pool_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={securityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"pool_securityContext_runAsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"pool_securityContext_fsGroup\"\n                    name=\"pool_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"securityContext\", {\n                        ...securityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"pool_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={securityContext.fsGroup!}\n                    required\n                    error={\n                      validationErrors[\"pool_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"securityContextRunAsNonRoot\"\n                  id=\"pool_securityContext_runAsNonRoot\"\n                  name=\"pool_securityContext_runAsNonRoot\"\n                  checked={securityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"securityContext\", {\n                      ...securityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Grid\n        item\n        xs={12}\n        className={classes.configSectionItem}\n        sx={{ marginTop: \"10px\" }}\n      >\n        <FormSwitchWrapper\n          value=\"customRuntime\"\n          id=\"tenant_custom_runtime\"\n          name=\"tenant_custom_runtime\"\n          checked={customRuntime}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"customRuntime\", checked);\n          }}\n          label={\"Custom Runtime Configurations\"}\n        />\n      </Grid>\n      {customRuntime && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Runtime Configurations\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"tenant_runtime_runtimeClassName\"\n                  name=\"tenant_runtime_runtimeClassName\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"runtimeClassName\", e.target.value);\n                    cleanValidation(\"tenant_runtime_runtimeClassName\");\n                  }}\n                  label=\"Runtime Class Name\"\n                  value={runtimeClassName}\n                  error={\n                    validationErrors[\"tenant_runtime_runtimeClassName\"] || \"\"\n                  }\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(PoolConfiguration);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport { LabelKeyPair } from \"../../../types\";\nimport RadioGroupSelector from \"../../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../../common/api\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { AddIcon, RemoveIcon } from \"mds\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../../systemSlice\";\nimport {\n  addNewPoolToleration,\n  isPoolPageValid,\n  removePoolToleration,\n  setPoolField,\n  setPoolKeyValuePairs,\n  setPoolTolerationInfo,\n} from \"./addPoolSlice\";\nimport H3Section from \"../../../../Common/H3Section\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.addPool.affinity.podAffinity,\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.addPool.affinity.nodeSelectorLabels,\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.addPool.affinity.withPodAntiAffinity,\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.addPool.nodeSelectorPairs,\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.addPool.tolerations,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {},\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        setPoolField({\n          page: \"affinity\",\n          field: field,\n          value: value,\n        }),\n      );\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPoolPageValid({\n        page: \"affinity\",\n        status: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setPoolTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      }),\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Pod Placement</H3Section>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setPoolKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setPoolKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setPoolKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setPoolKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setPoolKeyValuePairs(arrCp));\n                            }}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        {keyValuePairs.length > 1 && (\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                const arrCp = keyValuePairs.filter(\n                                  (item, index) => index !== i,\n                                );\n                                dispatch(setPoolKeyValuePairs(arrCp));\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        )}\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewPoolToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removePoolToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"mds\";\nimport React from \"react\";\nimport { addPoolAsync } from \"./addPoolThunks\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\n\nconst AddPoolCreateButton = () => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) => state.addPool.setup.storageClass,\n  );\n  const validPages = useSelector((state: AppState) => state.addPool.validPages);\n\n  const sending = useSelector((state: AppState) => state.addPool.sending);\n  const requiredPages = [\"setup\", \"affinity\", \"configure\"];\n  const enabled =\n    !sending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"callAction\"\n      onClick={() => {\n        dispatch(addPoolAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n      label={\"Create\"}\n    />\n  );\n};\n\nexport default AddPoolCreateButton;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { niceBytes } from \"../../../../../../common/utils\";\nimport { LinearProgress } from \"@mui/material\";\nimport PageLayout from \"../../../../Common/Layout/PageLayout\";\nimport GenericWizard from \"../../../../Common/GenericWizard/GenericWizard\";\nimport { IWizardElement } from \"../../../../Common/GenericWizard/types\";\nimport PoolResources from \"./PoolResources\";\nimport ScreenTitle from \"../../../../Common/ScreenTitle/ScreenTitle\";\nimport { BackLink, TenantsIcon } from \"mds\";\n\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport PoolConfiguration from \"./PoolConfiguration\";\nimport PoolPodPlacement from \"./PoolPodPlacement\";\n\nimport { resetPoolForm } from \"./addPoolSlice\";\nimport AddPoolCreateButton from \"./AddPoolCreateButton\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport PageHeaderWrapper from \"../../../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      margin: \"auto\",\n      justifyContent: \"center\",\n      \"& div\": {\n        width: 150,\n        \"@media (max-width: 900px)\": {\n          flexFlow: \"column\",\n        },\n      },\n    },\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n      borderTop: 0,\n    },\n    addPoolTitle: {\n      border: \"1px solid #EAEAEA\",\n      borderBottom: 0,\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  }),\n);\n\nconst AddPool = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n  const sending = useSelector((state: AppState) => state.addPool.sending);\n  const navigateTo = useSelector((state: AppState) => state.addPool.navigateTo);\n\n  const poolsURL = `/namespaces/${tenant?.namespace || \"\"}/tenants/${\n    tenant?.name || \"\"\n  }/pools`;\n\n  useEffect(() => {\n    if (navigateTo !== \"\") {\n      const goTo = `${navigateTo}`;\n      dispatch(resetPoolForm());\n      navigate(goTo);\n    }\n  }, [navigateTo, navigate, dispatch]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetPoolForm());\n      navigate(poolsURL);\n    },\n  };\n\n  const createButton = {\n    componentRender: <AddPoolCreateButton key={\"add-pool-crate\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <PoolResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configuration\",\n      advancedOnly: true,\n      componentRender: <PoolConfiguration />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <PoolPodPlacement />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeaderWrapper\n          label={\n            <Fragment>\n              <BackLink\n                label={`Tenant Pools`}\n                onClick={() => navigate(poolsURL)}\n              />\n            </Fragment>\n          }\n        />\n        <PageLayout>\n          <Grid item xs={12} className={classes.addPoolTitle}>\n            <ScreenTitle\n              icon={<TenantsIcon />}\n              title={`Add New Pool to ${tenant?.name || \"\"}`}\n              subTitle={\n                <Fragment>\n                  Namespace: {tenant?.namespace || \"\"} / Current Capacity:{\" \"}\n                  {niceBytes((tenant?.total_size || 0).toString(10))}\n                </Fragment>\n              }\n            />\n          </Grid>\n          {sending && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n          <Grid item xs={12} className={classes.pageBox}>\n            <GenericWizard wizardSteps={wizardSteps} />\n          </Grid>\n        </PageLayout>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AddPool;\n"],"names":["withStyles","theme","createStyles","bottomContainer","display","flexGrow","alignItems","margin","justifyContent","width","flexFlow","factorElements","marginLeft","sizeNumber","fontSize","fontWeight","textAlign","sizeDescription","color","formFieldStyles","wizardCommon","_ref","classes","dispatch","useAppDispatch","tenant","useSelector","state","tenants","tenantInfo","storageClasses","addPool","numberOfNodes","setup","toString","storageClass","volumeSize","volumesPerServer","validationErrors","setValidationErrors","useState","instanceCapacity","parseInt","totalCapacity","useEffect","customAccountValidation","fieldKey","required","value","customValidation","isNaN","customValidationMessage","commonVal","commonFormValidation","isPoolPageValid","page","status","Object","keys","length","api","invoke","concat","namespace","then","res","newStorage","get","map","name","split","label","setPoolField","field","setPoolStorageClasses","catch","err","console","error","setFieldInfo","fieldName","_jsxs","Paper","className","paperWrapper","children","headerElement","_jsx","H3Section","descriptionText","Grid","item","xs","formFieldRow","InputBoxWrapper","id","onChange","e","intValue","target","validity","valid","pattern","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","disabled","SelectWrapper","options","niceBytes","configSectionItem","marginRight","border","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","paddingTop","marginBottom","responsiveSectionItem","modalBasic","securityContextEnabled","configuration","securityContext","customRuntime","runtimeClassName","updateField","useCallback","runAsUser","runAsGroup","fsGroup","cleanValidation","clearValidationError","FormSwitchWrapper","checked","multiContainer","type","min","runAsNonRoot","sx","marginTop","overlayAction","maxWidth","maxHeight","background","affinityConfigField","affinityFieldLabel","flex","radioField","affinityLabelKey","affinityLabelValue","rowActions","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","k","push","setModalErrorSnackMessage","vl","filter","kvp","key","kvs","i","a","indexOf","join","splittedLabels","forEach","index","splitItem","updateToleration","alterToleration","setPoolTolerationInfo","tolerationValue","affinityHelpText","RadioGroupSelector","currentSelection","selectorOptions","Fragment","container","newKey","newLKP","arrCp","setPoolKeyValuePairs","placeholder","v","IconButton","size","onClick","AddIcon","RemoveIcon","tol","_tol$tolerationSecond","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewPoolToleration","removePoolToleration","AddPoolCreateButton","selectedStorageClass","validPages","enabled","sending","every","includes","Button","variant","addPoolAsync","useStyles","makeStyles","pageBox","borderTop","addPoolTitle","borderBottom","modalStyleUtils","AddPool","navigate","useNavigate","navigateTo","poolsURL","goTo","resetPoolForm","cancelButton","action","createButton","componentRender","wizardSteps","PoolResources","buttons","advancedOnly","PoolConfiguration","PoolPodPlacement","PageHeaderWrapper","BackLink","PageLayout","ScreenTitle","icon","TenantsIcon","title","subTitle","total_size","LinearProgress","GenericWizard"],"sourceRoot":""}