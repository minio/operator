{"version":3,"file":"static/js/942.9aec736a.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/events/EventsList.tsx","screens/Console/Tenants/TenantDetails/pvcs/PVCDescribe.tsx","screens/Console/Tenants/TenantDetails/pvcs/TenantVolumes.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport {\n  ProgressBar,\n  Table,\n  TableBody,\n  TableHeadCell,\n  TableCell,\n  TableHead,\n  TableRow,\n  Box,\n  ExpandCaret,\n  CollapseCaret,\n} from \"mds\";\nimport { IEvent } from \"../../ListTenants/types\";\n\ninterface IEventsListProps {\n  events: IEvent[];\n  loading: boolean;\n}\n\nconst Event = (props: { event: IEvent }) => {\n  const { event } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ cursor: \"pointer\" }}>\n        <TableHeadCell\n          scope=\"row\"\n          onClick={() => setOpen(!open)}\n          sx={{ borderBottom: 0 }}\n        >\n          {event.event_type}\n        </TableHeadCell>\n        <TableCell onClick={() => setOpen(!open)} sx={{ borderBottom: 0 }}>\n          {event.reason}\n        </TableCell>\n        <TableCell onClick={() => setOpen(!open)} sx={{ borderBottom: 0 }}>\n          {event.seen}\n        </TableCell>\n        <TableCell onClick={() => setOpen(!open)} sx={{ borderBottom: 0 }}>\n          {event.message.length >= 30\n            ? `${event.message.slice(0, 30)}...`\n            : event.message}\n        </TableCell>\n        <TableCell onClick={() => setOpen(!open)} sx={{ borderBottom: 0 }}>\n          {open ? <CollapseCaret /> : <ExpandCaret />}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={5}>\n          {open && (\n            <Box useBackground sx={{ padding: 10, marginBottom: 10 }}>\n              {event.message}\n            </Box>\n          )}\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nconst EventsList = ({ events, loading }: IEventsListProps) => {\n  if (loading) {\n    return <ProgressBar />;\n  }\n  return (\n    <Box withBorders customBorderPadding={\"0px\"}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Type</TableCell>\n            <TableCell>Reason</TableCell>\n            <TableCell>Age</TableCell>\n            <TableCell>Message</TableCell>\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {events.map((event) => (\n            <Event key={`${event.event_type}-${event.seen}`} event={event} />\n          ))}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n};\n\nexport default EventsList;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Box, breakPoints, Tabs, Tag, ValuePair } from \"mds\";\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { useAppDispatch } from \"../../../../../store\";\nimport {\n  DescribeResponse,\n  IPVCDescribeAnnotationsProps,\n  IPVCDescribeLabelsProps,\n  IPVCDescribeProps,\n  IPVCDescribeSummaryProps,\n} from \"./pvcTypes\";\nimport api from \"../../../../../common/api\";\n\nconst twoColCssGridLayoutConfig = {\n  display: \"grid\",\n  gridTemplateColumns: \"2fr 1fr\",\n  gridAutoFlow: \"row\",\n  gap: 2,\n  padding: 15,\n  [`@media (max-width: ${breakPoints.sm}px)`]: {\n    gridTemplateColumns: \"1fr\",\n    gridAutoFlow: \"dense\",\n  },\n};\n\nconst HeaderSection = ({ title }: { title: string }) => {\n  return (\n    <Box\n      sx={{\n        borderBottom: \"1px solid #eaeaea\",\n        margin: 0,\n        marginBottom: \"20px\",\n      }}\n    >\n      <h3>{title}</h3>\n    </Box>\n  );\n};\n\nconst PVCDescribeSummary = ({ describeInfo }: IPVCDescribeSummaryProps) => {\n  return (\n    <Fragment>\n      <div id=\"pvc-describe-summary-content\">\n        <HeaderSection title={\"Summary\"} />\n        <Box sx={{ ...twoColCssGridLayoutConfig }}>\n          <ValuePair label={\"Name\"} value={describeInfo.name} />\n          <ValuePair label={\"Namespace\"} value={describeInfo.namespace} />\n          <ValuePair label={\"Capacity\"} value={describeInfo.capacity} />\n          <ValuePair label={\"Status\"} value={describeInfo.status} />\n          <ValuePair\n            label={\"Storage Class\"}\n            value={describeInfo.storageClass}\n          />\n          <ValuePair\n            label={\"Access Modes\"}\n            value={describeInfo.accessModes.join(\", \")}\n          />\n          <ValuePair\n            label={\"Finalizers\"}\n            value={describeInfo.finalizers.join(\", \")}\n          />\n          <ValuePair label={\"Volume\"} value={describeInfo.volume} />\n          <ValuePair label={\"Volume Mode\"} value={describeInfo.volumeMode} />\n        </Box>\n      </div>\n    </Fragment>\n  );\n};\n\nconst PVCDescribeAnnotations = ({\n  annotations,\n}: IPVCDescribeAnnotationsProps) => {\n  return (\n    <Fragment>\n      <div id=\"pvc-describe-annotations-content\">\n        <HeaderSection title={\"Annotations\"} />\n        <Box>\n          {annotations.map((annotation, index) => (\n            <Tag\n              id={`${annotation.key}-${annotation.value}`}\n              sx={{ margin: \"0.5%\" }}\n              label={`${annotation.key}: ${annotation.value}`}\n              key={index}\n            />\n          ))}\n        </Box>\n      </div>\n    </Fragment>\n  );\n};\n\nconst PVCDescribeLabels = ({ labels }: IPVCDescribeLabelsProps) => {\n  return (\n    <Fragment>\n      <div id=\"pvc-describe-labels-content\">\n        <HeaderSection title={\"Labels\"} />\n        <Box>\n          {labels.map((label, index) => (\n            <Tag\n              id={`${label.key}-${label.value}`}\n              sx={{ margin: \"0.5%\" }}\n              label={`${label.key}: ${label.value}`}\n              key={index}\n            />\n          ))}\n        </Box>\n      </div>\n    </Fragment>\n  );\n};\n\nconst PVCDescribe = ({\n  tenant,\n  namespace,\n  pvcName,\n  propLoading,\n}: IPVCDescribeProps) => {\n  const [describeInfo, setDescribeInfo] = useState<DescribeResponse>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [curTab, setCurTab] = useState<string>(\"pvc-describe-summary\");\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${namespace}/tenants/${tenant}/pvcs/${pvcName}/describe`,\n        )\n        .then((res: DescribeResponse) => {\n          setDescribeInfo(res);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setLoading(false);\n        });\n    }\n  }, [loading, pvcName, namespace, tenant, dispatch]);\n\n  return (\n    <Fragment>\n      {describeInfo && (\n        <Tabs\n          currentTabOrPath={curTab}\n          onTabClick={(newValue) => {\n            setCurTab(newValue);\n          }}\n          options={[\n            {\n              tabConfig: { id: \"pvc-describe-summary\", label: \"Summary\" },\n              content: <PVCDescribeSummary describeInfo={describeInfo} />,\n            },\n            {\n              tabConfig: {\n                id: \"pvc-describe-annotations\",\n                label: \"Annotations\",\n              },\n              content: (\n                <PVCDescribeAnnotations\n                  annotations={describeInfo.annotations}\n                />\n              ),\n            },\n            {\n              tabConfig: { id: \"pvc-describe-labels\", label: \"Labels\" },\n              content: <PVCDescribeLabels labels={describeInfo.labels} />,\n            },\n          ]}\n          horizontal\n          horizontalBarBackground={false}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PVCDescribe;\n","//  This file is part of MinIO Operator\n//  Copyright (c) 2022 MinIO, Inc.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU Affero General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU Affero General Public License for more details.\n//\n//  You should have received a copy of the GNU Affero General Public License\n//  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Tabs, SectionTitle } from \"mds\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../../store\";\nimport { IEvent } from \"../../ListTenants/types\";\nimport { niceDays } from \"../../../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport EventsList from \"../events/EventsList\";\nimport PVCDescribe from \"./PVCDescribe\";\nimport api from \"../../../../../common/api\";\n\nconst TenantVolumes = () => {\n  const dispatch = useAppDispatch();\n  const { tenantName, PVCName, tenantNamespace } = useParams();\n\n  const [curTab, setCurTab] = useState<string>(\"simple-tab-0\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [events, setEvents] = useState<IEvent[]>([]);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/pvcs/${PVCName}/events`,\n        )\n        .then((res: IEvent[]) => {\n          for (let i = 0; i < res.length; i++) {\n            let currentTime = (Date.now() / 1000) | 0;\n\n            res[i].seen = niceDays((currentTime - res[i].last_seen).toString());\n          }\n          setEvents(res);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setLoading(false);\n        });\n    }\n  }, [loading, PVCName, tenantNamespace, tenantName, dispatch]);\n\n  return (\n    <Fragment>\n      <SectionTitle separator sx={{ marginBottom: 15 }}>\n        <Link\n          to={`/namespaces/${tenantNamespace}/tenants/${tenantName}/volumes`}\n        >\n          PVCs\n        </Link>{\" \"}\n        &gt; {PVCName}\n      </SectionTitle>\n      <Tabs\n        options={[\n          {\n            tabConfig: { id: \"simple-tab-0\", label: \"Events\" },\n            content: (\n              <Fragment>\n                <SectionTitle separator sx={{ marginBottom: 15 }}>\n                  Events\n                </SectionTitle>\n                <EventsList events={events} loading={loading} />\n              </Fragment>\n            ),\n          },\n          {\n            tabConfig: { id: \"simple-tab-1\", label: \"Describe\" },\n            content: (\n              <PVCDescribe\n                tenant={tenantName || \"\"}\n                namespace={tenantNamespace || \"\"}\n                pvcName={PVCName || \"\"}\n                propLoading={loading}\n              />\n            ),\n          },\n        ]}\n        currentTabOrPath={curTab}\n        onTabClick={(tab) => {\n          setCurTab(tab);\n        }}\n        horizontal\n      />\n    </Fragment>\n  );\n};\n\nexport default TenantVolumes;\n"],"names":["Event","props","event","open","setOpen","React","_jsxs","children","TableRow","sx","cursor","_jsx","TableHeadCell","scope","onClick","borderBottom","event_type","TableCell","reason","seen","message","length","concat","slice","CollapseCaret","ExpandCaret","style","paddingBottom","paddingTop","colSpan","Box","useBackground","padding","marginBottom","_ref","events","loading","ProgressBar","withBorders","customBorderPadding","Table","TableHead","TableBody","map","twoColCssGridLayoutConfig","display","gridTemplateColumns","gridAutoFlow","gap","breakPoints","sm","HeaderSection","title","margin","PVCDescribeSummary","_ref2","describeInfo","Fragment","id","ValuePair","label","value","name","namespace","capacity","status","storageClass","accessModes","join","finalizers","volume","volumeMode","PVCDescribeAnnotations","_ref3","annotations","annotation","index","Tag","key","PVCDescribeLabels","_ref4","labels","_ref5","tenant","pvcName","propLoading","setDescribeInfo","useState","setLoading","curTab","setCurTab","dispatch","useAppDispatch","useEffect","api","invoke","then","res","catch","err","setErrorSnackMessage","Tabs","currentTabOrPath","onTabClick","newValue","options","tabConfig","content","horizontal","horizontalBarBackground","TenantVolumes","tenantName","PVCName","tenantNamespace","useParams","setEvents","i","currentTime","Date","now","niceDays","last_seen","toString","SectionTitle","separator","Link","to","EventsList","PVCDescribe","tab"],"sourceRoot":""}