{"version":3,"file":"static/js/292.c4ff2caa.chunk.js","mappings":"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","sources":["screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/FormHr.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/TooltipWrapper/TooltipWrapper.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPActiveDirectory.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPOpenID.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPBuiltIn.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Common/SectionH1.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/VaultKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AzureKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GCPKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GemaltoKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AWSKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NamespaceSelector.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/common.ts","screens/Console/Tenants/AddTenant/CreateTenantButton.tsx","screens/Console/Tenants/AddTenant/NewTenantCredentials.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/Console/Tenants/HelpBox/TLSHelpBox.tsx","screens/Console/Tenants/LogoComponents.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js","../node_modules/@mui/icons-material/Casino.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/Divider/Divider.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button, CopyIcon } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <TooltipWrapper tooltip={\"Copy\"}>\n                <CopyToClipboard text={value}>\n                  <Button\n                    id={\"copy-clipboard\"}\n                    aria-label=\"copy\"\n                    onClick={() => {}}\n                    onMouseDown={() => {}}\n                    style={{\n                      width: \"28px\",\n                      height: \"28px\",\n                      padding: \"0px\",\n                    }}\n                    icon={<CopyIcon />}\n                  />\n                </CopyToClipboard>\n              </TooltipWrapper>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  Button,\n  DownloadIcon,\n  ServiceAccountCredentialsIcon,\n  WarnIcon,\n} from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport TooltipWrapper from \"../TooltipWrapper/TooltipWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  const downloadImport = () => {\n    let consoleExtras = {};\n\n    if (consoleCreds) {\n      if (!Array.isArray(consoleCreds)) {\n        consoleExtras = {\n          url: consoleCreds.url,\n          accessKey: consoleCreds.accessKey,\n          secretKey: consoleCreds.secretKey,\n          api: \"s3v4\",\n          path: \"auto\",\n        };\n      } else {\n        const cCreds = consoleCreds.map((itemMap) => {\n          return {\n            url: itemMap.url,\n            accessKey: itemMap.accessKey,\n            secretKey: itemMap.secretKey,\n            api: \"s3v4\",\n            path: \"auto\",\n          };\n        });\n        consoleExtras = cCreds[0];\n      }\n    } else {\n      consoleExtras = {\n        url: newServiceAccount.url,\n        accessKey: newServiceAccount.accessKey,\n        secretKey: newServiceAccount.secretKey,\n        api: \"s3v4\",\n        path: \"auto\",\n      };\n    }\n\n    download(\n      \"credentials.json\",\n      JSON.stringify({\n        ...consoleExtras,\n      }),\n    );\n  };\n\n  const downloaddAllCredentials = () => {\n    let allCredentials = {};\n    if (\n      consoleCreds &&\n      Array.isArray(consoleCreds) &&\n      consoleCreds.length > 1\n    ) {\n      const cCreds = consoleCreds.map((itemMap) => {\n        return {\n          accessKey: itemMap.accessKey,\n          secretKey: itemMap.secretKey,\n        };\n      });\n      allCredentials = cCreds;\n    }\n    download(\n      \"all_credentials.json\",\n      JSON.stringify({\n        ...allCredentials,\n      }),\n    );\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <TooltipWrapper\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n              >\n                <Button\n                  id={\"download-button\"}\n                  label={\"Download for import\"}\n                  className={classes.buttonSpacer}\n                  onClick={downloadImport}\n                  icon={<DownloadIcon />}\n                  variant=\"callAction\"\n                />\n              </TooltipWrapper>\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <TooltipWrapper\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                >\n                  <Button\n                    id={\"download-all-button\"}\n                    label={\"Download all access credentials\"}\n                    className={classes.buttonSpacer}\n                    onClick={downloaddAllCredentials}\n                    icon={<DownloadIcon />}\n                    variant=\"callAction\"\n                    color=\"primary\"\n                  />\n                </TooltipWrapper>\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, CopyIcon, HelpIcon } from \"mds\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport { HelpIcon } from \"mds\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Operator\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport styled from \"@emotion/styled\";\n\nconst FormHr = styled(\"hr\")`\n  border-top: 0;\n  border-left: 0;\n  border-right: 0;\n  border-color: #999999;\n  background-color: transparent;\n`;\n\nexport default FormHr;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { cloneElement } from \"react\";\nimport { Tooltip } from \"@mui/material\";\n\ninterface ITooltipWrapperProps {\n  tooltip: string;\n  children: any;\n  errorProps?: any;\n  placement?:\n    | \"bottom-end\"\n    | \"bottom-start\"\n    | \"bottom\"\n    | \"left-end\"\n    | \"left-start\"\n    | \"left\"\n    | \"right-end\"\n    | \"right-start\"\n    | \"right\"\n    | \"top-end\"\n    | \"top-start\"\n    | \"top\";\n}\n\nconst TooltipWrapper = ({\n  tooltip,\n  children,\n  errorProps = null,\n  placement,\n}: ITooltipWrapperProps) => {\n  return (\n    <Tooltip title={tooltip} placement={placement}>\n      <span>\n        {errorProps ? cloneElement(children, { ...errorProps }) : children}\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default TooltipWrapper;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  Divider,\n  Grid,\n  IconButton,\n  Paper,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport {\n  addNewMinIODomain,\n  isPageValid,\n  removeMinIODomain,\n  setEnvVars,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    wrapperContainer: {\n      display: \"flex\",\n      marginBottom: 15,\n    },\n    envVarRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...formFieldStyles,\n  });\n\nconst Configure = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const exposeMinIO = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeMinIO,\n  );\n  const exposeConsole = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeConsole,\n  );\n  const exposeSFTP = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeSFTP,\n  );\n  const setDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.setDomains,\n  );\n  const consoleDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.consoleDomain,\n  );\n  const minioDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.minioDomains,\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom,\n  );\n  const tenantEnvVars = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.envVars,\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext,\n  );\n  const customRuntime = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customRuntime,\n  );\n  const runtimeClassName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.runtimeClassName,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value }),\n      );\n    },\n    [dispatch],\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup!,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup!) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (setDomains) {\n      const minioExtraValidations = minioDomains.map((validation, index) => {\n        return {\n          fieldKey: `minio-domain-${index.toString()}`,\n          required: false,\n          value: validation,\n          pattern: /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?$/,\n          customPatternMessage:\n            \"MinIO domain is not in the form of http|https://subdomain.domain\",\n        };\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        ...minioExtraValidations,\n        {\n          fieldKey: \"console_domain\",\n          required: false,\n          value: consoleDomain,\n          pattern:\n            /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?(\\/[a-zA-Z0-9\\-./]*)?$/,\n          customPatternMessage:\n            \"Console domain is not in the form of http|https://subdomain.domain:port/subpath1/subpath2\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    dispatch,\n    tenantCustom,\n    tenantSecurityContext,\n    setDomains,\n    consoleDomain,\n    minioDomains,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const updateMinIODomain = (value: string, index: number) => {\n    const copyDomains = [...minioDomains];\n    copyDomains[index] = value;\n\n    updateField(\"minioDomains\", copyDomains);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Configure</H3Section>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h4 className={classes.h3Section}>Services</h4>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP via\n          LoadBalancer service type.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MinIO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_sftp\"\n          id=\"expose_sftp\"\n          name=\"expose_sftp\"\n          checked={exposeSFTP}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeSFTP\", checked);\n          }}\n          label={\"Expose SFTP Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"custom_domains\"\n          id=\"custom_domains\"\n          name=\"custom_domains\"\n          checked={setDomains}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"setDomains\", checked);\n          }}\n          label={\"Set Custom Domains\"}\n        />\n      </Grid>\n      {setDomains && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Domains for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"console_domain\"\n                  name=\"console_domain\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"consoleDomain\", e.target.value);\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\n                  }}\n                  label=\"Console Domain\"\n                  value={consoleDomain}\n                  placeholder={\n                    \"Eg. http://subdomain.domain:port/subpath1/subpath2\"\n                  }\n                  error={validationErrors[\"console_domain\"] || \"\"}\n                />\n              </div>\n              <div>\n                <h4>MinIO Domains</h4>\n                <div className={`${classes.responsiveSectionItem}`}>\n                  {minioDomains.map((domain, index) => {\n                    return (\n                      <div\n                        className={`${classes.containerItem} ${classes.wrapperContainer}`}\n                        key={`minio-domain-key-${index.toString()}`}\n                      >\n                        <InputBoxWrapper\n                          id={`minio-domain-${index.toString()}`}\n                          name={`minio-domain-${index.toString()}`}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            updateMinIODomain(e.target.value, index);\n                          }}\n                          label={`MinIO Domain ${index + 1}`}\n                          value={domain}\n                          placeholder={\"Eg. http://subdomain.domain\"}\n                          error={\n                            validationErrors[\n                              `minio-domain-${index.toString()}`\n                            ] || \"\"\n                          }\n                        />\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(addNewMinIODomain())}\n                            disabled={index !== minioDomains.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(removeMinIODomain(index))}\n                            disabled={minioDomains.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup!}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <div className={classes.configSectionItem}>\n                    <SelectWrapper\n                      label=\"FsGroupChangePolicy\"\n                      id=\"securityContext_fsGroupChangePolicy\"\n                      name=\"securityContext_fsGroupChangePolicy\"\n                      value={tenantSecurityContext.fsGroupChangePolicy!}\n                      onChange={(e: SelectChangeEvent<string>) => {\n                        updateField(\"tenantSecurityContext\", {\n                          ...tenantSecurityContext,\n                          fsGroupChangePolicy: e.target.value,\n                        });\n                      }}\n                      options={[\n                        {\n                          label: \"Always\",\n                          value: \"Always\",\n                        },\n                        {\n                          label: \"OnRootMismatch\",\n                          value: \"OnRootMismatch\",\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"customRuntime\"\n          id=\"tenant_custom_runtime\"\n          name=\"tenant_custom_runtime\"\n          checked={customRuntime}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"customRuntime\", checked);\n          }}\n          label={\"Custom Runtime Configurations\"}\n        />\n      </Grid>\n      {customRuntime && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Runtime Configurations\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"tenant_runtime_runtimeClassName\"\n                  name=\"tenant_runtime_runtimeClassName\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"runtimeClassName\", e.target.value);\n                    cleanValidation(\"tenant_runtime_runtimeClassName\");\n                  }}\n                  label=\"Runtime Class Name\"\n                  value={runtimeClassName}\n                  error={\n                    validationErrors[\"tenant_runtime_runtimeClassName\"] || \"\"\n                  }\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n      <Divider />\n\n      <div className={classes.headerElement}>\n        <H3Section>Additional Environment Variables</H3Section>\n        <span className={classes.descriptionText}>\n          Define additional environment variables to be used by your MinIO pods\n        </span>\n      </div>\n      <Grid container>\n        {tenantEnvVars.map((envVar, index) => (\n          <Grid\n            item\n            xs={12}\n            className={`${classes.formFieldRow} ${classes.envVarRow}`}\n            key={`tenant-envVar-${index.toString()}`}\n          >\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_key\"\n                name=\"env_var_key\"\n                label=\"Key\"\n                value={envVar.key}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: e.target.value, value: keyPair.value }\n                          : keyPair,\n                      ),\n                    ),\n                  );\n                }}\n                index={index}\n                key={`env_var_key_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={5} className={classes.fileItem}>\n              <InputBoxWrapper\n                id=\"env_var_value\"\n                name=\"env_var_value\"\n                label=\"Value\"\n                value={envVar.value}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  const existingEnvVars = [...tenantEnvVars];\n                  dispatch(\n                    setEnvVars(\n                      existingEnvVars.map((keyPair, i) =>\n                        i === index\n                          ? { key: keyPair.key, value: e.target.value }\n                          : keyPair,\n                      ),\n                    ),\n                  );\n                }}\n                index={index}\n                key={`env_var_value_${index.toString()}`}\n              />\n            </Grid>\n            <Grid item xs={2} className={classes.rowActions}>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = [...tenantEnvVars];\n                    existingEnvVars.push({ key: \"\", value: \"\" });\n\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={index !== tenantEnvVars.length - 1}\n                >\n                  <AddIcon />\n                </IconButton>\n              </div>\n              <div className={classes.overlayAction}>\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    const existingEnvVars = tenantEnvVars.filter(\n                      (item, fIndex) => fIndex !== index,\n                    );\n                    dispatch(setEnvVars(existingEnvVars));\n                  }}\n                  disabled={tenantEnvVars.length <= 1}\n                >\n                  <RemoveIcon />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Configure);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addIDPADGroupAtIndex,\n  addIDPADUsrAtIndex,\n  isPageValid,\n  removeIDPADGroupAtIndex,\n  removeIDPADUsrAtIndex,\n  setIDPADGroupAtIndex,\n  setIDPADUsrAtIndex,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { clearValidationError } from \"../../../utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    adUserDnRows: {\n      display: \"flex\",\n      marginBottom: 10,\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  }),\n);\n\nconst IDPActiveDirectory = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.idpSelection,\n  );\n  const ADURL = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADURL,\n  );\n  const ADSkipTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADSkipTLS,\n  );\n  const ADServerInsecure = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerInsecure,\n  );\n  const ADGroupSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchBaseDN,\n  );\n  const ADGroupSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchFilter,\n  );\n  const ADUserDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADUserDNs,\n  );\n  const ADGroupDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADGroupDNs,\n  );\n  const ADLookupBindDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindDN,\n  );\n  const ADLookupBindPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindPassword,\n  );\n  const ADUserDNSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchBaseDN,\n  );\n  const ADUserDNSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchFilter,\n  );\n  const ADServerStartTLS = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerStartTLS,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        }),\n      );\n    },\n    [dispatch],\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n        {\n          fieldKey: \"ad_lookupBindDN\",\n          required: true,\n          value: ADLookupBindDN,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    ADLookupBindDN,\n    idpSelection,\n    ADURL,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADUserDNs,\n    ADGroupDNs,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"AD_URL\"\n          name=\"AD_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADURL\", e.target.value);\n            cleanValidation(\"AD_URL\");\n          }}\n          label=\"LDAP Server Address\"\n          value={ADURL}\n          placeholder=\"ldap-server:636\"\n          error={validationErrors[\"AD_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_skipTLS\"\n          id=\"ad_skipTLS\"\n          name=\"ad_skipTLS\"\n          checked={ADSkipTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADSkipTLS\", checked);\n          }}\n          label={\"Skip TLS Verification\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverInsecure\"\n          id=\"ad_serverInsecure\"\n          name=\"ad_serverInsecure\"\n          checked={ADServerInsecure}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerInsecure\", checked);\n          }}\n          label={\"Server Insecure\"}\n        />\n      </Grid>\n      {ADServerInsecure ? (\n        <Grid item xs={12}>\n          <Typography\n            className={classes.error}\n            variant=\"caption\"\n            display=\"block\"\n            gutterBottom\n          >\n            Warning: All traffic with Active Directory will be unencrypted\n          </Typography>\n          <br />\n        </Grid>\n      ) : null}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverStartTLS\"\n          id=\"ad_serverStartTLS\"\n          name=\"ad_serverStartTLS\"\n          checked={ADServerStartTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerStartTLS\", checked);\n          }}\n          label={\"Start TLS connection to AD/LDAP server\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindDN\"\n          name=\"ad_lookupBindDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindDN\", e.target.value);\n            cleanValidation(\"ad_lookupBindDN\");\n          }}\n          label=\"Lookup Bind DN\"\n          value={ADLookupBindDN}\n          placeholder=\"cn=admin,dc=min,dc=io\"\n          error={validationErrors[\"ad_lookupBindDN\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindPassword\"\n          name=\"ad_lookupBindPassword\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindPassword\", e.target.value);\n          }}\n          label=\"Lookup Bind Password\"\n          value={ADLookupBindPassword}\n          placeholder=\"admin\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchBaseDN\"\n          name=\"ad_userDNSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n          }}\n          label=\"User DN Search Base DN\"\n          value={ADUserDNSearchBaseDN}\n          placeholder=\"dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchFilter\"\n          name=\"ad_userDNSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchFilter\", e.target.value);\n          }}\n          label=\"User DN Search Filter\"\n          value={ADUserDNSearchFilter}\n          placeholder=\"(sAMAcountName=%s)\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchBaseDN\"\n          name=\"ad_groupSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchBaseDN\", e.target.value);\n          }}\n          label=\"Group Search Base DN\"\n          value={ADGroupSearchBaseDN}\n          placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchFilter\"\n          name=\"ad_groupSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchFilter\", e.target.value);\n          }}\n          label=\"Group Search Filter\"\n          value={ADGroupSearchFilter}\n          placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n        />\n      </Grid>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of user DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADUserDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-userdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-userdn-${index.toString()}`}\n                    value={ADUserDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADUsrAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        }),\n                      );\n                      cleanValidation(`ad-userdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-userdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-userdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add User\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADUsrAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADUserDNs.length > 1) {\n                            dispatch(removeIDPADUsrAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of group DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADGroupDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-groupdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-groupdn-${index.toString()}`}\n                    value={ADGroupDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADGroupAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        }),\n                      );\n                      cleanValidation(`ad-groupdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-groupdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-groupdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add Group\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADGroupAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADGroupDNs.length > 1) {\n                            dispatch(removeIDPADGroupAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default IDPActiveDirectory;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  }),\n);\n\nconst IDPOpenID = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.idpSelection,\n  );\n  const openIDConfigurationURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDConfigurationURL,\n  );\n  const openIDClientID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClientID,\n  );\n  const openIDSecretID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDSecretID,\n  );\n  const openIDClaimName = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClaimName,\n  );\n  const openIDScopes = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDScopes,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        }),\n      );\n    },\n    [dispatch],\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: false,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    openIDClientID,\n    openIDSecretID,\n    openIDConfigurationURL,\n    openIDClaimName,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_CONFIGURATION_URL\"\n          name=\"openID_CONFIGURATION_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDConfigurationURL\", e.target.value);\n            cleanValidation(\"openID_CONFIGURATION_URL\");\n          }}\n          label=\"Configuration URL\"\n          value={openIDConfigurationURL}\n          placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n          error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_clientID\"\n          name=\"openID_clientID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClientID\", e.target.value);\n            cleanValidation(\"openID_clientID\");\n          }}\n          label=\"Client ID\"\n          value={openIDClientID}\n          error={validationErrors[\"openID_clientID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_secretID\"\n          name=\"openID_secretID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDSecretID\", e.target.value);\n            cleanValidation(\"openID_secretID\");\n          }}\n          label=\"Secret ID\"\n          value={openIDSecretID}\n          error={validationErrors[\"openID_secretID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_claimName\"\n          name=\"openID_claimName\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClaimName\", e.target.value);\n            cleanValidation(\"openID_claimName\");\n          }}\n          label=\"Claim Name\"\n          value={openIDClaimName}\n          placeholder=\"policy\"\n          error={validationErrors[\"openID_claimName\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_scopes\"\n          name=\"openID_scopes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDScopes\", e.target.value);\n            cleanValidation(\"openID_scopes\");\n          }}\n          label=\"Scopes\"\n          value={openIDScopes}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IDPOpenID;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  addIDPNewKeyPair,\n  isPageValid,\n  removeIDPKeyPairAtIndex,\n  setIDPPwdAtIndex,\n  setIDPUsrAtIndex,\n} from \"../../createTenantSlice\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport { clearValidationError, getRandomString } from \"../../../utils\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  }),\n);\n\nconst IDPBuiltIn = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.idpSelection,\n  );\n  const accessKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.accessKeys,\n  );\n  const secretKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.secretKeys,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [idpSelection, accessKeys, secretKeys, dispatch]);\n\n  return (\n    <Fragment>\n      Add additional users\n      {accessKeys.map((_, index) => {\n        return (\n          <Fragment key={`identityField-${index.toString()}`}>\n            <div className={classes.shortened}>\n              <InputBoxWrapper\n                id={`accesskey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Access Key\"}\n                name={`accesskey-${index.toString()}`}\n                value={accessKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPUsrAtIndex({\n                      index,\n                      accessKey: e.target.value,\n                    }),\n                  );\n                  cleanValidation(`accesskey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-accesskey-${index.toString()}`}\n                error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n              />\n              <InputBoxWrapper\n                id={`secretkey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Secret Key\"}\n                name={`secretkey-${index.toString()}`}\n                value={secretKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPPwdAtIndex({\n                      index,\n                      secretKey: e.target.value,\n                    }),\n                  );\n                  cleanValidation(`secretkey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-secretkey-${index.toString()}`}\n                error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n              />\n              <div className={classes.buttonTray}>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(addIDPNewKeyPair());\n                    }}\n                    disabled={index !== accessKeys.length - 1}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </div>\n                <div className={classes.overlayAction}>\n                  <IconButton\n                    size={\"small\"}\n                    onClick={() => {\n                      dispatch(removeIDPKeyPairAtIndex(index));\n                    }}\n                    disabled={accessKeys.length <= 1}\n                  >\n                    <RemoveIcon />\n                  </IconButton>\n                </div>\n                <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      onClick={() => {\n                        dispatch(\n                          setIDPUsrAtIndex({\n                            index,\n                            accessKey: getRandomString(16),\n                          }),\n                        );\n                        dispatch(\n                          setIDPPwdAtIndex({\n                            index,\n                            secretKey: getRandomString(16),\n                          }),\n                        );\n                      }}\n                      size={\"small\"}\n                    >\n                      <CasinoIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default IDPBuiltIn;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { setIDP } from \"../createTenantSlice\";\nimport IDPActiveDirectory from \"./IdentityProvider/IDPActiveDirectory\";\nimport IDPOpenID from \"./IdentityProvider/IDPOpenID\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport IDPBuiltIn from \"./IdentityProvider/IDPBuiltIn\";\nimport {\n  BuiltInLogoElement,\n  LDAPLogoElement,\n  OIDCLogoElement,\n} from \"../../LogoComponents\";\nimport H3Section from \"../../../Common/H3Section\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 16,\n        fontWeight: 600,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"row\",\n        alignItems: \"top\",\n      },\n    },\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  }),\n);\n\nconst IdentityProvider = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.idpSelection,\n  );\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Identity Provider</H3Section>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} padding=\"10px\">\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\"Protocol\"\n          onChange={(e) => {\n            dispatch(setIDP(e.target.value));\n          }}\n          selectorOptions={[\n            { label: <BuiltInLogoElement />, value: \"Built-in\" },\n            { label: <OIDCLogoElement />, value: \"OpenID\" },\n            { label: <LDAPLogoElement />, value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && <IDPBuiltIn />}\n      {idpSelection === \"OpenID\" && <IDPOpenID />}\n      {idpSelection === \"AD\" && <IDPActiveDirectory />}\n    </Paper>\n  );\n};\n\nexport default IdentityProvider;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { RemoveIcon } from \"mds\";\nimport {\n  addCaCertificate,\n  addClientKeyPair,\n  addFileToCaCertificates,\n  addFileToClientKeyPair,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteCaCertificate,\n  deleteClientKeyPair,\n  deleteKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport TLSHelpBox from \"../../HelpBox/TLSHelpBox\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface ISecurityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({ classes }: ISecurityProps) => {\n  const dispatch = useAppDispatch();\n\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS,\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert,\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts,\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) =>\n      state.createTenant.certificates.minioServerCertificates,\n  );\n  const minioClientCertificates = useSelector(\n    (state: AppState) =>\n      state.createTenant.certificates.minioClientCertificates,\n  );\n  const caCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCAsCertificates,\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"security\", field: field, value: value }),\n      );\n    },\n    [dispatch],\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableAutoCert) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableCustomCerts) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    dispatch(isPageValid({ pageName: \"security\", valid: false }));\n  }, [enableTLS, enableAutoCert, enableCustomCerts, dispatch]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Security</H3Section>\n      </div>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <FormSwitchWrapper\n            value=\"enableTLS\"\n            id=\"enableTLS\"\n            name=\"enableTLS\"\n            checked={enableTLS}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableTLS\", checked);\n            }}\n            label={\"TLS\"}\n            description={\n              \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n            }\n          />\n        </Grid>\n        {enableTLS && (\n          <Fragment>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableAutoCert\", checked);\n                }}\n                label={\"AutoCert\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableCustomCerts\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                description={\"Certificates used to terminated TLS at MinIO\"}\n              />\n            </Grid>\n            {enableCustomCerts && (\n              <Fragment>\n                {!enableAutoCert && (\n                  <Grid item xs={12}>\n                    <TLSHelpBox />\n                  </Grid>\n                )}\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Server Certificates</h5>\n                  {minioCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              }),\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              }),\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addKeyPair());\n                            }}\n                            disabled={index !== minioCertificates.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteKeyPair(keyPair.id));\n                            }}\n                            disabled={minioCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO Client Certificates</h5>\n                  {minioClientCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              }),\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToClientKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              }),\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addClientKeyPair());\n                            }}\n                            disabled={\n                              index !== minioClientCertificates.length - 1\n                            }\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteClientKeyPair(keyPair.id));\n                            }}\n                            disabled={minioClientCertificates.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <h5>MinIO CA Certificates</h5>\n                  {caCertificates.map((keyPair: KeyPair, index) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-CA-certs-${keyPair.id}`}\n                      className={classes.minioCACertsRow}\n                    >\n                      <Grid item xs={6}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToCaCertificates({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              }),\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <div className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(addCaCertificate());\n                              }}\n                              disabled={index !== caCertificates.length - 1}\n                            >\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(deleteCaCertificate(keyPair.id));\n                              }}\n                              disabled={caCertificates.length <= 1}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Security);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\ntype Props = {\n  children: string;\n};\n\nconst SectionH1: React.FC<Props> = ({ children }) => {\n  return (\n    <h1 style={{ margin: 0, marginBottom: \".8rem\", fontSize: \"1.3rem\" }}>\n      {children}\n    </h1>\n  );\n};\n\nexport default SectionH1;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  }),\n);\n\nconst VaultKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab,\n  );\n  const vaultEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEndpoint,\n  );\n  const vaultEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEngine,\n  );\n  const vaultNamespace = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultNamespace,\n  );\n  const vaultPrefix = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPrefix,\n  );\n  const vaultAppRoleEngine = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.vaultAppRoleEngine,\n  );\n  const vaultId = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultId,\n  );\n  const vaultSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultSecret,\n  );\n  const vaultRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultRetry,\n  );\n  const vaultPing = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPing,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"vault_endpoint\",\n          required: true,\n          value: vaultEndpoint,\n        },\n        {\n          fieldKey: \"vault_id\",\n          required: true,\n          value: vaultId,\n        },\n        {\n          fieldKey: \"vault_secret\",\n          required: true,\n          value: vaultSecret,\n        },\n        {\n          fieldKey: \"vault_ping\",\n          required: false,\n          value: vaultPing,\n          customValidation: parseInt(vaultPing) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n        {\n          fieldKey: \"vault_retry\",\n          required: false,\n          value: vaultRetry,\n          customValidation: parseInt(vaultRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value }),\n      );\n    },\n    [dispatch],\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_endpoint\"\n          name=\"vault_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEndpoint\", e.target.value);\n            cleanValidation(\"vault_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the Hashicorp Vault endpoint\"\n          value={vaultEndpoint}\n          error={validationErrors[\"vault_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_engine\"\n          name=\"vault_engine\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEngine\", e.target.value);\n            cleanValidation(\"vault_engine\");\n          }}\n          label=\"Engine\"\n          tooltip=\"Engine is the Hashicorp Vault K/V engine path. If empty, defaults to 'kv'\"\n          value={vaultEngine}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_namespace\"\n          name=\"vault_namespace\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultNamespace\", e.target.value);\n          }}\n          label=\"Namespace\"\n          tooltip=\"Namespace is an optional Hashicorp Vault namespace. An empty namespace means no particular namespace is used.\"\n          value={vaultNamespace}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_prefix\"\n          name=\"vault_prefix\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultPrefix\", e.target.value);\n          }}\n          label=\"Prefix\"\n          tooltip=\"Prefix is an optional prefix / directory within the K/V engine. If empty, keys will be stored at the K/V engine top level\"\n          value={vaultPrefix}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>App Role</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_approle_engine\"\n              name=\"vault_approle_engine\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultAppRoleEngine\", e.target.value);\n              }}\n              label=\"Engine\"\n              tooltip=\"AppRoleEngine is the AppRole authentication engine path. If empty, defaults to 'approle'\"\n              value={vaultAppRoleEngine}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_id\"\n              name=\"vault_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultId\", e.target.value);\n                cleanValidation(\"vault_id\");\n              }}\n              label=\"AppRole ID\"\n              tooltip=\"AppRoleSecret is the AppRole access secret for authenticating to Hashicorp Vault via the AppRole method\"\n              value={vaultId}\n              error={validationErrors[\"vault_id\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_secret\"\n              name=\"vault_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultSecret\", e.target.value);\n                cleanValidation(\"vault_secret\");\n              }}\n              label=\"AppRole Secret\"\n              tooltip=\"AppRoleSecret is the AppRole access secret for authenticating to Hashicorp Vault via the AppRole method\"\n              value={vaultSecret}\n              error={validationErrors[\"vault_secret\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"vault_retry\"\n              name=\"vault_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultRetry\", e.target.value);\n                cleanValidation(\"vault_retry\");\n              }}\n              label=\"Retry (Seconds)\"\n              value={vaultRetry}\n              error={validationErrors[\"vault_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        className={classes.formFieldRow}\n        style={{ marginTop: 15 }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Status</legend>\n          <InputBoxWrapper\n            type=\"number\"\n            min=\"0\"\n            id=\"vault_ping\"\n            name=\"vault_ping\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"vaultPing\", e.target.value);\n              cleanValidation(\"vault_ping\");\n            }}\n            label=\"Ping (Seconds)\"\n            value={vaultPing}\n            error={validationErrors[\"vault_ping\"] || \"\"}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default VaultKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  }),\n);\n\nconst AzureKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab,\n  );\n  const azureEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureEndpoint,\n  );\n  const azureTenantID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureTenantID,\n  );\n  const azureClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientID,\n  );\n  const azureClientSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientSecret,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"azure_endpoint\",\n          required: true,\n          value: azureEndpoint,\n        },\n        {\n          fieldKey: \"azure_tenant_id\",\n          required: true,\n          value: azureTenantID,\n        },\n        {\n          fieldKey: \"azure_client_id\",\n          required: true,\n          value: azureClientID,\n        },\n        {\n          fieldKey: \"azure_client_secret\",\n          required: true,\n          value: azureClientSecret,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value }),\n      );\n    },\n    [dispatch],\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"azure_endpoint\"\n          name=\"azure_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"azureEndpoint\", e.target.value);\n            cleanValidation(\"azure_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the Azure KeyVault endpoint\"\n          value={azureEndpoint}\n          error={validationErrors[\"azure_endpoint\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_tenant_id\"\n              name=\"azure_tenant_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureTenantID\", e.target.value);\n                cleanValidation(\"azure_tenant_id\");\n              }}\n              label=\"Tenant ID\"\n              tooltip=\"TenantID is the ID of the Azure KeyVault tenant\"\n              value={azureTenantID}\n              error={validationErrors[\"azure_tenant_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_id\"\n              name=\"azure_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientID\", e.target.value);\n                cleanValidation(\"azure_client_id\");\n              }}\n              label=\"Client ID\"\n              tooltip=\"ClientID is the ID of the client accessing Azure KeyVault\"\n              value={azureClientID}\n              error={validationErrors[\"azure_client_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_secret\"\n              name=\"azure_client_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientSecret\", e.target.value);\n                cleanValidation(\"azure_client_secret\");\n              }}\n              label=\"Client Secret\"\n              tooltip=\"ClientSecret is the client secret accessing the Azure KeyVault\"\n              value={azureClientSecret}\n              error={validationErrors[\"azure_client_secret\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AzureKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { updateAddField } from \"../../createTenantSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  }),\n);\n\nconst GCPKMSAdd = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID,\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint,\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail,\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID,\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID,\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey,\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value }),\n      );\n    },\n    [dispatch],\n  );\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_project_id\"\n          name=\"gcp_project_id\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpProjectID\", e.target.value);\n          }}\n          label=\"Project ID\"\n          tooltip=\"ProjectID is the GCP project ID.\"\n          value={gcpProjectID}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_endpoint\"\n          name=\"gcp_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpEndpoint\", e.target.value);\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the GCP project ID. If empty defaults to: secretmanager.googleapis.com:443\"\n          value={gcpEndpoint}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_email\"\n              name=\"gcp_client_email\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientEmail\", e.target.value);\n              }}\n              label=\"Client Email\"\n              tooltip=\"Is the Client email of the GCP service account used to access the SecretManager\"\n              value={gcpClientEmail}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_id\"\n              name=\"gcp_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientID\", e.target.value);\n              }}\n              label=\"Client ID\"\n              tooltip=\"Is the Client ID of the GCP service account used to access the SecretManager\"\n              value={gcpClientID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key_id\"\n              name=\"gcp_private_key_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKeyID\", e.target.value);\n              }}\n              label=\"Private Key ID\"\n              tooltip=\"Is the private key ID of the GCP service account used to access the SecretManager\"\n              value={gcpPrivateKeyID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key\"\n              name=\"gcp_private_key\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKey\", e.target.value);\n              }}\n              label=\"Private Key\"\n              tooltip=\"Is the private key of the GCP service account used to access the SecretManager\"\n              value={gcpPrivateKey}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GCPKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  }),\n);\n\nconst GemaltoKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab,\n  );\n  const gemaltoEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoEndpoint,\n  );\n  const gemaltoToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoToken,\n  );\n  const gemaltoDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoDomain,\n  );\n  const gemaltoRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoRetry,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"gemalto_endpoint\",\n          required: true,\n          value: gemaltoEndpoint,\n        },\n        {\n          fieldKey: \"gemalto_token\",\n          required: true,\n          value: gemaltoToken,\n        },\n        {\n          fieldKey: \"gemalto_domain\",\n          required: true,\n          value: gemaltoDomain,\n        },\n        {\n          fieldKey: \"gemalto_retry\",\n          required: false,\n          value: gemaltoRetry,\n          customValidation: parseInt(gemaltoRetry) < 0,\n          customValidationMessage: \"Value needs to be 0 or greater\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    gemaltoEndpoint,\n    gemaltoToken,\n    gemaltoDomain,\n    gemaltoRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value }),\n      );\n    },\n    [dispatch],\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gemalto_endpoint\"\n          name=\"gemalto_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gemaltoEndpoint\", e.target.value);\n            cleanValidation(\"gemalto_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the endpoint to the KeySecure server\"\n          value={gemaltoEndpoint}\n          error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_token\"\n              name=\"gemalto_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoToken\", e.target.value);\n                cleanValidation(\"gemalto_token\");\n              }}\n              label=\"Token\"\n              tooltip=\"Token is the refresh authentication token to access the KeySecure server\"\n              value={gemaltoToken}\n              error={validationErrors[\"gemalto_token\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_domain\"\n              name=\"gemalto_domain\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoDomain\", e.target.value);\n                cleanValidation(\"gemalto_domain\");\n              }}\n              label=\"Domain\"\n              tooltip=\"Domain is the isolated namespace within the KeySecure server. If empty, defaults to the top-level / root domain\"\n              value={gemaltoDomain}\n              error={validationErrors[\"gemalto_domain\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"gemalto_retry\"\n              name=\"gemalto_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoRetry\", e.target.value);\n                cleanValidation(\"gemalto_retry\");\n              }}\n              label=\"Retry (seconds)\"\n              value={gemaltoRetry}\n              error={validationErrors[\"gemalto_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GemaltoKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  }),\n);\n\nconst AWSKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab,\n  );\n  const awsEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsEndpoint,\n  );\n  const awsRegion = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsRegion,\n  );\n  const awsKMSKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsKMSKey,\n  );\n  const awsAccessKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsAccessKey,\n  );\n  const awsSecretKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsSecretKey,\n  );\n  const awsToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsToken,\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (!encryptionTab) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"aws_endpoint\",\n          required: true,\n          value: awsEndpoint,\n        },\n        {\n          fieldKey: \"aws_region\",\n          required: true,\n          value: awsRegion,\n        },\n        {\n          fieldKey: \"aws_accessKey\",\n          required: true,\n          value: awsAccessKey,\n        },\n        {\n          fieldKey: \"aws_secretKey\",\n          required: true,\n          value: awsSecretKey,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    encryptionTab,\n    awsEndpoint,\n    awsRegion,\n    awsSecretKey,\n    awsAccessKey,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value }),\n      );\n    },\n    [dispatch],\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_endpoint\"\n          name=\"aws_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsEndpoint\", e.target.value);\n            cleanValidation(\"aws_endpoint\");\n          }}\n          label=\"Endpoint\"\n          tooltip=\"Endpoint is the AWS SecretsManager endpoint. AWS SecretsManager endpoints have the following schema: secrestmanager[-fips].<region>.amanzonaws.com\"\n          value={awsEndpoint}\n          error={validationErrors[\"aws_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_region\"\n          name=\"aws_region\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsRegion\", e.target.value);\n            cleanValidation(\"aws_region\");\n          }}\n          label=\"Region\"\n          tooltip=\"Region is the AWS region the SecretsManager is located\"\n          value={awsRegion}\n          error={validationErrors[\"aws_region\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_kmsKey\"\n          name=\"aws_kmsKey\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsKMSKey\", e.target.value);\n          }}\n          label=\"KMS Key\"\n          tooltip=\"KMSKey is the AWS-KMS key ID (CMK-ID) used to en/decrypt secrets managed by the SecretsManager. If empty, the default AWS KMS key is used\"\n          value={awsKMSKey}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_accessKey\"\n              name=\"aws_accessKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsAccessKey\", e.target.value);\n                cleanValidation(\"aws_accessKey\");\n              }}\n              label=\"Access Key\"\n              tooltip=\"AccessKey is the access key for authenticating to AWS\"\n              value={awsAccessKey}\n              error={validationErrors[\"aws_accessKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_secretKey\"\n              name=\"aws_secretKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsSecretKey\", e.target.value);\n                cleanValidation(\"aws_secretKey\");\n              }}\n              label=\"Secret Key\"\n              tooltip=\"SecretKey is the secret key for authenticating to AWS\"\n              value={awsSecretKey}\n              error={validationErrors[\"aws_secretKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_token\"\n              name=\"aws_token\"\n              tooltip=\"SessionToken is an optional session token for authenticating to AWS when using STS\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsToken\", e.target.value);\n              }}\n              label=\"Token\"\n              value={awsToken}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AWSKMSAdd;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport {\n  addFileKESServerCert,\n  addFileKMSCa,\n  addFileKMSMTLSCert,\n  addFileMinIOMTLSCert,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport VaultKMSAdd from \"./Encryption/VaultKMSAdd\";\nimport AzureKMSAdd from \"./Encryption/AzureKMSAdd\";\nimport GCPKMSAdd from \"./Encryption/GCPKMSAdd\";\nimport GemaltoKMSAdd from \"./Encryption/GemaltoKMSAdd\";\nimport AWSKMSAdd from \"./Encryption/AWSKMSAdd\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport CodeMirrorWrapper from \"../../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport FormHr from \"../../../Common/FormHr\";\n\ninterface IEncryptionProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({ classes }: IEncryptionProps) => {\n  const dispatch = useAppDispatch();\n\n  const replicas = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.replicas,\n  );\n  const rawConfiguration = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.rawConfiguration,\n  );\n  const encryptionTab = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionTab,\n  );\n  const enableEncryption = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.enableEncryption,\n  );\n  const encryptionType = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionType,\n  );\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID,\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint,\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail,\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID,\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID,\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey,\n  );\n  const enableCustomCertsForKES = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.enableCustomCertsForKES,\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert,\n  );\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS,\n  );\n  const minioServerCertificates = useSelector(\n    (state: AppState) =>\n      state.createTenant.certificates.minioServerCertificates,\n  );\n  const kesServerCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kesServerCertificate,\n  );\n  const minioMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioMTLSCertificate,\n  );\n  const kmsMTLSCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsMTLSCertificate,\n  );\n  const kmsCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.kmsCA,\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts,\n  );\n  const kesSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.kesSecurityContext,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioServerCertificates &&\n        minioServerCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert,\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value }),\n      );\n    },\n    [dispatch],\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        {\n          fieldKey: \"rawConfiguration\",\n          required: encryptionTab > 0,\n          value: rawConfiguration,\n        },\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup!,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup!) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: kesServerCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: minioMTLSCertificate.encoded_cert,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    rawConfiguration,\n    encryptionTab,\n    enableEncryption,\n    encryptionType,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    dispatch,\n    enableAutoCert,\n    enableCustomCerts,\n    kesServerCertificate.encoded_key,\n    kesServerCertificate.encoded_cert,\n    minioMTLSCertificate.encoded_key,\n    minioMTLSCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Encryption</SectionH1>\n        </Grid>\n        <Grid item xs={4} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enableEncryption}\n            value={\"tenant_encryption\"}\n            id=\"tenant-encryption\"\n            name=\"tenant-encryption\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableEncryption\", checked);\n            }}\n            description=\"\"\n            disabled={!encryptionAvailable}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            MinIO Server-Side Encryption (SSE) protects objects as part of write\n            operations, allowing clients to take advantage of server processing\n            power to secure objects at the storage layer (encryption-at-rest).\n            SSE also provides key functionality to regulatory and compliance\n            requirements around secure locking and erasure.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <FormHr />\n        </Grid>\n\n        {enableEncryption && (\n          <Fragment>\n            <Grid item xs={12}>\n              <Tabs\n                value={encryptionTab}\n                onChange={(e: React.ChangeEvent<{}>, value: number) => {\n                  updateField(\"encryptionTab\", value);\n                }}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                aria-label=\"cluster-tabs\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab id=\"kms-options\" label=\"Options\" />\n                <Tab id=\"kms-raw-configuration\" label=\"Raw Edit\" />\n              </Tabs>\n            </Grid>\n\n            {encryptionTab ? (\n              <Fragment>\n                <Grid item xs={12}>\n                  <CodeMirrorWrapper\n                    value={rawConfiguration}\n                    mode={\"yaml\"}\n                    onBeforeChange={(editor, data, value) => {\n                      updateField(\"rawConfiguration\", value);\n                    }}\n                    editorHeight={\"550px\"}\n                  />\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.encryptionTypeOptions}>\n                  <RadioGroupSelector\n                    currentSelection={encryptionType}\n                    id=\"encryptionType\"\n                    name=\"encryptionType\"\n                    label=\"KMS\"\n                    onChange={(e) => {\n                      updateField(\"encryptionType\", e.target.value);\n                    }}\n                    selectorOptions={[\n                      { label: \"Vault\", value: \"vault\" },\n                      { label: \"AWS\", value: \"aws\" },\n                      { label: \"Gemalto\", value: \"gemalto\" },\n                      { label: \"GCP\", value: \"gcp\" },\n                      { label: \"Azure\", value: \"azure\" },\n                    ]}\n                  />\n                </Grid>\n                {encryptionType === \"vault\" && <VaultKMSAdd />}\n                {encryptionType === \"azure\" && <AzureKMSAdd />}\n                {encryptionType === \"gcp\" && <GCPKMSAdd />}\n                {encryptionType === \"aws\" && <AWSKMSAdd />}\n                {encryptionType === \"gemalto\" && <GemaltoKMSAdd />}\n              </Fragment>\n            )}\n\n            <div className={classes.headerElement}>\n              <h4 className={classes.h3Section}>Additional Configurations</h4>\n            </div>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCertsForKES\"\n                id=\"enableCustomCertsForKES\"\n                name=\"enableCustomCertsForKES\"\n                checked={enableCustomCertsForKES || !enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n\n                  updateField(\"enableCustomCertsForKES\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                disabled={!enableAutoCert}\n              />\n            </Grid>\n            {(enableCustomCertsForKES || !enableAutoCert) && (\n              <Fragment>\n                <Grid container>\n                  <Grid item xs={12} style={{ marginBottom: 15 }}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Encryption server certificates\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            }),\n                          );\n                          cleanValidation(\"serverKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"serverKey\"\n                        name=\"serverKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"serverKey\"] || \"\"}\n                        value={kesServerCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileKESServerCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            }),\n                          );\n                          cleanValidation(\"serverCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"serverCert\"\n                        name=\"serverCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"serverCert\"] || \"\"}\n                        value={kesServerCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container style={{ marginBottom: 15 }}>\n                  <Grid item xs={12}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        MinIO mTLS certificates (connection between MinIO and\n                        the Encryption server)\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            }),\n                          );\n                          cleanValidation(\"clientKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"clientKey\"\n                        name=\"clientKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"clientKey\"] || \"\"}\n                        value={minioMTLSCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileMinIOMTLSCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            }),\n                          );\n                          cleanValidation(\"clientCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"clientCert\"\n                        name=\"clientCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"clientCert\"] || \"\"}\n                        value={minioMTLSCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container className={classes.mutualTlsConfig}>\n                  <fieldset className={classes.fieldGroup}>\n                    <legend className={classes.descriptionText}>\n                      KMS mTLS certificates (connection between the Encryption\n                      server and the KMS)\n                    </legend>\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"key\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          }),\n                        );\n                        cleanValidation(\"vault_key\");\n                      }}\n                      accept=\".key,.pem\"\n                      id=\"vault_key\"\n                      name=\"vault_key\"\n                      label=\"Key\"\n                      value={kmsMTLSCertificate.key}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSMTLSCert({\n                            key: \"cert\",\n                            fileName: fileName,\n                            value: encodedValue,\n                          }),\n                        );\n                        cleanValidation(\"vault_cert\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_cert\"\n                      name=\"vault_cert\"\n                      label=\"Cert\"\n                      value={kmsMTLSCertificate.cert}\n                    />\n                    <FileSelector\n                      onChange={(encodedValue, fileName) => {\n                        dispatch(\n                          addFileKMSCa({\n                            fileName: fileName,\n                            value: encodedValue,\n                          }),\n                        );\n                        cleanValidation(\"vault_ca\");\n                      }}\n                      accept=\".cer,.crt,.cert,.pem\"\n                      id=\"vault_ca\"\n                      name=\"vault_ca\"\n                      label=\"CA\"\n                      value={kmsCA.cert}\n                    />\n                  </fieldset>\n                </Grid>\n              </Fragment>\n            )}\n            <Grid item xs={12}>\n              <Grid item xs={12} classes={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"1\"\n                  id=\"replicas\"\n                  name=\"replicas\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"replicas\", e.target.value);\n                    cleanValidation(\"replicas\");\n                  }}\n                  label=\"Replicas\"\n                  value={replicas}\n                  required\n                  error={validationErrors[\"replicas\"] || \"\"}\n                />\n              </Grid>\n\n              <fieldset\n                className={classes.fieldGroup}\n                style={{ marginTop: 15 }}\n              >\n                <legend className={classes.descriptionText}>\n                  SecurityContext for KES pods\n                </legend>\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsUser\"\n                        name=\"kes_securityContext_runAsUser\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsUser: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsUser\");\n                        }}\n                        label=\"Run As User\"\n                        value={kesSecurityContext.runAsUser}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsUser\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsGroup\"\n                        name=\"kes_securityContext_runAsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsGroup\");\n                        }}\n                        label=\"Run As Group\"\n                        value={kesSecurityContext.runAsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsGroup\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_fsGroup\"\n                        name=\"kes_securityContext_fsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_fsGroup\");\n                        }}\n                        label=\"FsGroup\"\n                        value={kesSecurityContext.fsGroup!}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <SelectWrapper\n                        label=\"FsGroupChangePolicy\"\n                        id=\"securityContext_fsGroupChangePolicy\"\n                        name=\"securityContext_fsGroupChangePolicy\"\n                        value={kesSecurityContext.fsGroupChangePolicy!}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroupChangePolicy: e.target.value,\n                          });\n                        }}\n                        options={[\n                          {\n                            label: \"Always\",\n                            value: \"Always\",\n                          },\n                          {\n                            label: \"OnRootMismatch\",\n                            value: \"OnRootMismatch\",\n                          },\n                        ]}\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12}>\n                  <div className={classes.multiContainer}>\n                    <FormSwitchWrapper\n                      value=\"kesSecurityContextRunAsNonRoot\"\n                      id=\"kes_securityContext_runAsNonRoot\"\n                      name=\"kes_securityContext_runAsNonRoot\"\n                      checked={kesSecurityContext.runAsNonRoot}\n                      onChange={(e) => {\n                        const targetD = e.target;\n                        const checked = targetD.checked;\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsNonRoot: checked,\n                        });\n                      }}\n                      label={\"Do not run as Root\"}\n                    />\n                  </div>\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Encryption);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { LabelKeyPair } from \"../../types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { AddIcon, RemoveIcon } from \"mds\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../systemSlice\";\nimport {\n  addNewToleration,\n  isPageValid,\n  removeToleration,\n  setKeyValuePairs,\n  setTolerationInfo,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.podAffinity,\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.nodeSelectorLabels,\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.withPodAntiAffinity,\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.createTenant.nodeSelectorPairs,\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.createTenant.tolerations,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {},\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"affinity\",\n          field: field,\n          value: value,\n        }),\n      );\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"affinity\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      }),\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Pod Placement</H3Section>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={i !== keyValuePairs.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = keyValuePairs.filter(\n                                (item, index) => index !== i,\n                              );\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            disabled={keyValuePairs.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removeToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\nimport H3Section from \"../../../Common/H3Section\";\n\ninterface IImagesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...wizardCommon,\n  });\n\nconst Images = ({ classes }: IImagesProps) => {\n  const dispatch = useAppDispatch();\n\n  const customImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customImage,\n  );\n  const imageName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageName,\n  );\n  const customDockerhub = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customDockerhub,\n  );\n  const imageRegistry = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageRegistry,\n  );\n  const imageRegistryUsername = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryUsername,\n  );\n  const imageRegistryPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryPassword,\n  );\n\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom,\n  );\n\n  const kesImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.kesImage,\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value }),\n      );\n    },\n    [dispatch],\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      }),\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    kesImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    dispatch,\n    tenantCustom,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <H3Section>Container Images</H3Section>\n        <span className={classes.descriptionText}>\n          Specify the container images used by the Tenant and its features.\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"minio/minio:RELEASE.2023-10-07T15-07-38Z\"\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"minio/kes:2023-10-03T00-48-37Z\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <h4>Custom Container Registry</h4>\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Use a private container registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Images);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({ classes }: ISizePreviewProps) => {\n  const nodes = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.nodes,\n  );\n  const memoryNode = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesMemoryRequest,\n  );\n  const ecParity = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParity,\n  );\n\n  const distribution = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.distribution,\n  );\n  const ecParityCalc = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParityCalc,\n  );\n\n  const cpuToUse = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesCPURequest,\n  );\n  const integrationSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.integrationSelection,\n  );\n\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity,\n  );\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? distribution.disks : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    CPU Selection\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {cpuToUse}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks,\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n      {integrationSelection.typeSelection !== \"\" &&\n        integrationSelection.storageClass !== \"\" && (\n          <Fragment>\n            <h4>Single Instance Configuration</h4>\n            <Divider />\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size={\"small\"}\n            >\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">CPU</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.CPU !== 0\n                      ? integrationSelection.CPU\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.memory !== 0\n                      ? `${integrationSelection.memory} Gi`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.drivesPerServer !== 0\n                      ? `${integrationSelection.drivesPerServer}`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    Drive Size\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {integrationSelection.driveSize.driveSize}\n                    {integrationSelection.driveSize.sizeUnit}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Fragment>\n        )}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SizePreview);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"mds\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { closeAddNSModal } from \"../../createTenantSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { createNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  }),\n);\n\nconst AddNamespaceModal = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace,\n  );\n  const addNamespaceLoading = useSelector(\n    (state: AppState) => state.createTenant.addNSLoading,\n  );\n  const addNamespaceOpen = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen,\n  );\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        variant: \"callAction\",\n      }}\n      isOpen={addNamespaceOpen}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={addNamespaceLoading}\n      onConfirm={() => {\n        dispatch(createNamespaceAsync());\n      }}\n      onClose={() => {\n        dispatch(closeAddNSModal());\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default AddNamespaceModal;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useMemo } from \"react\";\nimport { AddIcon } from \"mds\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { openAddNSModal, setNamespace } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\nimport debounce from \"lodash/debounce\";\nimport { IMkEnvs } from \"./utils\";\nimport { validateNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst NamespaceSelector = ({ formToRender }: { formToRender?: IMkEnvs }) => {\n  const dispatch = useAppDispatch();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace,\n  );\n\n  const showNSCreateButton = useSelector(\n    (state: AppState) => state.createTenant.showNSCreateButton,\n  );\n\n  const namespaceError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"namespace\"],\n  );\n  const openAddNSConfirm = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen,\n  );\n\n  const debounceNamespace = useMemo(\n    () =>\n      debounce(() => {\n        dispatch(validateNamespaceAsync());\n      }, 500),\n    [dispatch],\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  const addNamespace = () => {\n    dispatch(openAddNSModal());\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && <AddNamespaceModal />}\n      <InputBoxWrapper\n        id=\"namespace\"\n        name=\"namespace\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          dispatch(setNamespace(e.target.value));\n        }}\n        label=\"Namespace\"\n        value={namespace}\n        error={namespaceError || \"\"}\n        overlayId={\"add-namespace\"}\n        overlayIcon={showNSCreateButton ? <AddIcon /> : null}\n        overlayAction={addNamespace}\n        required\n      />\n    </Fragment>\n  );\n};\nexport default NamespaceSelector;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport SizePreview from \"../SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\nimport {\n  isPageValid,\n  setStorageType,\n  setTenantName,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { selFeatures } from \"../../../../consoleSlice\";\nimport NamespaceSelector from \"./NamespaceSelector\";\nimport H3Section from \"../../../../Common/H3Section\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n      marginTop: 20,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst NameTenantField = () => {\n  const dispatch = useAppDispatch();\n  const tenantName = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.tenantName,\n  );\n\n  const tenantNameError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"tenant-name\"],\n  );\n\n  return (\n    <InputBoxWrapper\n      id=\"tenant-name\"\n      name=\"tenant-name\"\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setTenantName(e.target.value));\n      }}\n      label=\"Name\"\n      value={tenantName}\n      required\n      error={tenantNameError || \"\"}\n    />\n  );\n};\n\ninterface INameTenantMainScreen {\n  classes: any;\n  formToRender?: IMkEnvs;\n}\n\nconst NameTenantMain = ({ classes, formToRender }: INameTenantMainScreen) => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass,\n  );\n  const selectedStorageType = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageType,\n  );\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses,\n  );\n  const features = useSelector(selFeatures);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      dispatch(\n        updateAddField({ pageName: \"nameTenant\", field: field, value: value }),\n      );\n    },\n    [dispatch],\n  );\n\n  // Validation\n  useEffect(() => {\n    const isValid =\n      (formToRender === IMkEnvs.default && storageClasses.length > 0) ||\n      (formToRender !== IMkEnvs.default && selectedStorageType !== \"\");\n\n    dispatch(isPageValid({ pageName: \"nameTenant\", valid: isValid }));\n  }, [storageClasses, dispatch, selectedStorageType, formToRender]);\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item sx={{ width: \"calc(100% - 320px)\" }}>\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <H3Section>Name</H3Section>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <NameTenantField />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <NamespaceSelector formToRender={formToRender} />\n              </Grid>\n              {formToRender === IMkEnvs.default ? (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_class\"\n                    name=\"storage_class\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageClass\",\n                        e.target.value as string,\n                      );\n                    }}\n                    label=\"Storage Class\"\n                    value={selectedStorageClass}\n                    options={storageClasses}\n                    disabled={storageClasses.length < 1}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_type\"\n                    name=\"storage_type\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      dispatch(\n                        setStorageType({\n                          storageType: e.target.value as string,\n                          features: features,\n                        }),\n                      );\n                    }}\n                    label={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorLabel`,\n                      \"Storage Type\",\n                    )}\n                    value={selectedStorageType}\n                    options={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorValues`,\n                      [],\n                    )}\n                  />\n                </Grid>\n              )}\n              {formToRender === IMkEnvs.default ? (\n                <TenantSize />\n              ) : (\n                get(\n                  mkPanelConfigurations,\n                  `${formToRender}.sizingComponent`,\n                  null,\n                )\n              )}\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NameTenantMain);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash/get\";\nimport NameTenantMain from \"./NameTenantMain\";\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\nimport { selFeatures } from \"../../../../consoleSlice\";\n\nconst TenantResources = () => {\n  const features = useSelector(selFeatures);\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default,\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  if (formRender === null) {\n    return null;\n  }\n\n  return <NameTenantMain formToRender={formRender} />;\n};\n\nexport default TenantResources;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nexport const requiredPages = [\n  \"nameTenant\",\n  \"tenantSize\",\n  \"configure\",\n  \"affinity\",\n  \"identityProvider\",\n  \"security\",\n  \"encryption\",\n];\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"mds\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { requiredPages } from \"./common\";\nimport { createTenantAsync } from \"./thunks/createTenantThunk\";\n\nconst CreateTenantButton = () => {\n  const dispatch = useAppDispatch();\n\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant,\n  );\n\n  const validPages = useSelector(\n    (state: AppState) => state.createTenant.validPages,\n  );\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass,\n  );\n\n  const enabled =\n    !addSending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"callAction\"\n      color=\"primary\"\n      onClick={() => {\n        dispatch(createTenantAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n      label={\"Create\"}\n    />\n  );\n};\n\nexport default CreateTenantButton;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewTenantCredentials = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const showNewCredentials = useSelector(\n    (state: AppState) => state.createTenant.showNewCredentials,\n  );\n  const createdAccount = useSelector(\n    (state: AppState) => state.createTenant.createdAccount,\n  );\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            dispatch(resetAddTenantForm());\n            navigate(\"/tenants\");\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default NewTenantCredentials;\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport {\n  IWizardButton,\n  IWizardElement,\n} from \"../../Common/GenericWizard/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\n\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\nimport {\n  IMkEnvs,\n  resourcesConfigurations,\n} from \"./Steps/TenantResources/utils\";\nimport { BackLink, HelpBox, StorageIcon } from \"mds\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport CreateTenantButton from \"./CreateTenantButton\";\nimport NewTenantCredentials from \"./NewTenantCredentials\";\nimport { useNavigate } from \"react-router-dom\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  }),\n);\n\nconst AddTenant = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const features = useSelector(selFeatures);\n\n  // Fields\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant,\n  );\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default,\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetAddTenantForm());\n      navigate(\"/tenants\");\n    },\n  };\n\n  const createButton: IWizardButton = {\n    componentRender: <CreateTenantButton key={\"create-tenant\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <TenantResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  return (\n    <Fragment>\n      <NewTenantCredentials />\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            onClick={() => {\n              dispatch(resetAddTenantForm());\n              navigate(\"/tenants\");\n            }}\n            label={\"Tenants\"}\n          />\n        }\n      />\n\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n        {formRender === IMkEnvs.aws && (\n          <Grid item xs={12} style={{ marginTop: 16 }}>\n            <HelpBox\n              title={\"EBS Volume Configuration.\"}\n              iconComponent={<StorageIcon />}\n              help={\n                <Fragment>\n                  <b>Performance Optimized</b>: Uses the <i>gp3</i> EBS storage\n                  class class configured at 1,000Mi/s throughput and 16,000\n                  IOPS, however the minimum volume size for this type of EBS\n                  volume is <b>32Gi</b>.\n                  <br />\n                  <br />\n                  <b>Storage Optimized</b>: Uses the <i>sc1</i> EBS storage\n                  class, however the minimum volume size for this type of EBS\n                  volume is &nbsp;\n                  <b>16Ti</b> to unlock their maximum throughput speed of\n                  250Mi/s.\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddTenant;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport { CertificateIcon } from \"mds\";\nimport { useParams } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst TLSHelpBox = () => {\n  const params = useParams();\n  const tenantNameParam = params.tenantName || \"\";\n  const tenantNamespaceParam = params.tenantNamespace || \"\";\n  const namespace = useSelector((state: AppState) => {\n    var defaultNamespace = \"<namespace>\";\n    if (tenantNamespaceParam !== \"\") {\n      return tenantNamespaceParam;\n    }\n    if (state.createTenant.fields.nameTenant.namespace !== \"\") {\n      return state.createTenant.fields.nameTenant.namespace;\n    }\n    return defaultNamespace;\n  });\n\n  const tenantName = useSelector((state: AppState) => {\n    var defaultTenantName = \"<tenant-name>\";\n    if (tenantNameParam !== \"\") {\n      return tenantNameParam;\n    }\n\n    if (state.createTenant.fields.nameTenant.tenantName !== \"\") {\n      return state.createTenant.fields.nameTenant.tenantName;\n    }\n    return defaultTenantName;\n  });\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CertificateIcon />}\n          description={`TLS Certificates Warning`}\n        />\n        <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n          Automatic certificate generation is not enabled.\n          <br />\n          <br />\n          If you wish to continue only with <b>custom certificates</b> make sure\n          they are valid for the following internode hostnames, i.e.:\n          <br />\n          <br />\n          <div\n            style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}\n          >\n            minio.{namespace}\n            <br />\n            minio.{namespace}.svc\n            <br />\n            minio.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{tenantName}-hl.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{namespace}.svc.&#x3C;cluster domain&#x3E;\n          </div>\n          <br />\n          Replace <em>&#x3C;tenant-name&#x3E;</em>,{\" \"}\n          <em>&#x3C;namespace&#x3E;</em> and\n          <em>&#x3C;cluster domain&#x3E;</em> with the actual values for your\n          MinIO tenant.\n          <br />\n          <br />\n          You can learn more at our{\" \"}\n          <a\n            href=\"https://min.io/docs/minio/kubernetes/upstream/operations/network-encryption.html?ref=op#id5\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            documentation\n          </a>\n          .\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TLSHelpBox;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport { LDAPIcon, OIDCIcon, UsersIcon } from \"mds\";\n\nexport const OIDCLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <OIDCIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Open ID</Grid>\n    </Grid>\n  );\n};\n\nexport const LDAPLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <LDAPIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>LDAP / Active Directory</Grid>\n    </Grid>\n  );\n};\n\nexport const BuiltInLogoElement = () => {\n  return (\n    <Grid container columnGap={1}>\n      <Grid>\n        <UsersIcon width={\"16px\"} height={\"16px\"} />\n      </Grid>\n      <Grid item>Built-in</Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z\"\n}), 'Casino');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    content: '\"\"',\n    alignSelf: 'center'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation !== 'vertical' && {\n  '&::before, &::after': {\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n      absolute = false,\n      children,\n      className,\n      component = children ? 'div' : 'hr',\n      flexItem = false,\n      light = false,\n      orientation = 'horizontal',\n      role = component !== 'hr' ? 'separator' : undefined,\n      textAlign = 'center',\n      variant = 'fullWidth'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["withStyles","theme","createStyles","container","display","flexFlow","padding","inputWithCopy","width","background","height","marginRight","inputLabel","fieldBasic","fontSize","_ref","label","value","classes","_jsxs","className","children","_jsx","OutlinedInput","readOnly","endAdornment","InputAdornment","position","TooltipWrapper","tooltip","CopyToClipboard","text","Button","id","onClick","onMouseDown","style","icon","CopyIcon","download","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","warningBlock","color","margin","alignItems","credentialTitle","fontWeight","buttonContainer","justifyContent","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","title","titleIcon","ServiceAccountCredentialsIcon","Grid","item","xs","formScrollable","React","Array","isArray","map","credentialsPair","index","_Fragment","CredentialItem","accessKey","secretKey","undefined","WarnIcon","downloadImport","consoleExtras","itemMap","url","api","path","JSON","stringify","DownloadIcon","variant","length","downloaddAllCredentials","allCredentials","mode","onBeforeChange","editorHeight","sx","marginBottom","InputLabel","tooltipContainer","Tooltip","placement","HelpIcon","overflow","border","CodeEditor","language","onChange","evn","target","backgroundColor","fontFamily","minHeight","borderTop","Box","paddingRight","marginLeft","type","tooltipHelper","valueString","maxWidth","whiteSpace","textOverflow","fileInputField","fileInputStyles","textBoxContainer","paddingLeft","name","disabled","required","error","accept","showFileSelector","setShowSelector","useState","concat","fieldBottom","fieldContainer","errorInField","htmlFor","fieldLabelError","e","fileName","fileProcess","evt","callback","file","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","data","IconButton","component","disableRipple","disableFocusRipple","size","CancelIcon","ErrorBlock","errorMessage","fileReselect","AttachFileIcon","styled","_templateObject","_taggedTemplateLiteral","deleteDialogStyles","content","paddingBottom","customDialogSize","snackBarCommon","wideLimit","noContentPadding","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","Dialog","scroll","event","reason","root","DialogTitle","titleText","closeContainer","closeButton","CloseIcon","MainError","isModal","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","DialogContent","errorProps","cloneElement","configSectionItem","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","paddingTop","responsiveSectionItem","wrapperContainer","envVarRow","borderBottom","flex","minWidth","fileItem","rowActions","overlayAction","modalBasic","wizardCommon","formFieldStyles","exposeMinIO","createTenant","fields","configure","exposeConsole","exposeSFTP","setDomains","consoleDomain","minioDomains","tenantCustom","tenantEnvVars","envVars","tenantSecurityContext","customRuntime","runtimeClassName","validationErrors","setValidationErrors","updateField","useCallback","field","updateAddField","pageName","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","minioExtraValidations","validation","pattern","customPatternMessage","commonVal","commonFormValidation","isPageValid","valid","Object","keys","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","H3Section","descriptionText","h3Section","FormSwitchWrapper","checked","InputBoxWrapper","placeholder","domain","updateMinIODomain","copyDomains","addNewMinIODomain","AddIcon","removeMinIODomain","RemoveIcon","multiContainer","min","SelectWrapper","fsGroupChangePolicy","options","runAsNonRoot","Divider","envVar","formFieldRow","key","existingEnvVars","setEnvVars","keyPair","i","push","filter","fIndex","useStyles","makeStyles","adUserDnRows","buttonTray","IDPActiveDirectory","idpSelection","identityProvider","ADURL","ADSkipTLS","ADServerInsecure","ADGroupSearchBaseDN","ADGroupSearchFilter","ADUserDNs","ADGroupDNs","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","customIDPValidation","Fragment","Typography","gutterBottom","_","setIDPADUsrAtIndex","userDN","addIDPADUsrAtIndex","removeIDPADUsrAtIndex","DeleteIcon","setIDPADGroupAtIndex","addIDPADGroupAtIndex","removeIDPADGroupAtIndex","IDPOpenID","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDClaimName","openIDScopes","shortened","gridTemplateColumns","gridGap","IDPBuiltIn","accessKeys","secretKeys","setIDPUsrAtIndex","setIDPPwdAtIndex","addIDPNewKeyPair","removeIDPKeyPairAtIndex","getRandomString","CasinoIcon","protocolRadioOptions","IdentityProvider","RadioGroupSelector","currentSelection","setIDP","selectorOptions","BuiltInLogoElement","OIDCLogoElement","LDAPLogoElement","minioCertificateRows","minioCertsContainer","minioCACertsRow","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","minioServerCertificates","minioClientCertificates","caCertificates","minioCAsCertificates","spacing","description","TLSHelpBox","FileSelector","encodedValue","addFileToKeyPair","cert","addKeyPair","deleteKeyPair","addFileToClientKeyPair","addClientKeyPair","deleteClientKeyPair","addFileToCaCertificates","addCaCertificate","deleteCaCertificate","VaultKMSAdd","encryptionTab","encryption","vaultEndpoint","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","encryptionValidation","AzureKMSAdd","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","GCPKMSAdd","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","GemaltoKMSAdd","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","AWSKMSAdd","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","encryptionTypeOptions","mutualTlsConfig","rightSpacer","responsiveContainer","replicas","rawConfiguration","enableEncryption","encryptionType","enableCustomCertsForKES","kesServerCertificate","minioMTLSCertificate","kmsMTLSCertificate","kmsCA","kesSecurityContext","encryptionAvailable","encoded_key","encoded_cert","SectionH1","textAlign","indicatorLabels","FormHr","Tabs","indicatorColor","textColor","scrollButtons","Tab","CodeMirrorWrapper","editor","addFileKESServerCert","addFileMinIOMTLSCert","addFileKMSMTLSCert","addFileKMSCa","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","invoke","then","res","k","catch","err","setModalErrorSnackMessage","vl","kvp","kvs","a","indexOf","join","splittedLabels","forEach","splitItem","updateToleration","alterToleration","setTolerationInfo","tolerationValue","affinityHelpText","newKey","newLKP","arrCp","setKeyValuePairs","v","tol","_tol$tolerationSecond","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewToleration","removeToleration","customImage","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","kesImage","table","nodes","tenantSize","memoryNode","resourcesMemoryRequest","ecParity","distribution","ecParityCalc","cpuToUse","resourcesCPURequest","integrationSelection","usableInformation","storageFactors","find","erasureCode","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","drivesPerServer","driveSize","sizeUnit","wrapText","wordWrap","AddNamespaceModal","namespace","nameTenant","addNamespaceLoading","addNSLoading","addNamespaceOpen","addNSOpen","ConfirmDialog","confirmText","confirmButtonProps","isOpen","ConfirmModalIcon","isLoading","onConfirm","createNamespaceAsync","closeAddNSModal","confirmationContent","LinearProgress","DialogContentText","formToRender","showNSCreateButton","namespaceError","openAddNSConfirm","debounceNamespace","useMemo","debounce","validateNamespaceAsync","cancel","setNamespace","overlayId","overlayIcon","addNamespace","openAddNSModal","NameTenantField","tenantName","tenantNameError","setTenantName","sizePreview","selectedStorageClass","selectedStorageType","storageClasses","features","selFeatures","isValid","IMkEnvs","default","NamespaceSelector","setStorageType","storageType","mkPanelConfigurations","TenantSize","SizePreview","TenantResources","formRender","setFormRender","setConfiguration","resourcesConfigurations","includes","NameTenantMain","requiredPages","CreateTenantButton","addSending","addingTenant","validPages","enabled","every","createTenantAsync","NewTenantCredentials","navigate","useNavigate","showNewCredentials","createdAccount","CredentialsPrompt","resetAddTenantForm","pageBox","settingsCommon","AddTenant","cancelButton","action","createButton","componentRender","filteredWizardSteps","buttons","advancedOnly","Configure","Images","Affinity","Security","Encryption","PageHeaderWrapper","BackLink","PageLayout","GenericWizard","wizardSteps","aws","HelpBox","iconComponent","StorageIcon","help","FeatureItem","fontStyle","params","useParams","tenantNameParam","tenantNamespaceParam","tenantNamespace","borderRadius","CertificateIcon","href","rel","columnGap","OIDCIcon","LDAPIcon","UsersIcon","_theme$palette","errorBlock","palette","main","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","_excluded","DividerRoot","slot","overridesResolver","props","styles","ownerState","absolute","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","_extends","flexShrink","borderWidth","borderStyle","borderColor","vars","divider","borderBottomWidth","bottom","left","dividerChannel","alpha","borderRightWidth","alignSelf","_ref2","_ref3","_ref4","flexDirection","borderLeft","_ref5","DividerWrapper","wrapper","wrapperVertical","_ref6","inProps","ref","useThemeProps","role","other","_objectWithoutPropertiesLoose","slots","composeClasses","getDividerUtilityClass","useUtilityClasses","as","clsx","getInputAdornmentUtilityClass","generateUtilityClass","generateUtilityClasses","_span","InputAdornmentRoot","capitalize","disablePointerEvents","active","inputAdornmentClasses","positionStart","hiddenLabel","pointerEvents","disableTypography","variantProp","muiFormControl","useFormControl","FormControlContext","Provider"],"sourceRoot":""}