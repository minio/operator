{"version":3,"file":"static/js/32.322d0e88.chunk.js","mappings":"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","sources":["screens/Console/Common/Hooks/useApi.tsx","screens/Console/Common/WarningMessage/WarningMessage.tsx","screens/Console/Tenants/ListTenants/DeleteTenant.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any, headers?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data, headers)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\ninterface IWarningMessage {\n  classes: any;\n  label: any;\n  title: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      backgroundColor: \"#e78794\",\n      borderRadius: 3,\n      marginBottom: 20,\n      padding: 1,\n      paddingBottom: 15,\n    },\n    labelHeadline: {\n      color: \"#000000\",\n      fontSize: 14,\n      marginLeft: 20,\n    },\n    labelText: {\n      color: \"#000000\",\n      fontSize: 14,\n      marginLeft: 20,\n      marginRight: 40,\n    },\n  });\n\nconst WarningMessage = ({ classes, label, title }: IWarningMessage) => {\n  return (\n    <div className={classes.headerContainer}>\n      <h4 className={classes.labelHeadline}>{title}</h4>\n      <div className={classes.labelText}>{label}</div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(WarningMessage);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport WarningMessage from \"../../Common/WarningMessage/WarningMessage\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { Tenant } from \"../../../../api/operatorApi\";\n\ninterface IDeleteTenant {\n  deleteOpen: boolean;\n  selectedTenant: Tenant;\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\n}\n\nconst DeleteTenant = ({\n  deleteOpen,\n  selectedTenant,\n  closeDeleteModalAndRefresh,\n}: IDeleteTenant) => {\n  const dispatch = useAppDispatch();\n  const [retypeTenant, setRetypeTenant] = useState(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteVolumes, setDeleteVolumes] = useState<boolean>(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const onConfirmDelete = () => {\n    if (retypeTenant !== selectedTenant.name) {\n      setErrorSnackMessage({\n        errorMessage: \"Tenant name is incorrect\",\n        detailedError: \"\",\n      });\n      return;\n    }\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/namespaces/${selectedTenant.namespace}/tenants/${selectedTenant.name}`,\n      { delete_pvcs: deleteVolumes }\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Tenant`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypeTenant !== selectedTenant.name || deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          {deleteVolumes && (\n            <Grid item xs={12}>\n              <WarningMessage\n                title={\"WARNING\"}\n                label={\n                  \"Delete Volumes: Data will be permanently deleted. Please proceed with caution.\"\n                }\n              />\n            </Grid>\n          )}\n          To continue please type <b>{selectedTenant.name}</b> in the box.\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"retype-tenant\"\n              name=\"retype-tenant\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypeTenant(event.target.value);\n              }}\n              label=\"\"\n              value={retypeTenant}\n            />\n            <br />\n            <FormSwitchWrapper\n              checked={deleteVolumes}\n              id={`delete-volumes`}\n              label={\"Delete Volumes\"}\n              name={`delete-volumes`}\n              onChange={() => {\n                setDeleteVolumes(!deleteVolumes);\n              }}\n              value={deleteVolumes}\n            />\n          </Grid>\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteTenant;\n"],"names":["onSuccess","onError","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","method","url","data","headers","api","invoke","then","res","catch","err","withStyles","theme","createStyles","headerContainer","backgroundColor","borderRadius","marginBottom","padding","paddingBottom","labelHeadline","color","fontSize","marginLeft","labelText","marginRight","_ref","classes","label","title","_jsxs","className","children","_jsx","deleteOpen","selectedTenant","closeDeleteModalAndRefresh","dispatch","useAppDispatch","retypeTenant","setRetypeTenant","_useState3","_useState4","deleteVolumes","setDeleteVolumes","_useApi","useApi","setErrorSnackMessage","_useApi2","deleteLoading","invokeDeleteApi","ConfirmDialog","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","onConfirm","name","concat","namespace","delete_pvcs","errorMessage","detailedError","onClose","confirmButtonProps","disabled","confirmationContent","DialogContentText","Grid","item","xs","WarningMessage","InputBoxWrapper","id","onChange","event","target","value","FormSwitchWrapper","checked"],"sourceRoot":""}