{"version":3,"file":"static/js/332.2e44c6de.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/FormHr.tsx","screens/Console/Common/TLSCertificate/TLSCertificate.tsx","screens/Console/Tenants/HelpBox/TLSHelpBox.tsx","screens/Console/Tenants/securityContextSelector.tsx","screens/Console/Tenants/TenantDetails/TenantSecurity.tsx","screens/shared/ErrorBlock.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport { HelpIcon } from \"mds\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Operator\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport styled from \"@emotion/styled\";\n\nconst FormHr = styled(\"hr\")`\n  border-top: 0;\n  border-left: 0;\n  border-right: 0;\n  border-color: #999999;\n  background-color: transparent;\n`;\n\nexport default FormHr;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { DateTime, Duration } from \"luxon\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { ICertificateInfo } from \"../../Tenants/types\";\nimport LanguageIcon from \"@mui/icons-material/Language\";\nimport Chip from \"@mui/material/Chip\";\nimport {\n  Box,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from \"@mui/material\";\nimport EventBusyIcon from \"@mui/icons-material/EventBusy\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport { CertificateIcon } from \"mds\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    certificateIcon: {\n      float: \"left\",\n      paddingTop: \"5px !important\",\n      paddingRight: \"10px !important\",\n    },\n    certificateInfo: { float: \"right\" },\n    certificateWrapper: {\n      height: \"auto\",\n      margin: 5,\n      border: \"1px solid #E2E2E2\",\n      userSelect: \"text\",\n      borderRadius: 4,\n      \"& h6\": {\n        fontWeight: \"bold\",\n      },\n      \"& div\": {\n        padding: 0,\n      },\n    },\n    certificateExpiry: {\n      color: \"#616161\",\n      display: \"flex\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      marginBottom: 5,\n      \"& .label\": {\n        fontWeight: \"bold\",\n      },\n    },\n    certificateDomains: {\n      color: \"#616161\",\n      \"& .label\": {\n        fontWeight: \"bold\",\n      },\n    },\n    certificatesList: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 4,\n      color: \"#616161\",\n      textTransform: \"lowercase\",\n      overflowY: \"scroll\",\n      maxHeight: 145,\n      marginBottom: 10,\n    },\n    certificatesListItem: {\n      padding: \"0px 16px\",\n      borderBottom: \"1px solid #E2E2E2\",\n      \"& div\": {\n        minWidth: 0,\n      },\n      \"& svg\": {\n        fontSize: 12,\n        marginRight: 10,\n        opacity: 0.5,\n      },\n      \"& span\": {\n        fontSize: 12,\n      },\n    },\n    certificateExpiring: {\n      color: \"orange\",\n      \"& .label\": {\n        fontWeight: \"bold\",\n      },\n    },\n    certificateExpired: {\n      color: \"red\",\n      \"& .label\": {\n        fontWeight: \"bold\",\n      },\n    },\n  });\n\ninterface ITLSCertificate {\n  classes: any;\n  certificateInfo: ICertificateInfo;\n  onDelete: any;\n}\n\nconst TLSCertificate = ({\n  classes,\n  certificateInfo,\n  onDelete = () => {},\n}: ITLSCertificate) => {\n  const certificates = certificateInfo.domains || [];\n\n  const expiry = DateTime.fromISO(certificateInfo.expiry);\n  const now = DateTime.utc();\n  // Expose error on Tenant if certificate is near expiration or expired\n  let daysToExpiry: number = 0;\n  let daysToExpiryHuman: string = \"\";\n  let certificateExpiration: string = \"\";\n  if (expiry) {\n    let durationToExpiry = expiry.diff(now);\n    daysToExpiry = durationToExpiry.as(\"days\");\n    daysToExpiryHuman = durationToExpiry\n      .minus(Duration.fromObject({ days: 1 }))\n      .shiftTo(\"days\")\n      .toHuman({ listStyle: \"long\", maximumFractionDigits: 0 });\n    if (daysToExpiry >= 10 && daysToExpiry < 30) {\n      certificateExpiration = classes.certificateExpiring;\n    }\n    if (daysToExpiry < 10) {\n      certificateExpiration = classes.certificateExpired;\n      if (daysToExpiry < 2) {\n        daysToExpiryHuman = durationToExpiry\n          .minus(Duration.fromObject({ minutes: 1 }))\n          .shiftTo(\"hours\", \"minutes\")\n          .toHuman({ listStyle: \"long\", maximumFractionDigits: 0 });\n        if (durationToExpiry.as(\"minutes\") <= 1) {\n          daysToExpiryHuman = \"EXPIRED\";\n        }\n      }\n    }\n  }\n\n  return (\n    <Chip\n      key={certificateInfo.name}\n      variant=\"outlined\"\n      color=\"primary\"\n      className={classes.certificateWrapper}\n      label={\n        <Container>\n          <Grid item xs={1} className={classes.certificateIcon}>\n            <CertificateIcon />\n          </Grid>\n          <Grid item xs={11} className={classes.certificateInfo}>\n            <Typography variant=\"subtitle1\" display=\"block\" gutterBottom>\n              {certificateInfo.name}\n            </Typography>\n            <Box className={classes.certificateExpiry}>\n              <EventBusyIcon color=\"inherit\" fontSize=\"small\" />\n              &nbsp;\n              <span className={\"label\"}>Expiry:&nbsp;</span>\n              <span>{expiry.toFormat(\"yyyy/MM/dd\")}</span>\n            </Box>\n            <Box className={classes.certificateExpiry}>\n              <AccessTimeIcon color=\"inherit\" fontSize=\"small\" />\n              &nbsp;\n              <span className={\"label\"}>Expires in:&nbsp;</span>\n              <span className={certificateExpiration}>{daysToExpiryHuman}</span>\n            </Box>\n            <Divider />\n            <br />\n            <Box className={classes.certificateDomains}>\n              <span className=\"label\">{`${certificates.length} Domain (s):`}</span>\n            </Box>\n            <List className={classes.certificatesList}>\n              {certificates.map((dom, index) => (\n                <ListItem\n                  key={`${dom}-${index}`}\n                  className={classes.certificatesListItem}\n                >\n                  <ListItemAvatar>\n                    <LanguageIcon />\n                  </ListItemAvatar>\n                  <ListItemText primary={dom} />\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n        </Container>\n      }\n      onDelete={onDelete}\n    />\n  );\n};\n\nexport default withStyles(styles)(TLSCertificate);\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport { CertificateIcon } from \"mds\";\nimport { useParams } from \"react-router-dom\";\nimport { AppState } from \"../../../../store\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst TLSHelpBox = () => {\n  const params = useParams();\n  const tenantNameParam = params.tenantName || \"\";\n  const tenantNamespaceParam = params.tenantNamespace || \"\";\n  const namespace = useSelector((state: AppState) => {\n    var defaultNamespace = \"<namespace>\";\n    if (tenantNamespaceParam !== \"\") {\n      return tenantNamespaceParam;\n    }\n    if (state.createTenant.fields.nameTenant.namespace !== \"\") {\n      return state.createTenant.fields.nameTenant.namespace;\n    }\n    return defaultNamespace;\n  });\n\n  const tenantName = useSelector((state: AppState) => {\n    var defaultTenantName = \"<tenant-name>\";\n    if (tenantNameParam !== \"\") {\n      return tenantNameParam;\n    }\n\n    if (state.createTenant.fields.nameTenant.tenantName !== \"\") {\n      return state.createTenant.fields.nameTenant.tenantName;\n    }\n    return defaultTenantName;\n  });\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: {\n          xs: \"0px\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem\n          icon={<CertificateIcon />}\n          description={`TLS Certificates Warning`}\n        />\n        <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n          Automatic certificate generation is not enabled.\n          <br />\n          <br />\n          If you wish to continue only with <b>custom certificates</b> make sure\n          they are valid for the following internode hostnames, i.e.:\n          <br />\n          <br />\n          <div\n            style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}\n          >\n            minio.{namespace}\n            <br />\n            minio.{namespace}.svc\n            <br />\n            minio.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{tenantName}-hl.{namespace}.svc.&#x3C;cluster domain&#x3E;\n            <br />\n            *.{namespace}.svc.&#x3C;cluster domain&#x3E;\n          </div>\n          <br />\n          Replace <em>&#x3C;tenant-name&#x3E;</em>,{\" \"}\n          <em>&#x3C;namespace&#x3E;</em> and\n          <em>&#x3C;cluster domain&#x3E;</em> with the actual values for your\n          MinIO tenant.\n          <br />\n          <br />\n          You can learn more at our{\" \"}\n          <a\n            href=\"https://min.io/docs/minio/kubernetes/upstream/operations/network-encryption.html?ref=op#id5\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            documentation\n          </a>\n          .\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TLSHelpBox;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport SelectWrapper from \"../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { Grid, SelectChangeEvent } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fsGroupChangePolicyType } from \"./types\";\n\ninterface IEditSecurityContextProps {\n  classes: any;\n  runAsUser: string;\n  runAsGroup: string;\n  fsGroup: string;\n  fsGroupChangePolicy: fsGroupChangePolicyType;\n  runAsNonRoot: boolean;\n  setRunAsUser: any;\n  setRunAsGroup: any;\n  setFSGroup: any;\n  setRunAsNonRoot: any;\n  setFSGroupChangePolicy: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n  });\n\nconst SecurityContextSelector = ({\n  classes,\n  runAsGroup,\n  runAsUser,\n  fsGroup,\n  fsGroupChangePolicy,\n  runAsNonRoot,\n  setRunAsUser,\n  setRunAsGroup,\n  setFSGroup,\n  setRunAsNonRoot,\n  setFSGroupChangePolicy,\n}: IEditSecurityContextProps) => {\n  const dispatch = useDispatch();\n  return (\n    <Fragment>\n      <fieldset className={`${classes.fieldGroup} ${classes.fieldSpaceTop} `}>\n        <legend className={classes.descriptionText}>Security Context</legend>\n\n        <Grid item xs={12}>\n          <div className={`${classes.multiContainerStackNarrow} `}>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_runAsUser\"\n                name=\"securityContext_runAsUser\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setRunAsUser(e.target.value));\n                }}\n                label=\"Run As User\"\n                value={runAsUser}\n                required\n                min=\"0\"\n              />\n            </div>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_runAsGroup\"\n                name=\"securityContext_runAsGroup\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setRunAsGroup(e.target.value));\n                }}\n                label=\"Run As Group\"\n                value={runAsGroup}\n                required\n                min=\"0\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <div className={`${classes.multiContainerStackNarrow} `}>\n            <div className={classes.configSectionItem}>\n              <InputBoxWrapper\n                type=\"number\"\n                id=\"securityContext_fsGroup\"\n                name=\"securityContext_fsGroup\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(setFSGroup(e.target.value));\n                }}\n                label=\"FsGroup\"\n                value={fsGroup}\n                required\n                min=\"0\"\n              />\n            </div>\n\n            <div className={classes.configSectionItem}>\n              <SelectWrapper\n                label=\"FsGroupChangePolicy\"\n                id=\"securityContext_fsGroupChangePolicy\"\n                name=\"securityContext_fsGroupChangePolicy\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  dispatch(setFSGroupChangePolicy(e.target.value));\n                }}\n                value={fsGroupChangePolicy}\n                options={[\n                  {\n                    label: \"Always\",\n                    value: \"Always\",\n                  },\n                  {\n                    label: \"OnRootMismatch\",\n                    value: \"OnRootMismatch\",\n                  },\n                ]}\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <div className={classes.multiContainer}>\n            <FormSwitchWrapper\n              value=\"SecurityContextRunAsNonRoot\"\n              id=\"securityContext_runAsNonRoot\"\n              name=\"securityContext_runAsNonRoot\"\n              checked={runAsNonRoot}\n              onChange={() => {\n                dispatch(setRunAsNonRoot(!runAsNonRoot));\n              }}\n              label={\"Do not run as Root\"}\n            />\n          </div>\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(SecurityContextSelector);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport { DialogContentText, IconButton } from \"@mui/material\";\nimport { AddIcon, Button, ConfirmModalIcon, Loader, RemoveIcon } from \"mds\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  fsGroupChangePolicyType,\n  ICertificateInfo,\n  ITenantSecurityResponse,\n} from \"../types\";\nimport {\n  containerForHeader,\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  spacingUtils,\n  tenantDetailsStyles,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { KeyPair } from \"../ListTenants/utils\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport api from \"../../../../common/api\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport TLSCertificate from \"../../Common/TLSCertificate/TLSCertificate\";\nimport SecurityContextSelector from \"../securityContextSelector\";\nimport {\n  setFSGroup,\n  setFSGroupChangePolicy,\n  setRunAsGroup,\n  setRunAsNonRoot,\n  setRunAsUser,\n} from \"../tenantSecurityContextSlice\";\nimport TLSHelpBox from \"../HelpBox/TLSHelpBox\";\nimport FormHr from \"../../Common/FormHr\";\n\ninterface ITenantSecurity {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    ...spacingUtils,\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...containerForHeader,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantSecurity = ({ classes }: ITenantSecurity) => {\n  const dispatch = useAppDispatch();\n\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant,\n  );\n\n  const [isSending, setIsSending] = useState<boolean>(false);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n  const [enableTLS, setEnableTLS] = useState<boolean>(false);\n  const [enableAutoCert, setEnableAutoCert] = useState<boolean>(false);\n  const [enableCustomCerts, setEnableCustomCerts] = useState<boolean>(false);\n  const [certificatesToBeRemoved, setCertificatesToBeRemoved] = useState<\n    string[]\n  >([]);\n  // MinIO certificates\n  const [minioServerCertificates, setMinioServerCertificates] = useState<\n    KeyPair[]\n  >([\n    {\n      id: Date.now().toString(),\n      key: \"\",\n      cert: \"\",\n      encoded_key: \"\",\n      encoded_cert: \"\",\n    },\n  ]);\n  const [minioClientCertificates, setMinioClientCertificates] = useState<\n    KeyPair[]\n  >([\n    {\n      id: Date.now().toString(),\n      key: \"\",\n      cert: \"\",\n      encoded_key: \"\",\n      encoded_cert: \"\",\n    },\n  ]);\n  const [minioCaCertificates, setMinioCaCertificates] = useState<KeyPair[]>([\n    {\n      id: Date.now().toString(),\n      key: \"\",\n      cert: \"\",\n      encoded_key: \"\",\n      encoded_cert: \"\",\n    },\n  ]);\n  const [minioServerCertificateSecrets, setMinioServerCertificateSecrets] =\n    useState<ICertificateInfo[]>([]);\n  const [minioClientCertificateSecrets, setMinioClientCertificateSecrets] =\n    useState<ICertificateInfo[]>([]);\n  const [minioTLSCaCertificateSecrets, setMinioTLSCaCertificateSecrets] =\n    useState<ICertificateInfo[]>([]);\n\n  const runAsGroup = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.runAsGroup,\n  );\n  const runAsUser = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.runAsUser,\n  );\n  const fsGroup = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.fsGroup,\n  );\n  const runAsNonRoot = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.runAsNonRoot,\n  );\n  const fsGroupChangePolicy = useSelector(\n    (state: AppState) => state.editTenantSecurityContext.fsGroupChangePolicy,\n  );\n\n  const getTenantSecurityInfo = useCallback(() => {\n    api\n      .invoke(\n        \"GET\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/security`,\n      )\n      .then((res: ITenantSecurityResponse) => {\n        setEnableAutoCert(res.autoCert);\n        setEnableTLS(res.autoCert);\n        if (\n          res.customCertificates.minio ||\n          res.customCertificates.client ||\n          res.customCertificates.minioCAs\n        ) {\n          setEnableCustomCerts(true);\n          setEnableTLS(true);\n        }\n        setMinioServerCertificateSecrets(res.customCertificates.minio || []);\n        setMinioClientCertificateSecrets(res.customCertificates.client || []);\n        setMinioTLSCaCertificateSecrets(res.customCertificates.minioCAs || []);\n        dispatch(setRunAsGroup(res.securityContext.runAsGroup));\n        dispatch(setRunAsUser(res.securityContext.runAsUser));\n        dispatch(setFSGroup(res.securityContext.fsGroup!));\n        dispatch(setRunAsNonRoot(res.securityContext.runAsNonRoot));\n        dispatch(\n          setFSGroupChangePolicy(\n            res.securityContext.fsGroupChangePolicy as fsGroupChangePolicyType,\n          ),\n        );\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  }, [tenant, dispatch]);\n\n  useEffect(() => {\n    if (tenant) {\n      getTenantSecurityInfo();\n    }\n  }, [tenant, getTenantSecurityInfo]);\n\n  const updateTenantSecurity = () => {\n    setIsSending(true);\n    let payload = {\n      autoCert: enableAutoCert,\n      customCertificates: {},\n      securityContext: {\n        runAsGroup: runAsGroup,\n        runAsUser: runAsUser,\n        runAsNonRoot: runAsNonRoot,\n        fsGroup: fsGroup,\n        fsGroupChangePolicy: fsGroupChangePolicy,\n      },\n    };\n    if (enableCustomCerts) {\n      payload[\"customCertificates\"] = {\n        secretsToBeDeleted: certificatesToBeRemoved,\n        minioServerCertificates: minioServerCertificates\n          .map((keyPair: KeyPair) => ({\n            crt: keyPair.encoded_cert,\n            key: keyPair.encoded_key,\n          }))\n          .filter((cert: any) => cert.crt && cert.key),\n        minioClientCertificates: minioClientCertificates\n          .map((keyPair: KeyPair) => ({\n            crt: keyPair.encoded_cert,\n            key: keyPair.encoded_key,\n          }))\n          .filter((cert: any) => cert.crt && cert.key),\n        minioCAsCertificates: minioCaCertificates\n          .map((keyPair: KeyPair) => keyPair.encoded_cert)\n          .filter((cert: any) => cert),\n      };\n    } else {\n      payload[\"customCertificates\"] = {\n        secretsToBeDeleted: [\n          ...minioServerCertificateSecrets.map((cert) => cert.name),\n          ...minioClientCertificateSecrets.map((cert) => cert.name),\n          ...minioTLSCaCertificateSecrets.map((cert) => cert.name),\n        ],\n        minioServerCertificates: [],\n        minioClientCertificates: [],\n        minioCAsCertificates: [],\n      };\n    }\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/namespaces/${tenant?.namespace}/tenants/${tenant?.name}/security`,\n        payload,\n      )\n      .then(() => {\n        setIsSending(false);\n        // Close confirmation modal\n        setDialogOpen(false);\n        // Refresh Information and reset forms\n        setMinioServerCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        setMinioClientCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        setMinioCaCertificates([\n          {\n            cert: \"\",\n            encoded_cert: \"\",\n            encoded_key: \"\",\n            id: Date.now().toString(),\n            key: \"\",\n          },\n        ]);\n        getTenantSecurityInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        dispatch(setErrorSnackMessage(err));\n        setIsSending(false);\n      });\n  };\n\n  const removeCertificate = (certificateInfo: ICertificateInfo) => {\n    // TLS certificate secrets can be referenced MinIO, Console or KES, we need to remove the secret from all list and update\n    // the arrays\n    // Add certificate to the global list of secrets to be removed\n    setCertificatesToBeRemoved([\n      ...certificatesToBeRemoved,\n      certificateInfo.name,\n    ]);\n\n    // Update MinIO server TLS certificate secrets\n    const updatedMinioServerCertificateSecrets =\n      minioServerCertificateSecrets.filter(\n        (certificateSecret) => certificateSecret.name !== certificateInfo.name,\n      );\n    // Update MinIO client TLS certificate secrets\n    const updatedMinioClientCertificateSecrets =\n      minioClientCertificateSecrets.filter(\n        (certificateSecret) => certificateSecret.name !== certificateInfo.name,\n      );\n    const updatedMinIOTLSCaCertificateSecrets =\n      minioTLSCaCertificateSecrets.filter(\n        (certificateSecret) => certificateSecret.name !== certificateInfo.name,\n      );\n    setMinioServerCertificateSecrets(updatedMinioServerCertificateSecrets);\n    setMinioClientCertificateSecrets(updatedMinioClientCertificateSecrets);\n    setMinioTLSCaCertificateSecrets(updatedMinIOTLSCaCertificateSecrets);\n  };\n\n  const addFileToKeyPair = (\n    type: string,\n    id: string,\n    key: string,\n    fileName: string,\n    value: string,\n  ) => {\n    let certificates = minioServerCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioServerCertificates;\n        updateCertificates = setMinioServerCertificates;\n        break;\n      }\n      case \"client\": {\n        certificates = minioClientCertificates;\n        updateCertificates = setMinioClientCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n\n    const NCertList = certificates.map((item: KeyPair) => {\n      if (item.id === id) {\n        return {\n          ...item,\n          [key]: fileName,\n          [`encoded_${key}`]: value,\n        };\n      }\n      return item;\n    });\n    updateCertificates(NCertList);\n  };\n\n  const deleteKeyPair = (type: string, id: string) => {\n    let certificates = minioServerCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioServerCertificates;\n        updateCertificates = setMinioServerCertificates;\n        break;\n      }\n      case \"client\": {\n        certificates = minioClientCertificates;\n        updateCertificates = setMinioClientCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n\n    if (certificates.length > 1) {\n      const cleanCertsList = certificates.filter(\n        (item: KeyPair) => item.id !== id,\n      );\n      updateCertificates(cleanCertsList);\n    }\n  };\n\n  const addKeyPair = (type: string) => {\n    let certificates = minioServerCertificates;\n    let updateCertificates: any = () => {};\n\n    switch (type) {\n      case \"minio\": {\n        certificates = minioServerCertificates;\n        updateCertificates = setMinioServerCertificates;\n        break;\n      }\n      case \"client\": {\n        certificates = minioClientCertificates;\n        updateCertificates = setMinioClientCertificates;\n        break;\n      }\n      case \"minioCAs\": {\n        certificates = minioCaCertificates;\n        updateCertificates = setMinioCaCertificates;\n        break;\n      }\n      default:\n    }\n    const updatedCertificates = [\n      ...certificates,\n      {\n        id: Date.now().toString(),\n        key: \"\",\n        cert: \"\",\n        encoded_key: \"\",\n        encoded_cert: \"\",\n      },\n    ];\n    updateCertificates(updatedCertificates);\n  };\n\n  return (\n    <React.Fragment>\n      <ConfirmDialog\n        title={\"Save and Restart\"}\n        confirmText={\"Restart\"}\n        cancelText=\"Cancel\"\n        titleIcon={<ConfirmModalIcon />}\n        isLoading={isSending}\n        onClose={() => setDialogOpen(false)}\n        isOpen={dialogOpen}\n        onConfirm={updateTenantSecurity}\n        confirmationContent={\n          <DialogContentText>\n            Are you sure you want to save the changes and restart the service?\n          </DialogContentText>\n        }\n      />\n      {loadingTenant ? (\n        <div className={classes.loaderAlign}>\n          <Loader />\n        </div>\n      ) : (\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <h1 className={classes.sectionTitle}>Security</h1>\n            <FormHr />\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableTLS\"\n                id=\"enableTLS\"\n                name=\"enableTLS\"\n                checked={enableTLS}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  setEnableTLS(checked);\n                }}\n                label={\"TLS\"}\n                description={\n                  \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n                }\n              />\n            </Grid>\n            {enableTLS && (\n              <Fragment>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    value=\"enableAutoCert\"\n                    id=\"enableAutoCert\"\n                    name=\"enableAutoCert\"\n                    checked={enableAutoCert}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      setEnableAutoCert(checked);\n                    }}\n                    label={\"AutoCert\"}\n                    description={\n                      \"The internode certificates will be generated and managed by MinIO Operator\"\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <FormSwitchWrapper\n                    value=\"enableCustomCerts\"\n                    id=\"enableCustomCerts\"\n                    name=\"enableCustomCerts\"\n                    checked={enableCustomCerts}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      setEnableCustomCerts(checked);\n                    }}\n                    label={\"Custom Certificates\"}\n                    description={\"Certificates used to terminated TLS at MinIO\"}\n                  />\n                </Grid>\n\n                {enableCustomCerts && (\n                  <Fragment>\n                    {!enableAutoCert && (\n                      <Grid item xs={12}>\n                        <TLSHelpBox />\n                      </Grid>\n                    )}\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <h5>MinIO Server Certificates</h5>\n                    </Grid>\n                    <Grid item xs={12}>\n                      {minioServerCertificateSecrets.map(\n                        (certificateInfo: ICertificateInfo) => (\n                          <TLSCertificate\n                            certificateInfo={certificateInfo}\n                            onDelete={() => removeCertificate(certificateInfo)}\n                          />\n                        ),\n                      )}\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      {minioServerCertificates.map((keyPair, index) => (\n                        <Grid\n                          item\n                          xs={12}\n                          key={keyPair.id}\n                          className={classes.minioCertificateRows}\n                        >\n                          <Grid item xs={10} className={classes.fileItem}>\n                            <FileSelector\n                              onChange={(encodedValue, fileName) =>\n                                addFileToKeyPair(\n                                  \"minio\",\n                                  keyPair.id,\n                                  \"cert\",\n                                  fileName,\n                                  encodedValue,\n                                )\n                              }\n                              accept=\".cer,.crt,.cert,.pem\"\n                              id=\"tlsCert\"\n                              name=\"tlsCert\"\n                              label=\"Cert\"\n                              value={keyPair.cert}\n                            />\n                            <FileSelector\n                              onChange={(encodedValue, fileName) =>\n                                addFileToKeyPair(\n                                  \"minio\",\n                                  keyPair.id,\n                                  \"key\",\n                                  fileName,\n                                  encodedValue,\n                                )\n                              }\n                              accept=\".key,.pem\"\n                              id=\"tlsKey\"\n                              name=\"tlsKey\"\n                              label=\"Key\"\n                              value={keyPair.key}\n                            />\n                          </Grid>\n                          <Grid item xs={2} className={classes.rowActions}>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={() => addKeyPair(\"minio\")}\n                                disabled={\n                                  index !== minioServerCertificates.length - 1\n                                }\n                              >\n                                <AddIcon />\n                              </IconButton>\n                            </div>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={() =>\n                                  deleteKeyPair(\"minio\", keyPair.id)\n                                }\n                                disabled={minioServerCertificates.length <= 1}\n                              >\n                                <RemoveIcon />\n                              </IconButton>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      ))}\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <h5>MinIO Client Certificates</h5>\n                    </Grid>\n                    <Grid item xs={12}>\n                      {minioClientCertificateSecrets.map(\n                        (certificateInfo: ICertificateInfo) => (\n                          <TLSCertificate\n                            certificateInfo={certificateInfo}\n                            onDelete={() => removeCertificate(certificateInfo)}\n                          />\n                        ),\n                      )}\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      {minioClientCertificates.map((keyPair, index) => (\n                        <Grid\n                          item\n                          xs={12}\n                          key={keyPair.id}\n                          className={classes.minioCertificateRows}\n                        >\n                          <Grid item xs={10} className={classes.fileItem}>\n                            <FileSelector\n                              onChange={(encodedValue, fileName) =>\n                                addFileToKeyPair(\n                                  \"client\",\n                                  keyPair.id,\n                                  \"cert\",\n                                  fileName,\n                                  encodedValue,\n                                )\n                              }\n                              accept=\".cer,.crt,.cert,.pem\"\n                              id=\"tlsCert\"\n                              name=\"tlsCert\"\n                              label=\"Cert\"\n                              value={keyPair.cert}\n                            />\n                            <FileSelector\n                              onChange={(encodedValue, fileName) =>\n                                addFileToKeyPair(\n                                  \"client\",\n                                  keyPair.id,\n                                  \"key\",\n                                  fileName,\n                                  encodedValue,\n                                )\n                              }\n                              accept=\".key,.pem\"\n                              id=\"tlsKey\"\n                              name=\"tlsKey\"\n                              label=\"Key\"\n                              value={keyPair.key}\n                            />\n                          </Grid>\n                          <Grid item xs={2} className={classes.rowActions}>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={() => addKeyPair(\"client\")}\n                                disabled={\n                                  index !== minioClientCertificates.length - 1\n                                }\n                              >\n                                <AddIcon />\n                              </IconButton>\n                            </div>\n                            <div className={classes.overlayAction}>\n                              <IconButton\n                                size={\"small\"}\n                                onClick={() =>\n                                  deleteKeyPair(\"client\", keyPair.id)\n                                }\n                                disabled={minioClientCertificates.length <= 1}\n                              >\n                                <RemoveIcon />\n                              </IconButton>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      ))}\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <h5>MinIO CA Certificates</h5>\n                    </Grid>\n                    <Grid item xs={12}>\n                      {minioTLSCaCertificateSecrets.map(\n                        (certificateInfo: ICertificateInfo) => (\n                          <TLSCertificate\n                            certificateInfo={certificateInfo}\n                            onDelete={() => removeCertificate(certificateInfo)}\n                          />\n                        ),\n                      )}\n                    </Grid>\n                    <Grid item xs={12}>\n                      {minioCaCertificates.map((keyPair: KeyPair, index) => (\n                        <Grid\n                          item\n                          xs={12}\n                          key={keyPair.id}\n                          className={classes.minioCACertsRow}\n                        >\n                          <Grid item xs={10}>\n                            <FileSelector\n                              onChange={(encodedValue, fileName) =>\n                                addFileToKeyPair(\n                                  \"minioCAs\",\n                                  keyPair.id,\n                                  \"cert\",\n                                  fileName,\n                                  encodedValue,\n                                )\n                              }\n                              accept=\".cer,.crt,.cert,.pem\"\n                              id=\"tlsCert\"\n                              name=\"tlsCert\"\n                              label=\"Cert\"\n                              value={keyPair.cert}\n                            />\n                          </Grid>\n                          <Grid item xs={2}>\n                            <div className={classes.rowActions}>\n                              <div className={classes.overlayAction}>\n                                <IconButton\n                                  size={\"small\"}\n                                  onClick={() => addKeyPair(\"minioCAs\")}\n                                  disabled={\n                                    index !== minioCaCertificates.length - 1\n                                  }\n                                >\n                                  <AddIcon />\n                                </IconButton>\n                              </div>\n                              <div className={classes.overlayAction}>\n                                <IconButton\n                                  size={\"small\"}\n                                  onClick={() =>\n                                    deleteKeyPair(\"minioCAs\", keyPair.id)\n                                  }\n                                  disabled={minioCaCertificates.length <= 1}\n                                >\n                                  <RemoveIcon />\n                                </IconButton>\n                              </div>\n                            </div>\n                          </Grid>\n                        </Grid>\n                      ))}\n                    </Grid>\n                  </Fragment>\n                )}\n              </Fragment>\n            )}\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <h1 className={classes.sectionTitle}>Security Context</h1>\n              <FormHr />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <SecurityContextSelector\n                classes={classes}\n                runAsGroup={runAsGroup}\n                runAsUser={runAsUser}\n                fsGroup={fsGroup}\n                runAsNonRoot={runAsNonRoot}\n                fsGroupChangePolicy={fsGroupChangePolicy}\n                setFSGroup={(value: string) => dispatch(setFSGroup(value))}\n                setRunAsUser={(value: string) => dispatch(setRunAsUser(value))}\n                setRunAsGroup={(value: string) =>\n                  dispatch(setRunAsGroup(value))\n                }\n                setRunAsNonRoot={(value: boolean) =>\n                  dispatch(setRunAsNonRoot(value))\n                }\n                setFSGroupChangePolicy={(value: fsGroupChangePolicyType) =>\n                  dispatch(setFSGroupChangePolicy(value))\n                }\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <Button\n                id={\"save-security\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={dialogOpen || isSending}\n                onClick={() => setDialogOpen(true)}\n                label={\"Save\"}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.loadingTenant,\n  selectedTenant: state.tenants.currentTenant,\n  tenant: state.tenants.tenantInfo,\n});\n\nconst connector = connect(mapState, null);\n\nexport default withStyles(styles)(connector(TenantSecurity));\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","_ref","label","classes","onChange","id","name","disabled","tooltip","required","error","accept","value","showFileSelector","setShowSelector","useState","_jsx","React","children","_jsxs","Grid","item","xs","className","concat","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","HelpIcon","type","e","fileName","get","fileProcess","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","data","IconButton","color","component","onClick","disableRipple","disableFocusRipple","size","CancelIcon","ErrorBlock","errorMessage","fileReselect","AttachFileIcon","styled","_templateObject","_taggedTemplateLiteral","certificateIcon","float","paddingTop","paddingRight","certificateInfo","certificateWrapper","height","userSelect","borderRadius","padding","certificateExpiry","display","alignItems","flexWrap","marginBottom","certificateDomains","certificatesList","textTransform","overflowY","maxHeight","certificatesListItem","borderBottom","minWidth","fontSize","marginRight","opacity","certificateExpiring","certificateExpired","onDelete","certificates","domains","expiry","DateTime","fromISO","now","utc","daysToExpiry","daysToExpiryHuman","certificateExpiration","durationToExpiry","diff","as","minus","Duration","fromObject","days","shiftTo","toHuman","listStyle","maximumFractionDigits","minutes","Chip","variant","Container","CertificateIcon","Typography","gutterBottom","Box","EventBusyIcon","toFormat","AccessTimeIcon","Divider","List","map","dom","index","ListItem","ListItemAvatar","LanguageIcon","ListItemText","primary","FeatureItem","icon","description","sx","width","style","fontStyle","TLSHelpBox","params","useParams","tenantNameParam","tenantName","tenantNamespaceParam","tenantNamespace","namespace","useSelector","state","createTenant","fields","nameTenant","flex","href","rel","configSectionItem","runAsGroup","runAsUser","fsGroup","fsGroupChangePolicy","runAsNonRoot","setRunAsUser","setRunAsGroup","setFSGroup","setRunAsNonRoot","setFSGroupChangePolicy","dispatch","useDispatch","Fragment","fieldGroup","fieldSpaceTop","descriptionText","multiContainerStackNarrow","InputBoxWrapper","min","SelectWrapper","options","multiContainer","FormSwitchWrapper","checked","connector","connect","loadingTenant","tenants","selectedTenant","currentTenant","tenant","tenantInfo","tenantDetailsStyles","spacingUtils","minioCertificateRows","justifyContent","minioCACertsRow","rowActions","overlayAction","marginLeft","background","loaderAlign","textAlign","fileItem","containerForHeader","createTenantCommon","formFieldStyles","modalBasic","wizardCommon","useAppDispatch","isSending","setIsSending","dialogOpen","setDialogOpen","enableTLS","setEnableTLS","enableAutoCert","setEnableAutoCert","enableCustomCerts","setEnableCustomCerts","certificatesToBeRemoved","setCertificatesToBeRemoved","minioServerCertificates","setMinioServerCertificates","Date","key","cert","encoded_key","encoded_cert","minioClientCertificates","setMinioClientCertificates","minioCaCertificates","setMinioCaCertificates","minioServerCertificateSecrets","setMinioServerCertificateSecrets","minioClientCertificateSecrets","setMinioClientCertificateSecrets","minioTLSCaCertificateSecrets","setMinioTLSCaCertificateSecrets","editTenantSecurityContext","getTenantSecurityInfo","useCallback","api","invoke","then","res","autoCert","customCertificates","minio","client","minioCAs","securityContext","catch","err","setErrorSnackMessage","useEffect","removeCertificate","updatedMinioServerCertificateSecrets","filter","certificateSecret","updatedMinioClientCertificateSecrets","updatedMinIOTLSCaCertificateSecrets","addFileToKeyPair","updateCertificates","deleteKeyPair","addKeyPair","ConfirmDialog","confirmText","cancelText","titleIcon","ConfirmModalIcon","isLoading","onClose","isOpen","onConfirm","updateTenantSecurity","payload","secretsToBeDeleted","keyPair","crt","minioCAsCertificates","confirmationContent","DialogContentText","Loader","container","spacing","sectionTitle","FormHr","formFieldRow","TLSCertificate","FileSelector","encodedValue","AddIcon","RemoveIcon","SecurityContextSelector","Button","_theme$palette","errorBlock","palette","main","withBreak"],"sourceRoot":""}