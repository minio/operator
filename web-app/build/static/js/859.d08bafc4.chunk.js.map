{"version":3,"file":"static/js/859.d08bafc4.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/TenantYAML.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Button,\n  CodeEditor,\n  Grid,\n  InformativeMessage,\n  ProgressBar,\n  SectionTitle,\n} from \"mds\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { getTenantAsync } from \"../thunks/tenantDetailsAsync\";\n\ninterface ITenantYAML {\n  yaml: string;\n}\n\nconst TenantYAML = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const tenant = useSelector((state: AppState) => state.tenants.currentTenant);\n  const namespace = useSelector(\n    (state: AppState) => state.tenants.currentNamespace,\n  );\n\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [tenantYaml, setTenantYaml] = useState<string>(\"\");\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  const updateTenant = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    setErrorMessage(\"\");\n    api\n      .invoke(\"PUT\", `/api/v1/namespaces/${namespace}/tenants/${tenant}/yaml`, {\n        yaml: tenantYaml,\n      })\n      .then(() => {\n        setAddLoading(false);\n        dispatch(getTenantAsync());\n        setErrorMessage(\"\");\n        navigate(`/namespaces/${namespace}/tenants/${tenant}/summary`);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        const errMessage = err?.message || \"\" || err.errorMessage;\n        setErrorMessage(errMessage);\n      });\n  };\n\n  useEffect(() => {\n    if (namespace && tenant) {\n      api\n        .invoke(\"GET\", `/api/v1/namespaces/${namespace}/tenants/${tenant}/yaml`)\n        .then((res: ITenantYAML) => {\n          setLoading(false);\n          setTenantYaml(res.yaml);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n        });\n    }\n  }, [tenant, namespace, dispatch]);\n\n  useEffect(() => {}, []);\n\n  const validSave = tenantYaml.trim() !== \"\";\n\n  return (\n    <Fragment>\n      {addLoading ||\n        (loading && (\n          <Grid item xs={12}>\n            <ProgressBar />\n          </Grid>\n        ))}\n\n      {!loading && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            updateTenant(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <SectionTitle>Tenant Specification</SectionTitle>\n            </Grid>\n            {errorMessage ? (\n              <Grid item xs={12}>\n                <InformativeMessage\n                  title={\"Error\"}\n                  message={errorMessage}\n                  variant={\"error\"}\n                />\n              </Grid>\n            ) : null}\n            <Grid item xs={12}>\n              <CodeEditor\n                value={tenantYaml}\n                mode={\"yaml\"}\n                onChange={(value) => {\n                  setTenantYaml(value);\n                }}\n                editorHeight={\"550px\"}\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                paddingTop: 16,\n              }}\n            >\n              <Button\n                id={\"cancel-tenant-yaml\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  navigate(\n                    `/namespaces/${namespace}/tenants/${tenant}/summary`,\n                  );\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-tenant-yaml\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={addLoading || !validSave}\n                style={{ marginLeft: 8 }}\n                label={\"Save\"}\n              />\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Fragment>\n  );\n};\n\nexport default TenantYAML;\n"],"names":["TenantYAML","dispatch","useAppDispatch","navigate","useNavigate","tenant","useSelector","state","tenants","currentTenant","namespace","currentNamespace","addLoading","setAddLoading","useState","loading","setLoading","tenantYaml","setTenantYaml","errorMessage","setErrorMessage","useEffect","api","invoke","concat","then","res","yaml","catch","err","setModalErrorSnackMessage","validSave","trim","_jsxs","Fragment","children","_jsx","Grid","item","xs","ProgressBar","noValidate","autoComplete","onSubmit","e","preventDefault","getTenantAsync","errMessage","message","container","SectionTitle","InformativeMessage","title","variant","CodeEditor","value","mode","onChange","editorHeight","style","display","justifyContent","paddingTop","Button","id","type","disabled","onClick","label","marginLeft"],"sourceRoot":""}