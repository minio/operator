{"version":3,"file":"static/js/507.4f27ae3b.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Tenants/TenantDetails/TenantYAML.tsx"],"sourcesContent":["// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, CopyIcon, HelpIcon } from \"mds\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\nimport TooltipWrapper from \"../../TooltipWrapper/TooltipWrapper\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n  });\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        style={{\n          maxHeight: editorHeight,\n          overflow: \"auto\",\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <CodeEditor\n          value={value}\n          language={mode}\n          onChange={(evn) => {\n            onBeforeChange(null, null, evn.target.value);\n          }}\n          id={\"code_wrapper\"}\n          padding={15}\n          style={{\n            fontSize: 12,\n            backgroundColor: \"#fefefe\",\n            fontFamily:\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\n            minHeight: editorHeight || \"initial\",\n            color: \"#000000\",\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          background: \"#f7f7f7\",\n          border: \"1px solid #eaeaea\",\n          borderTop: 0,\n        }}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"2px\",\n            paddingRight: \"5px\",\n            justifyContent: \"flex-end\",\n            \"& button\": {\n              height: \"26px\",\n              width: \"26px\",\n              padding: \"2px\",\n              \" .min-icon\": {\n                marginLeft: \"0\",\n              },\n            },\n          }}\n        >\n          <TooltipWrapper tooltip={\"Copy to Clipboard\"}>\n            <CopyToClipboard text={value}>\n              <Button\n                type={\"button\"}\n                id={\"copy-code-mirror\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"regular\"}\n              />\n            </CopyToClipboard>\n          </TooltipWrapper>\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Operator\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Button } from \"mds\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../../common/api\";\nimport {\n  fieldBasic,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport CodeMirrorWrapper from \"../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { getTenantAsync } from \"../thunks/tenantDetailsAsync\";\nimport SectionTitle from \"../../Common/SectionTitle\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      fontWeight: \"bold\",\n    },\n    ...modalStyleUtils,\n    ...fieldBasic,\n  });\n\ninterface ITenantYAML {\n  yaml: string;\n}\n\ninterface ITenantYAMLProps {\n  classes: any;\n}\n\nconst TenantYAML = ({ classes }: ITenantYAMLProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const tenant = useSelector((state: AppState) => state.tenants.currentTenant);\n  const namespace = useSelector(\n    (state: AppState) => state.tenants.currentNamespace\n  );\n\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [tenantYaml, setTenantYaml] = useState<string>(\"\");\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  const updateTenant = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    setErrorMessage(\"\");\n    api\n      .invoke(\"PUT\", `/api/v1/namespaces/${namespace}/tenants/${tenant}/yaml`, {\n        yaml: tenantYaml,\n      })\n      .then((res) => {\n        setAddLoading(false);\n        dispatch(getTenantAsync());\n        setErrorMessage(\"\");\n        navigate(`/namespaces/${namespace}/tenants/${tenant}/summary`);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setErrorMessage(err.errorMessage);\n      });\n  };\n\n  useEffect(() => {\n    api\n      .invoke(\"GET\", `/api/v1/namespaces/${namespace}/tenants/${tenant}/yaml`)\n      .then((res: ITenantYAML) => {\n        setLoading(false);\n        setTenantYaml(res.yaml);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }, [tenant, namespace, dispatch]);\n\n  useEffect(() => {}, []);\n\n  const validSave = tenantYaml.trim() !== \"\";\n\n  return (\n    <Fragment>\n      {addLoading ||\n        (loading && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        ))}\n      {errorMessage !== \"\" && (\n        <div className={classes.errorState}>{errorMessage}</div>\n      )}\n\n      {!loading && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            updateTenant(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <SectionTitle>Tenant Specification</SectionTitle>\n            </Grid>\n            <Grid item xs={12}>\n              <CodeMirrorWrapper\n                value={tenantYaml}\n                mode={\"yaml\"}\n                onBeforeChange={(editor, data, value) => {\n                  setTenantYaml(value);\n                }}\n                editorHeight={\"550px\"}\n              />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                paddingTop: 16,\n              }}\n            >\n              <Button\n                id={\"cancel-tenant-yaml\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  navigate(\n                    `/namespaces/${namespace}/tenants/${tenant}/summary`\n                  );\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-tenant-yaml\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={addLoading || !validSave}\n                style={{ marginLeft: 8 }}\n                label={\"Save\"}\n              />\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TenantYAML);\n"],"names":["withStyles","theme","createStyles","fieldBasic","value","label","tooltip","mode","classes","onBeforeChange","readOnly","editorHeight","item","xs","sx","marginBottom","className","inputLabel","tooltipContainer","title","placement","style","maxHeight","overflow","border","language","onChange","evn","target","id","padding","fontSize","backgroundColor","fontFamily","minHeight","color","background","borderTop","display","alignItems","paddingRight","justifyContent","height","width","marginLeft","text","type","icon","variant","errorState","fontWeight","modalStyleUtils","dispatch","useAppDispatch","navigate","useNavigate","tenant","useSelector","state","tenants","currentTenant","namespace","currentNamespace","useState","addLoading","setAddLoading","loading","setLoading","tenantYaml","setTenantYaml","errorMessage","setErrorMessage","useEffect","api","then","res","yaml","catch","err","setModalErrorSnackMessage","validSave","trim","Fragment","noValidate","autoComplete","onSubmit","e","preventDefault","getTenantAsync","container","editor","data","paddingTop","disabled","onClick"],"sourceRoot":""}