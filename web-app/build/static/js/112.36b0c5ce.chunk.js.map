{"version":3,"file":"static/js/112.36b0c5ce.chunk.js","mappings":"4IA+BA,IAvBe,SACbA,EACAC,GAEA,IAAAC,GAAkCC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAgB9B,MAAO,CAACE,EAdQ,SAACE,EAAgBC,EAAaC,EAAYC,GACxDJ,GAAa,GACbK,EAAAA,EACGC,OAAOL,EAAQC,EAAKC,EAAMC,GAC1BG,MAAK,SAACC,GACLR,GAAa,GACbP,EAAUe,EACZ,IACCC,OAAM,SAACC,GACNV,GAAa,GACbN,EAAQgB,EACV,GACJ,EAGF,C,2JCqEA,UA/DkB,SAAHC,GAII,IAHjBC,EAAUD,EAAVC,WACAC,EAAWF,EAAXE,YACAC,EAA0BH,EAA1BG,2BAEMC,GAAWC,EAAAA,EAAAA,MACjBrB,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCsB,EAASpB,EAAA,GAAEqB,EAAYrB,EAAA,GAO9BsB,GAAyCC,EAAAA,EAAAA,IALpB,WAAH,OAASN,GAA2B,EAAM,IACzC,SAACJ,GAAyB,OAC3CK,GAASM,EAAAA,EAAAA,IAAqBX,GAAM,IAGmCY,GAAAxB,EAAAA,EAAAA,GAAAqB,EAAA,GAAlEI,EAAaD,EAAA,GAAEE,EAAeF,EAAA,GAkBrC,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAK,aACLC,YAAa,SACbC,OAAQjB,EACRkB,WAAWL,EAAAA,EAAAA,KAACM,EAAAA,IAAiB,IAC7BhC,UAAWwB,EACXS,UAvBoB,WAClBf,IAAcJ,EAAYoB,KAS9BT,EACE,SAAS,sBAADU,OACcrB,EAAYsB,UAAS,aAAAD,OAAYrB,EAAYuB,OAAM,SAAAF,OAAQrB,EAAYoB,OAV7FlB,GACEM,EAAAA,EAAAA,IAAqB,CACnBgB,aAAc,wBACdC,cAAe,KASvB,EAUIC,QA5BY,WAAH,OAASzB,GAA2B,EAAO,EA6BpD0B,mBAAoB,CAClBC,SAAUxB,IAAcJ,EAAYoB,MAAQV,GAE9CmB,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAiB,CAAAC,SAAA,CAAC,4BACOpB,EAAAA,EAAAA,KAAA,KAAAoB,SAAIhC,EAAYoB,OAAS,gBACjDR,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACC,MAAI,EAACC,GAAI,GAAGH,UAChBpB,EAAAA,EAAAA,KAACwB,EAAAA,EAAe,CACdC,GAAG,aACHjB,KAAK,aACLkB,SAAU,SAACC,GACTlC,EAAakC,EAAMC,OAAOC,MAC5B,EACAC,MAAM,GACND,MAAOrC,UAOrB,C","sources":["screens/Console/Common/Hooks/useApi.tsx","screens/Console/Tenants/TenantDetails/DeletePVC.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any, headers?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data, headers)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","// This file is part of MinIO Operator\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { IStoragePVCs } from \"../../Storage/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeletePVC {\n  deleteOpen: boolean;\n  selectedPVC: IStoragePVCs;\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\n}\n\nconst DeletePVC = ({\n  deleteOpen,\n  selectedPVC,\n  closeDeleteModalAndRefresh,\n}: IDeletePVC) => {\n  const dispatch = useAppDispatch();\n  const [retypePVC, setRetypePVC] = useState(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const onConfirmDelete = () => {\n    if (retypePVC !== selectedPVC.name) {\n      dispatch(\n        setErrorSnackMessage({\n          errorMessage: \"PVC name is incorrect\",\n          detailedError: \"\",\n        })\n      );\n      return;\n    }\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/namespaces/${selectedPVC.namespace}/tenants/${selectedPVC.tenant}/pvc/${selectedPVC.name}`\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete PVC`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypePVC !== selectedPVC.name || deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          To continue please type <b>{selectedPVC.name}</b> in the box.\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"retype-PVC\"\n              name=\"retype-PVC\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypePVC(event.target.value);\n              }}\n              label=\"\"\n              value={retypePVC}\n            />\n          </Grid>\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeletePVC;\n"],"names":["onSuccess","onError","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","method","url","data","headers","api","invoke","then","res","catch","err","_ref","deleteOpen","selectedPVC","closeDeleteModalAndRefresh","dispatch","useAppDispatch","retypePVC","setRetypePVC","_useApi","useApi","setErrorSnackMessage","_useApi2","deleteLoading","invokeDeleteApi","_jsx","ConfirmDialog","title","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","onConfirm","name","concat","namespace","tenant","errorMessage","detailedError","onClose","confirmButtonProps","disabled","confirmationContent","_jsxs","DialogContentText","children","Grid","item","xs","InputBoxWrapper","id","onChange","event","target","value","label"],"sourceRoot":""}