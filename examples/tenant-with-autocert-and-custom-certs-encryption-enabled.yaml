---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVqekNDQXZlZ0F3SUJBZ0lSQU1MRXNCRE1aaC9SdnE2RDlwVFR4ZlV3RFFZSktvWklodmNOQVFFTEJRQXcKZ2JVeEhqQWNCZ05WQkFvVEZXMXJZMlZ5ZENCa1pYWmxiRzl3YldWdWRDQkRRVEZGTUVNR0ExVUVDd3c4WVd4bApkbk5yUUV4bGJtbHVjeTFOWVdOQ2IyOXJMVkJ5Ynk1c2IyTmhiQ0FvVEdWdWFXNGdRV3hsZG5OcmFTQklkV1Z5CmRHRWdRWEpwWVhNcE1Vd3dTZ1lEVlFRRERFTnRhMk5sY25RZ1lXeGxkbk5yUUV4bGJtbHVjeTFOWVdOQ2IyOXIKTFZCeWJ5NXNiMk5oYkNBb1RHVnVhVzRnUVd4bGRuTnJhU0JJZFdWeWRHRWdRWEpwWVhNcE1CNFhEVEU1TURZdwpNVEF3TURBd01Gb1hEVE13TVRBd09UQTJORFUxTVZvd1lqRW5NQ1VHQTFVRUNoTWViV3RqWlhKMElHUmxkbVZzCmIzQnRaVzUwSUdObGNuUnBabWxqWVhSbE1UY3dOUVlEVlFRTERDNWhiR1YyYzJ0QWRHbG1ZUzVzYjJOaGJDQW8KVEdWdWFXNGdRV3hsZG5OcmFTQklkV1Z5ZEdFZ1FYSnBZWE1wTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQwpBUThBTUlJQkNnS0NBUUVBenc1b01YQlNYUXh3Wlc0VzlZbG0zT2xMOUFNd09Dbm5yMlhpeUxpS29yY0FuUEhQCmE0OFZzNVk5dWhMTnJRdzBBdVB6Ny9nQVM1VGxxQmlseHFXRFJocHBzaWxhSVFlUyt2b2lOSU43VE5EWVVLbkcKT01Sc1U5OHphTHM2OGtwdGt1WFk4S2tIK2ZkQytUOG96dkNvS3FpUm4wUGJ2SVVpSzBhVytBUDBDK3NIeU1Ecwp1R0xaY3d4QTdodG5RNDZ1blEzMTdXN09Xck0vRW9Td0VJYTJxYXJObVg5VnhkSEp6MEJ3Z2VDMng5QkFOUEJGCkgwS2ZkU01DVm1lS1ZlSWpVSmlLNFNtWUJIOHZ0amlRYU9hbEtwUllIV1R1YnBXWjFBejV1UzVWdFJWV09hZlQKYWlJL3JuVldIcjJHaWlZODhSZWJhVzlleEppT2RRLzNyaWtjT3dJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RQpCQU1DQmFBd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3RXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FCkdEQVdnQlRqSHprSGJGNTRMemc4YWpkWmhTWFVONmg5QXpBVUJnTlZIUkVFRFRBTGdnbHNiMk5oYkdodmMzUXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0dCQUhKVWIyM2lITTljOTdhQW8rdVk1aWgxM3JqMFh1aEk4WW1lZUtGRApNdnN4VllhZjUzRGxxUHRlRzBEMTg2OUpub0I3bUJjdXdTOGxqbzdQYWVLRURNYUtHVkNVdkNqdWF5Z1M1dStXCkJUaTJ1ekU2NGpFRFBESE04MGl0Ujd4RDFraDNqcFlqQUlSaWtrb2I2OUoxU0ltUlpEZ0M4UnJyMG1NYTZ3cVMKUnVtdGszQmZWMzFMZDJITmE1NjR5YWFyMnpsRll5dW94S29GV09La1FsWm5oQU10Qkx1L1V2L1FnWDJmcmF6dQpBMndITHhMU3FwSzBtMktlZk1yTFlYcnNIOE1OWHh6NU1sUjlYdVZBanROVytyQXBHdTE2ZUdJMDQ3UkplTnJ5Ci9oUVlDTHBORnorSkNrdGNrMFp2TnM3MW5lVVFyVTRZdzB0cVUya0ZLanVwR2UvUzl4UVUyUENNbVJka0c4QXAKSHNNdFhON1hqQnh3L0QxRFlDeXo3OGNBZjlrTVVhdlNkTVp5RmE1TjFwSlE3L1krK1FFQlU1WUc0RGZNbFhzOApieWtPVW5JRldSS0ZKNkZXRi9PTjcyVXpEQUJFUmhOWkFzZFJjSFhhUmVFTkhjZXV4aDYxNVFUNEJNK0hBcVIxClpRK2FkTjM1YWRvb00yZmo2aEl3dVNwKzVnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRRFBEbWd4Y0ZKZERIQmwKYmhiMWlXYmM2VXYwQXpBNEtlZXZaZUxJdUlxaXR3Q2M4YzlyanhXemxqMjZFczJ0RERRQzQvUHYrQUJMbE9XbwpHS1hHcFlOR0dtbXlLVm9oQjVMNitpSTBnM3RNME5oUXFjWTR4R3hUM3pOb3V6cnlTbTJTNWRqd3FRZjU5MEw1ClB5ak84S2dxcUpHZlE5dThoU0lyUnBiNEEvUUw2d2ZJd095NFl0bHpERUR1RzJkRGpxNmREZlh0YnM1YXN6OFMKaExBUWhyYXBxczJaZjFYRjBjblBRSENCNExiSDBFQTA4RVVmUXA5MUl3SldaNHBWNGlOUW1JcmhLWmdFZnkrMgpPSkJvNXFVcWxGZ2RaTzV1bFpuVURQbTVMbFcxRlZZNXA5TnFJait1ZFZZZXZZYUtKanp4RjV0cGIxN0VtSTUxCkQvZXVLUnc3QWdNQkFBRUNnZ0VBTzc4OWc1NlV0YkxrTC9DUGdYU1BrUWxrMkZtZkxXV3lMQ09yU0I0d0t2bkIKbklnT1FVdzloOSsvbWhUWThxbEZ6TnU0UlRONzZsTmgzWnFYSTNZWkpqNXk1MjBWUzlpaXFmZEpyWHVQTmNCQgoyeXpTUFFrNDlRN0FCK1dYQWRsR094QkdCRlBTTUdnUUZGb01UWUtXRkJFbVRCM0pwMkdIVlpOOTlyMDFTOGFXClJUL3ZPMTlSalJiUWFra2lsQi90M0RNNTlZUWR4bEx5NW1vR3RCaDdmbzlKT21aU0tUR1ZyRzZIQzBFUGNCcmQKbE0vYzlMbEV2RVRRcFVrL3RWTkN2akY3YVR4cjMrV2gwU2tDMDhnbGFhZlJQL08wYU5hWk0zU2xObmhFUXJ4NgplSDN2Y3A2Qis5V0lzNDFaRzZaaGpJTDZqQjFoOU1BRXBlUDRrTEpCd1FLQmdRRGc1dVlQNjNkaHg5bkFPQzFPCnJ3TDRVKyt6TTFsY0RrNEltMkViQ1FOM1AxWTJSVytxRHZWcmtYaW5zKzZUcUJiZzJaaTRxWUVBY2VzWUw0NjUKMVpGWllVeXFuWTUzTmc3ZDdWRHg2UjNUOGZaajF6bmdYWFVhS2t2WU9McUI0T051WkJGV1AvRXM1REhBa2R3Rgo0akVMd1hKNm9iRTVONW11T0kwei9WUktXd0tCZ1FEcnI4NDJXNVJzeXYyd0QrUGdtZEYrK0tjTkErTVNMZGlMCnQ1T1ptbTJpY0Vvcm9hbDFSbEVkSkNibk1yM2NjY3VmN3VCejAvd3BzVjJkMnZXYm9aQW5yOEFPaGk4RStFWnAKbVc2NE1nT2lJTmUremtIWXRibHd0REdQbU84L3NVSmRLU1dYSW82d0VxNHg4WFgzN25QTlNLZUpieXVsdEdPUApOOVVGN3FoYm9RS0JnQmJHcTNQZlI4YktRMzRZOGxXdW1hRm1kcmJ5TTFHRVRWakh5NHkrVy9CK3BJOTRkcmVGCkxrdUhmdTJVNWt0ajBYVlI5QXAzZUE0QWUydUduWENxZFQ3VkFMdWlteVB0Z0pIdkQ2eUFERHBEbmMwOHBhclkKTEJ6TFBjVVc4YVJuandERjk0K0JpRDRnbWYxRGlFRzhSM1ZHVVA2a1UxdFZDeVkrcWVZaStKOVRBb0dBUjUyUwpJWDVPYVloODhhVENiNXNOeDNFekFZZHUxalZNR1poY3AwMy9obDVzaXptQ1RucGhaMk4yMXNYYVgwUE14ZnBHCkJhd2ljV0ROdTR1dkdlMUw2bU5ERHFiRFh0VTZRQmc1Um9zY0E0WExTTlZQdU5QdlYwbkp6WUtCSUc5eVpQQjkKMWFEUWpyditabnFpaUFYUzlrdmZiS2wxTDlMU2RkQlhVSWdtYkVFQ2dZQmk5WnIvejJxOG1OQkpmZVJBaVdkRAo4TGtXN1VGd2o0K05MeHNSZEtiSHl6djF6OVdqQXlUVTVmQWdVUCtuVUViS3RNT1c3cVNBZDlFOHkyRkttS0hxCkJCRFgxUlMxSHkvRmxTeGk1QkwvVEFkeEp1STRNZXMwOWM1QmhYMHhxREpObnNQTVU1YXRWWmt5alE3Z0c1NjUKcTk0MDZjWTJLNUhUZ1dIVzBlcjFqdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: minio-autocert-custom-cert-encryption-localhost-cert
  namespace: default
type: kubernetes.io/tls
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-autocert-custom-cert-encryption-kes-config
type: Opaque
stringData:
  server-config.yaml: |-
    address: 0.0.0.0:7373
    root: _ # Effectively disabled since no root identity necessary.
    tls:
      key: /tmp/kes/server.key   # Path to the TLS private key
      cert: /tmp/kes/server.crt # Path to the TLS certificate
      proxy:
        identities: []
        header:
          cert: X-Tls-Client-Cert
    policy:
      my-policy:
        paths:
        - /v1/key/create/*
        - /v1/key/generate/*
        - /v1/key/decrypt/*
        identities:
        - ${MINIO_KES_IDENTITY}
    cache:
      expiry:
        any: 5m0s
        unused: 20s
    log:
      error: on
      audit: off
    keys:
       vault:
         endpoint: "<PUT YOUR VAULT ENDPOINT HERE>"  # The Vault endpoint - e.g. https://127.0.0.1:8200
         namespace: "" # An optional Vault namespace. See: https://www.vaultproject.io/docs/enterprise/namespaces/index.html
         prefix: "my-app"    # An optional K/V prefix. The server will store keys under this prefix.
         approle:    # AppRole credentials. See: https://www.vaultproject.io/docs/auth/approle.html
           id: "<PUT YOUR APPROLE ID HERE>"      # Your AppRole Role ID
           secret: "<PUT YOUR APPROLE SECRET ID HERE>"  # Your AppRole Secret ID
           retry: 15s  # Duration until the server tries to re-authenticate after connection loss.
         status:     # Vault status configuration. The server will periodically reach out to Vault to check its status.
           ping: 10s   # Duration until the server checks Vault's status again.
---
## Secret to be used as MinIO Root Credentials
apiVersion: v1
kind: Secret
metadata:
  name: minio-autocert-custom-cert-encryption-minio-creds-secret
type: Opaque
data:
  ## Access Key for MinIO Tenant, base64 encoded (echo -n 'minio' | base64)
  accesskey: bWluaW8=
  ## Secret Key for MinIO Tenant, base64 encoded (echo -n 'minio123' | base64)
  secretkey: bWluaW8xMjM=
---
## MinIO Tenant Definition
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: minio-autocert-custom-cert-encryption-minio
  ## Optionally pass labels to be applied to the statefulset pods
  labels:
    app: minio-autocert-custom-cert-encryption-minio
  ## Annotations for MinIO Tenant Pods
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"

## If a scheduler is specified here, Tenant pods will be dispatched by specified scheduler.
## If not specified, the Tenant pods will be dispatched by default scheduler.
# scheduler:
#  name: my-custom-scheduler

spec:
  ## Registry location and Tag to download MinIO Server image
  image: minio/minio:RELEASE.2021-08-25T00-41-18Z
  imagePullPolicy: IfNotPresent

  ## Secret with credentials to be used by MinIO Tenant.
  ## Refers to the secret object created above.
  credsSecret:
    name: minio-autocert-custom-cert-encryption-minio-creds-secret

  ## Specification for MinIO Pool(s) in this Tenant.
  pools:
    ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
    ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
    ## Note that the operator does not support upgrading from standalone to distributed mode.
    - servers: 4

      ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
      volumesPerServer: 4

      ## This VolumeClaimTemplate is used across all the volumes provisioned for MinIO Tenant in this
      ## Pool.
      volumeClaimTemplate:
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi

  ## Mount path where PV will be mounted inside container(s).
  mountPath: /export
  ## Sub path inside Mount path where MinIO stores data.
  # subPath: /data

  ## Use this field to provide one or more Secrets with external certificates. This can be used to to configure
  ## TLS for MinIO Tenant pods. Create secrets as explained here:
  ## https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
  externalCertSecret:
    - name: minio-autocert-custom-cert-encryption-localhost-cert
      type: kubernetes.io/tls
  ## Enable automatic Kubernetes based certificate generation and signing as explained in
  ## https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster
  requestAutoCert: true

  ## This field is used only when "requestAutoCert" is set to true. Use this field to set CommonName
  ## for the auto-generated certificate. Internal DNS name for the pod will be used if CommonName is
  ## not provided. DNS name format is *.minio.default.svc.cluster.local
  certConfig:
    commonName: ""
    organizationName: []
    dnsNames: []

  ## PodManagement policy for MinIO Tenant Pods. Can be "OrderedReady" or "Parallel"
  ## Refer https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  ## for details.
  podManagementPolicy: Parallel

  ## Add environment variables to be set in MinIO container (https://github.com/minio/minio/tree/master/docs/config)
  # env:
  # - name: MINIO_BROWSER
  #   value: "off" # to turn-off browser
  # - name: MINIO_STORAGE_CLASS_STANDARD
  #   value: "EC:2"

  ## PriorityClassName indicates the Pod priority and hence importance of a Pod relative to other Pods.
  ## This is applied to MinIO pods only.
  ## Refer Kubernetes documentation for details https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass/
  # priorityClassName: high-priority

  ## Define configuration for KES (stateless and distributed key-management system)
  ## Refer https://github.com/minio/kes
  kes:
    image: minio/kes:v0.16.1
    replicas: 2
    kesSecret:
      name: minio-autocert-custom-cert-encryption-kes-config
