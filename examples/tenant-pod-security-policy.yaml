apiVersion: v1
kind: Secret
metadata:
  name: minio-creds-secret
type: Opaque
data:
  accesskey: bWluaW8= # base 64 encoded "minio" (echo -n 'minio' | base64)
  secretkey: bWluaW8xMjM= # based 64 encoded "minio123" (echo -n 'minio123' | base64)
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-pods
  namespace: default
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: minio-pods-policy
spec:
  privileged: false
  allowPrivilegeEscalation: false
  hostNetwork: true
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: minio-pods-role
rules:
- apiGroups:
  - "policy"
  resources:
  - "podsecuritypolicies"
  verbs:
  - "use"
  resourceNames:
  - "minio-pods-policy"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: minio-pods-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: minio-pods-role
subjects:
- kind: ServiceAccount
  name: minio-pods
  namespace: default
---
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: minio
  ## Optionally pass labels to be applied to the statefulset pods
  labels:
    app: minio
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
## If specified, Tenant pods will be dispatched by specified scheduler.
## If not specified, the pod will be dispatched by default scheduler.
# scheduler:
#  name: my-custom-scheduler
spec:
  ## Registry location and Tag to download MinIO Server image
  image: minio/minio:RELEASE.2021-07-30T00-02-00Z
  ## Service account to be used for all the MinIO Pods
  serviceAccountName: minio-pods
  pools:
    - volumesPerServer: 4
      ## Number of MinIO servers/pods in this pool.
      ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
      ## Note that the operator does not support upgrading from standalone to distributed mode.
      servers: 4
      ## This VolumeClaimTemplate is used across all the volumes provisioned for MinIO cluster.
      ## Please do not change the volumeClaimTemplate field while expanding the cluster, this may
      ## lead to unbound PVCs and missing data
      volumeClaimTemplate:
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Ti
  ## Mount path where PV will be mounted inside container(s). Defaults to "/export".
  mountPath: /export

  ## Sub path inside Mount path where MinIO starts. Defaults to "".
  # subPath: /data

  ## Secret with credentials to be used by MinIO Tenant.
  credsSecret:
    name: minio-creds-secret

  ## PodManagement policy for pods created by StatefulSet. Can be "OrderedReady" or "Parallel"
  ## Refer https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
  ## for details. Defaults to "Parallel"
  podManagementPolicy: Parallel

  ## Use this field to provide a list of Secrets with external certificates. This can be used to to configure
  ## TLS for MinIO Tenant pods. Create secrets as explained here:
  ## https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
  # externalCertSecret:
  #   - name: tls-ssl-minio
  #     type: kubernetes.io/tls

  ## Enable Kubernetes based certificate generation and signing as explained in
  ## https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster
  requestAutoCert: true

  ## Enable S3 specific features such as Bucket DNS which would allow `buckets` to be
  ## accessible as DNS entries of form `<bucketname>.minio.default.svc.cluster.local`
  s3:
    ## This feature is turned off by default
    bucketDNS: false

  ## Used when "requestAutoCert" is set to true. Set CommonName for the auto-generated certificate.
  ## Internal DNS name for the pod will be used if CommonName is not provided.
  ## DNS name format is minio-{0...3}.minio.default.svc.cluster.local
  certConfig:
    commonName: ""
    organizationName: []
    dnsNames: []
  ## Used to specify a toleration for a pod
  # tolerations:
  #  - effect: NoSchedule
  #    key: dedicated
  #    operator: Equal
  #    value: storage
  ## Add environment variables to be set in MinIO container (https://github.com/minio/minio/tree/master/docs/config)
  # env:
    # - name: MINIO_BROWSER
    #  value: "off" # to turn-off browser
    # - name: MINIO_STORAGE_CLASS_STANDARD
    #   value: "EC:2"
  ## Configure resource requests and limits for MinIO containers
  # resources:
    # requests:
      # memory: 20Gi

  ## nodeSelector parameters for MinIO Pods. It specifies a map of key-value pairs. For the pod to be
  ## eligible to run on a node, the node must have each of the
  ## indicated key-value pairs as labels.
  ## Read more here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  # nodeSelector:
  #   disktype: ssd
  ## Affinity settings for MinIO pods. Read more about affinity
  ## here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity.
  # affinity:
