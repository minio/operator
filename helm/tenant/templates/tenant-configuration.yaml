{{- if (.Values.secrets) }}
{{- fail "# ERROR: '.secrets' is deprecated since v5.0.15 and has been removed. Please use '.tenant.configSecret' instead." }}
{{- else }}
{{- if not (.Values.tenant.configSecret) }}
{{- fail "# ERROR: '.tenant.configSecret' should be set." }}
{{- else }}
{{- if not (.Values.tenant.configSecret.existingSecret) }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ dig "tenant" "configSecret" "name" "" (.Values | merge (dict)) }}
type: Opaque
stringData:
  config.env: |-
    export MINIO_ROOT_USER={{ .Values.tenant.configSecret.accessKey | quote }}
    export MINIO_ROOT_PASSWORD={{ .Values.tenant.configSecret.secretKey | quote }}

{{- else }}
{{- if (.Values.tenant.configSecret.accessKey) }}
{{- fail "# ERROR: cannot set access-key when an existing secret is used" }}
{{- end }}
{{- if (.Values.tenant.configSecret.secretKey) }}
{{- fail "# ERROR: cannot set secret-key when an existing secret is used" }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

