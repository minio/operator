// This file is part of MinIO Operator
// Copyright (c) 2023 MinIO, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

// CustomCertificateConfigApplyConfiguration represents an declarative configuration of the CustomCertificateConfig type for use
// with apply.
type CustomCertificateConfigApplyConfiguration struct {
	CertName  *string  `json:"certName,omitempty"`
	Domains   []string `json:"domains,omitempty"`
	Expiry    *string  `json:"expiry,omitempty"`
	ExpiresIn *string  `json:"expiresIn,omitempty"`
	SerialNo  *string  `json:"serialNo,omitempty"`
}

// CustomCertificateConfigApplyConfiguration constructs an declarative configuration of the CustomCertificateConfig type for use with
// apply.
func CustomCertificateConfig() *CustomCertificateConfigApplyConfiguration {
	return &CustomCertificateConfigApplyConfiguration{}
}

// WithCertName sets the CertName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CertName field is set to the value of the last call.
func (b *CustomCertificateConfigApplyConfiguration) WithCertName(value string) *CustomCertificateConfigApplyConfiguration {
	b.CertName = &value
	return b
}

// WithDomains adds the given value to the Domains field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Domains field.
func (b *CustomCertificateConfigApplyConfiguration) WithDomains(values ...string) *CustomCertificateConfigApplyConfiguration {
	for i := range values {
		b.Domains = append(b.Domains, values[i])
	}
	return b
}

// WithExpiry sets the Expiry field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Expiry field is set to the value of the last call.
func (b *CustomCertificateConfigApplyConfiguration) WithExpiry(value string) *CustomCertificateConfigApplyConfiguration {
	b.Expiry = &value
	return b
}

// WithExpiresIn sets the ExpiresIn field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExpiresIn field is set to the value of the last call.
func (b *CustomCertificateConfigApplyConfiguration) WithExpiresIn(value string) *CustomCertificateConfigApplyConfiguration {
	b.ExpiresIn = &value
	return b
}

// WithSerialNo sets the SerialNo field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SerialNo field is set to the value of the last call.
func (b *CustomCertificateConfigApplyConfiguration) WithSerialNo(value string) *CustomCertificateConfigApplyConfiguration {
	b.SerialNo = &value
	return b
}
