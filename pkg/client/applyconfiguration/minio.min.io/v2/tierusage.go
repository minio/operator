// This file is part of MinIO Operator
// Copyright (c) 2023 MinIO, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

// TierUsageApplyConfiguration represents an declarative configuration of the TierUsage type for use
// with apply.
type TierUsageApplyConfiguration struct {
	Name      *string `json:"Name,omitempty"`
	Type      *string `json:"Type,omitempty"`
	TotalSize *int64  `json:"totalSize,omitempty"`
}

// TierUsageApplyConfiguration constructs an declarative configuration of the TierUsage type for use with
// apply.
func TierUsage() *TierUsageApplyConfiguration {
	return &TierUsageApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *TierUsageApplyConfiguration) WithName(value string) *TierUsageApplyConfiguration {
	b.Name = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *TierUsageApplyConfiguration) WithType(value string) *TierUsageApplyConfiguration {
	b.Type = &value
	return b
}

// WithTotalSize sets the TotalSize field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TotalSize field is set to the value of the last call.
func (b *TierUsageApplyConfiguration) WithTotalSize(value int64) *TierUsageApplyConfiguration {
	b.TotalSize = &value
	return b
}
