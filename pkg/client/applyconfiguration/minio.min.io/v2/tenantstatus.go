// This file is part of MinIO Operator
// Copyright (c) 2021 MinIO, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v2

import (
	miniominiov2 "github.com/minio/operator/pkg/apis/minio.min.io/v2"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// TenantStatusApplyConfiguration represents an declarative configuration of the TenantStatus type for use
// with apply.
type TenantStatusApplyConfiguration struct {
	CurrentState       *string                              `json:"currentState,omitempty"`
	AvailableReplicas  *int32                               `json:"availableReplicas,omitempty"`
	Revision           *int32                               `json:"revision,omitempty"`
	SyncVersion        *string                              `json:"syncVersion,omitempty"`
	Certificates       *CertificateStatusApplyConfiguration `json:"certificates,omitempty"`
	Pools              []PoolStatusApplyConfiguration       `json:"pools,omitempty"`
	WriteQuorum        *int32                               `json:"writeQuorum,omitempty"`
	DrivesOnline       *int32                               `json:"drivesOnline,omitempty"`
	DrivesOffline      *int32                               `json:"drivesOffline,omitempty"`
	DrivesHealing      *int32                               `json:"drivesHealing,omitempty"`
	HealthStatus       *miniominiov2.HealthStatus           `json:"healthStatus,omitempty"`
	HealthMessage      *string                              `json:"healthMessage,omitempty"`
	WaitingOnReady     *v1.Time                             `json:"waitingOnReady,omitempty"`
	Usage              *TenantUsageApplyConfiguration       `json:"usage,omitempty"`
	ProvisionedUsers   *bool                                `json:"provisionedUsers,omitempty"`
	ProvisionedBuckets *bool                                `json:"provisionedBuckets,omitempty"`
}

// TenantStatusApplyConfiguration constructs an declarative configuration of the TenantStatus type for use with
// apply.
func TenantStatus() *TenantStatusApplyConfiguration {
	return &TenantStatusApplyConfiguration{}
}

// WithCurrentState sets the CurrentState field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CurrentState field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithCurrentState(value string) *TenantStatusApplyConfiguration {
	b.CurrentState = &value
	return b
}

// WithAvailableReplicas sets the AvailableReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AvailableReplicas field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithAvailableReplicas(value int32) *TenantStatusApplyConfiguration {
	b.AvailableReplicas = &value
	return b
}

// WithRevision sets the Revision field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Revision field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithRevision(value int32) *TenantStatusApplyConfiguration {
	b.Revision = &value
	return b
}

// WithSyncVersion sets the SyncVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SyncVersion field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithSyncVersion(value string) *TenantStatusApplyConfiguration {
	b.SyncVersion = &value
	return b
}

// WithCertificates sets the Certificates field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Certificates field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithCertificates(value *CertificateStatusApplyConfiguration) *TenantStatusApplyConfiguration {
	b.Certificates = value
	return b
}

// WithPools adds the given value to the Pools field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Pools field.
func (b *TenantStatusApplyConfiguration) WithPools(values ...*PoolStatusApplyConfiguration) *TenantStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithPools")
		}
		b.Pools = append(b.Pools, *values[i])
	}
	return b
}

// WithWriteQuorum sets the WriteQuorum field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WriteQuorum field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithWriteQuorum(value int32) *TenantStatusApplyConfiguration {
	b.WriteQuorum = &value
	return b
}

// WithDrivesOnline sets the DrivesOnline field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DrivesOnline field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithDrivesOnline(value int32) *TenantStatusApplyConfiguration {
	b.DrivesOnline = &value
	return b
}

// WithDrivesOffline sets the DrivesOffline field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DrivesOffline field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithDrivesOffline(value int32) *TenantStatusApplyConfiguration {
	b.DrivesOffline = &value
	return b
}

// WithDrivesHealing sets the DrivesHealing field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DrivesHealing field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithDrivesHealing(value int32) *TenantStatusApplyConfiguration {
	b.DrivesHealing = &value
	return b
}

// WithHealthStatus sets the HealthStatus field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HealthStatus field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithHealthStatus(value miniominiov2.HealthStatus) *TenantStatusApplyConfiguration {
	b.HealthStatus = &value
	return b
}

// WithHealthMessage sets the HealthMessage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HealthMessage field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithHealthMessage(value string) *TenantStatusApplyConfiguration {
	b.HealthMessage = &value
	return b
}

// WithWaitingOnReady sets the WaitingOnReady field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WaitingOnReady field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithWaitingOnReady(value v1.Time) *TenantStatusApplyConfiguration {
	b.WaitingOnReady = &value
	return b
}

// WithUsage sets the Usage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Usage field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithUsage(value *TenantUsageApplyConfiguration) *TenantStatusApplyConfiguration {
	b.Usage = value
	return b
}

// WithProvisionedUsers sets the ProvisionedUsers field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProvisionedUsers field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithProvisionedUsers(value bool) *TenantStatusApplyConfiguration {
	b.ProvisionedUsers = &value
	return b
}

// WithProvisionedBuckets sets the ProvisionedBuckets field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProvisionedBuckets field is set to the value of the last call.
func (b *TenantStatusApplyConfiguration) WithProvisionedBuckets(value bool) *TenantStatusApplyConfiguration {
	b.ProvisionedBuckets = &value
	return b
}
