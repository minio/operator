// This file is part of MinIO Operator
// Copyright (c) 2024 MinIO, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v2 "github.com/minio/operator/pkg/apis/minio.min.io/v2"
	miniominiov2 "github.com/minio/operator/pkg/client/applyconfiguration/minio.min.io/v2"
	typedminiominiov2 "github.com/minio/operator/pkg/client/clientset/versioned/typed/minio.min.io/v2"
	gentype "k8s.io/client-go/gentype"
)

// fakeTenants implements TenantInterface
type fakeTenants struct {
	*gentype.FakeClientWithListAndApply[*v2.Tenant, *v2.TenantList, *miniominiov2.TenantApplyConfiguration]
	Fake *FakeMinioV2
}

func newFakeTenants(fake *FakeMinioV2, namespace string) typedminiominiov2.TenantInterface {
	return &fakeTenants{
		gentype.NewFakeClientWithListAndApply[*v2.Tenant, *v2.TenantList, *miniominiov2.TenantApplyConfiguration](
			fake.Fake,
			namespace,
			v2.SchemeGroupVersion.WithResource("tenants"),
			v2.SchemeGroupVersion.WithKind("Tenant"),
			func() *v2.Tenant { return &v2.Tenant{} },
			func() *v2.TenantList { return &v2.TenantList{} },
			func(dst, src *v2.TenantList) { dst.ListMeta = src.ListMeta },
			func(list *v2.TenantList) []*v2.Tenant { return gentype.ToPointerSlice(list.Items) },
			func(list *v2.TenantList, items []*v2.Tenant) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
