// This file is part of MinIO Operator
// Copyright (c) 2023 MinIO, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/minio/operator/pkg/apis/job.min.io/v1alpha1"
	jobminiov1alpha1 "github.com/minio/operator/pkg/client/applyconfiguration/job.min.io/v1alpha1"
	typedjobminiov1alpha1 "github.com/minio/operator/pkg/client/clientset/versioned/typed/job.min.io/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeMinIOJobs implements MinIOJobInterface
type fakeMinIOJobs struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.MinIOJob, *v1alpha1.MinIOJobList, *jobminiov1alpha1.MinIOJobApplyConfiguration]
	Fake *FakeJobV1alpha1
}

func newFakeMinIOJobs(fake *FakeJobV1alpha1, namespace string) typedjobminiov1alpha1.MinIOJobInterface {
	return &fakeMinIOJobs{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.MinIOJob, *v1alpha1.MinIOJobList, *jobminiov1alpha1.MinIOJobApplyConfiguration](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("miniojobs"),
			v1alpha1.SchemeGroupVersion.WithKind("MinIOJob"),
			func() *v1alpha1.MinIOJob { return &v1alpha1.MinIOJob{} },
			func() *v1alpha1.MinIOJobList { return &v1alpha1.MinIOJobList{} },
			func(dst, src *v1alpha1.MinIOJobList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.MinIOJobList) []*v1alpha1.MinIOJob { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.MinIOJobList, items []*v1alpha1.MinIOJob) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
